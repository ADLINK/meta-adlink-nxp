From d5d8fc95b8dc5f5d00079f4f0f8d110776a2b6c6 Mon Sep 17 00:00:00 2001
From: Dinesh V <dinesh.v@adlinktech.com>
Date: Wed, 13 Sep 2023 16:48:58 +0530
Subject: [PATCH] Added-kernel-version-5.13.19-support.patch

---
 bt/bt_init.c    | 32 ++++++++++----------------------
 bt/bt_sdiommc.c | 16 ++++++----------
 bt/mbt_char.c   | 29 ++++++++++++++++++++---------
 3 files changed, 36 insertions(+), 41 deletions(-)
 mode change 100755 => 100644 bt/bt_init.c
 mode change 100755 => 100644 bt/bt_sdiommc.c
 mode change 100755 => 100644 bt/mbt_char.c

diff --git a/bt/bt_init.c b/bt/bt_init.c
old mode 100755
new mode 100644
index cf9bfc4..3a1c667
--- a/bt/bt_init.c
+++ b/bt/bt_init.c
@@ -730,24 +730,18 @@ bt_cal_config(bt_private *priv, char *cal_file, char *mac)
 
 	ENTER();
 	if (bt_req_fw_nowait) {
-#if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 32)
-		ret = request_firmware_nowait(THIS_MODULE, FW_ACTION_HOTPLUG,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 13, 19)	
+		ret = request_firmware_nowait(THIS_MODULE, FW_ACTION_UEVENT,
 					      cal_file, priv->hotplug_device,
 					      GFP_KERNEL, priv,
-					      bt_request_init_user_conf_callback);
+					      bt_request_init_user_conf_callback);	
 #else
-#if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 13)
 		ret = request_firmware_nowait(THIS_MODULE, FW_ACTION_HOTPLUG,
 					      cal_file, priv->hotplug_device,
-					      priv,
-					      bt_request_init_user_conf_callback);
-#else
-		ret = request_firmware_nowait(THIS_MODULE,
-					      cal_file, priv->hotplug_device,
-					      priv,
+					      GFP_KERNEL, priv,
 					      bt_request_init_user_conf_callback);
 #endif
-#endif
+
 		if (ret < 0) {
 			PRINTM(FATAL,
 			       "BT: bt_cal_config() failed, error code = %#x cal_file=%s\n",
@@ -795,24 +789,18 @@ bt_cal_config_ext(bt_private *priv, char *cal_file)
 
 	ENTER();
 	if (bt_req_fw_nowait) {
-#if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 32)
-		ret = request_firmware_nowait(THIS_MODULE, FW_ACTION_HOTPLUG,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 13, 19)	
+		ret = request_firmware_nowait(THIS_MODULE, FW_ACTION_UEVENT,
 					      cal_file, priv->hotplug_device,
 					      GFP_KERNEL, priv,
-					      bt_request_init_user_conf_callback);
+					      bt_request_init_user_conf_callback);	
 #else
-#if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 13)
 		ret = request_firmware_nowait(THIS_MODULE, FW_ACTION_HOTPLUG,
 					      cal_file, priv->hotplug_device,
-					      priv,
-					      bt_request_init_user_conf_callback);
-#else
-		ret = request_firmware_nowait(THIS_MODULE,
-					      cal_file, priv->hotplug_device,
-					      priv,
+					      GFP_KERNEL, priv,
 					      bt_request_init_user_conf_callback);
 #endif
-#endif
+
 		if (ret < 0) {
 			PRINTM(FATAL,
 			       "BT: bt_cal_config_ext() failed, error code = %#x cal_file=%s\n",
diff --git a/bt/bt_sdiommc.c b/bt/bt_sdiommc.c
old mode 100755
new mode 100644
index 0aef1f3..2f56aed
--- a/bt/bt_sdiommc.c
+++ b/bt/bt_sdiommc.c
@@ -838,22 +838,18 @@ sd_download_firmware_w_helper(bt_private *priv)
 
 	PRINTM(MSG, "BT Request firmware: %s\n", cur_fw_name);
 	if (bt_req_fw_nowait) {
-#if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 32)
-		ret = request_firmware_nowait(THIS_MODULE, FW_ACTION_HOTPLUG,
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 13, 19)	
+		ret = request_firmware_nowait(THIS_MODULE, FW_ACTION_UEVENT,
 					      cur_fw_name, priv->hotplug_device,
 					      GFP_KERNEL, priv,
-					      sd_request_fw_callback);
+					      sd_request_fw_callback);	
 #else
-#if LINUX_VERSION_CODE > KERNEL_VERSION(2, 6, 13)
 		ret = request_firmware_nowait(THIS_MODULE, FW_ACTION_HOTPLUG,
 					      cur_fw_name, priv->hotplug_device,
-					      priv, sd_request_fw_callback);
-#else
-		ret = request_firmware_nowait(THIS_MODULE,
-					      cur_fw_name, priv->hotplug_device,
-					      priv, sd_request_fw_callback);
-#endif
+					      GFP_KERNEL, priv,
+					      sd_request_fw_callback);
 #endif
+
 		if (ret < 0)
 			PRINTM(FATAL,
 			       "BT: request_firmware_nowait() failed, error code = %#x\n",
diff --git a/bt/mbt_char.c b/bt/mbt_char.c
old mode 100755
new mode 100644
index 2f64382..4462fe5
--- a/bt/mbt_char.c
+++ b/bt/mbt_char.c
@@ -96,6 +96,7 @@ mbtchar_chmod(char *name, mode_t mode)
 	struct iattr newattrs;
 	int ret;
 	int retrycount = 0;
+struct user_namespace *mnt_userns;
 
 	ENTER();
 	do {
@@ -120,15 +121,21 @@ mbtchar_chmod(char *name, mode_t mode)
 #endif
 	newattrs.ia_mode = (mode & S_IALLUGO) | (inode->i_mode & ~S_IALLUGO);
 	newattrs.ia_valid = ATTR_MODE | ATTR_CTIME;
+	
 	if (inode->i_op->setattr)
-		ret = inode->i_op->setattr(path.dentry, &newattrs);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 13, 19)	
+		ret = inode->i_op->setattr(mnt_userns,path.dentry, &newattrs);
+#else
+		ret = inode->i_op->setattr(path.dentry, &newattrs);	
+#endif			
 	else
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 35)
-		ret = simple_setattr(path.dentry, &newattrs);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 13, 19)	
+		ret = simple_setattr(mnt_userns,path.dentry, &newattrs);
 #else
-		ret = inode_setattr(inode, &newattrs);
+		ret = simple_setattr(path.dentry, &newattrs);
 #endif
 
+
 #if LINUX_VERSION_CODE < KERNEL_VERSION(4,7,0)
 	mutex_unlock(&inode->i_mutex);
 #else
@@ -161,7 +168,7 @@ mbtchar_chown(char *name, uid_t user, gid_t group)
 	struct iattr newattrs;
 	int ret = 0;
 	int retrycount = 0;
-
+struct user_namespace *mnt_userns;
 	ENTER();
 	do {
 		os_sched_timeout(30);
@@ -203,12 +210,16 @@ mbtchar_chown(char *name, uid_t user, gid_t group)
 		newattrs.ia_valid |=
 			ATTR_KILL_SUID | ATTR_KILL_SGID | ATTR_KILL_PRIV;
 	if (inode->i_op->setattr)
-		ret = inode->i_op->setattr(path.dentry, &newattrs);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 13, 19)	
+		ret = inode->i_op->setattr(mnt_userns,path.dentry, &newattrs);
+#else
+		ret = inode->i_op->setattr(path.dentry, &newattrs);	
+#endif		
 	else
-#if LINUX_VERSION_CODE >= KERNEL_VERSION(2, 6, 35)
-		ret = simple_setattr(path.dentry, &newattrs);
+#if LINUX_VERSION_CODE >= KERNEL_VERSION(5, 13, 19)	
+		ret = simple_setattr(mnt_userns,path.dentry, &newattrs);
 #else
-		ret = inode_setattr(inode, &newattrs);
+		ret = simple_setattr(path.dentry, &newattrs);
 #endif
 
 #if LINUX_VERSION_CODE < KERNEL_VERSION(4,7,0)
-- 
2.25.1

