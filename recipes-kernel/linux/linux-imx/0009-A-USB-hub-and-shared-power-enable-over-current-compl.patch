From e89287809a8359741de4d6c5fee9b5a8b69c67cd Mon Sep 17 00:00:00 2001
From: Antony Abee Prakash XV <antonyabee.prakashxv@adlinktech.com>
Date: Thu, 23 Jul 2020 12:59:19 +0530
Subject: [PATCH 9/9] A USB hub and shared power-enable/over-current complicate
 things

- We now have 3 power-enables instead of 2.
- Use different GPIO lines, which also must be configured for open-drain.
- The 3rd port is created by splitting usbh1 with a hub, so one USB host
  of the i.MX6 has to enable 2 power regulators. We have to chain them
  to make it work.
- Disable over-current detection.

Signed-off-by: Antony Abee Prakash XV <antonyabee.prakashxv@adlinktech.com>
---
 arch/arm/boot/dts/lec-imx6.dtsi | 47 +++++++++++++++++++++++----------
 1 file changed, 33 insertions(+), 14 deletions(-)

diff --git a/arch/arm/boot/dts/lec-imx6.dtsi b/arch/arm/boot/dts/lec-imx6.dtsi
index bd01c73495e8..c52083dda4ce 100644
--- a/arch/arm/boot/dts/lec-imx6.dtsi
+++ b/arch/arm/boot/dts/lec-imx6.dtsi
@@ -37,26 +37,42 @@
 		reg = <0x10000000 0x40000000>;
 	};
 
-	reg_usb_otg_vbus: regulator-usb-otg-vbus {
+	reg_smarc_usb0: regulator-smarc-usb0 {
 		compatible = "regulator-fixed";
-		regulator-name = "usb_otg_vbus";
+		regulator-name = "smarc_usb0";
 		regulator-min-microvolt = <5000000>;
 		regulator-max-microvolt = <5000000>;
-		gpio = <&gpio3 22 GPIO_ACTIVE_HIGH>;
+		gpio = <&gpio1 27 GPIO_ACTIVE_HIGH>;	/* SMARC USB0_EN_OC# */
 		enable-active-high;
-		vin-supply = <&swbst_reg>;
 	};
 
-	reg_usb_h1_vbus: regulator-usb-h1-vbus {
+	reg_smarc_usb1: regulator-smarc-usb1 {
 		compatible = "regulator-fixed";
-		regulator-name = "usb_h1_vbus";
+		regulator-name = "smarc_usb1";
 		regulator-min-microvolt = <5000000>;
 		regulator-max-microvolt = <5000000>;
-		gpio = <&gpio1 29 GPIO_ACTIVE_HIGH>;
+		gpio = <&gpio3 29 GPIO_ACTIVE_HIGH>;	/* SMARC USB1_EN_OC# */
 		enable-active-high;
+		/* Before enabling Vbus on the carrier power up the host phy's Vbus. */
 		vin-supply = <&swbst_reg>;
 	};
 
+	reg_smarc_usb2: regulator-smarc-usb2 {
+		compatible = "regulator-fixed";
+		regulator-name = "smarc_usb2";
+		regulator-min-microvolt = <5000000>;
+		regulator-max-microvolt = <5000000>;
+		gpio = <&gpio3 30 GPIO_ACTIVE_HIGH>; /* SMARC USB2_EN_OC# */
+		enable-active-high;
+		/* An on-module hub splits the i.MX6's usbh1 port into SMARC USB1 and 2.
+		 * Devices on both are powered independently, via reg_smarc_usb1 and 2.
+		 * But I've seen no way to model the hub in the device tree and usbh1
+		 * takes only 1 "vbus-supply" line. So by declaring one as vin-supply
+		 * for the other we trick usbh1 into enabling both. If someone needed to
+		 * enable them separately they'd have to do it manually in user mode. */
+		vin-supply = <&reg_smarc_usb1>;
+	};
+
 	reg_smarc_sdio_pwr: regulator-smarc-sdio-pwr {
 		compatible = "regulator-fixed";
 		regulator-name = "smarc_sdio_pwr";
@@ -708,7 +724,9 @@
 				MX6QDL_PAD_ENET_TXD1__GPIO1_IO29 0x1b0b0
 				MX6QDL_PAD_EIM_D22__GPIO3_IO22  0x1b0b0
 				MX6QDL_PAD_EIM_CS1__GPIO2_IO24 0x80000000
-				MX6QDL_PAD_ENET_RXD0__GPIO1_IO27 0x80000000
+				MX6QDL_PAD_ENET_RXD0__GPIO1_IO27 0x80000000 /* SMARC USB0_EN_OC# (open-drain) */
+				MX6QDL_PAD_EIM_D29__GPIO3_IO29	0x1a8b0 /* SMARC USB1_EN_OC# (open-drain) */
+				MX6QDL_PAD_EIM_D30__GPIO3_IO30	0x1a8b0 /* SMARC USB2_EN_OC# (open-drain) */
 				MX6QDL_PAD_EIM_D23__GPIO3_IO23 0x80000000
 				MX6QDL_PAD_SD3_RST__GPIO7_IO08 0x80000000
 				MX6QDL_PAD_GPIO_9__GPIO1_IO09  0x80000000
@@ -762,7 +780,6 @@
 
 		pinctrl_gpio_keys: gpio_keysgrp {
 			fsl,pins = <
-				MX6QDL_PAD_EIM_D29__GPIO3_IO29 0x1b0b0
 				MX6QDL_PAD_GPIO_4__GPIO1_IO04  0x1b0b0
 				MX6QDL_PAD_GPIO_5__GPIO1_IO05  0x1b0b0
 			>;
@@ -981,7 +998,7 @@
 		};
 
 		pinctrl_usbotg: usbotggrp {
-			fsl,pins = <
+			fsl,pins = <	/* SMARC USB0 */
 				MX6QDL_PAD_ENET_RX_ER__USB_OTG_ID	0x17059
 			>;
 		};
@@ -1162,15 +1179,17 @@
 	status = "okay";
 };
 
-&usbh1 {
-	vbus-supply = <&reg_usb_h1_vbus>;
+&usbh1 {	/* SMARC USB1,2 */
+	vbus-supply = <&reg_smarc_usb2>; /* chained with usb1, see above */
+	disable-over-current; /* connects to SMARC USB2_EN_OC# but not USB1_ */
 	status = "okay";
 };
 
-&usbotg {
-	vbus-supply = <&reg_usb_otg_vbus>;
+&usbotg {	/* SMARC USB0 */
+	vbus-supply = <&reg_smarc_usb0>;
 	pinctrl-names = "default";
 	pinctrl-0 = <&pinctrl_usbotg>;
+	//dr_mode = "peripheral"; /* default is "otg", override with "host" or "peripheral" to set fixed role */
 	disable-over-current;
 	status = "okay";
 };
-- 
2.17.1

