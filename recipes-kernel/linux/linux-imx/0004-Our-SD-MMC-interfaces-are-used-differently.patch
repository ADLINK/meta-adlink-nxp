From 5b14104435ad44b4c69e6cd8fb4be65942c0ade3 Mon Sep 17 00:00:00 2001
From: Antony Abee Prakash XV <antonyabee.prakashxv@adlinktech.com>
Date: Mon, 20 Jul 2020 11:59:45 +0530
Subject: [PATCH 4/4] Our SD/MMC interfaces are used differently

- We can gate power to SD2, so add a regulator definition for that.
- Quite different pinmux, of course.
- We use SD1,2,4 instead of interfaces 2,3,4.
- Changed feature sets (WP pin, change detect, data width, 1.8V support).

Signed-off-by: Antony Abee Prakash XV <antonyabee.prakashxv@adlinktech.com>
---
 arch/arm/boot/dts/lec-imx6.dtsi | 84 ++++++++++++++++++---------------
 1 file changed, 46 insertions(+), 38 deletions(-)

diff --git a/arch/arm/boot/dts/lec-imx6.dtsi b/arch/arm/boot/dts/lec-imx6.dtsi
index 6ee8b28653cd..b675eb97f91f 100644
--- a/arch/arm/boot/dts/lec-imx6.dtsi
+++ b/arch/arm/boot/dts/lec-imx6.dtsi
@@ -57,6 +57,16 @@
 		vin-supply = <&swbst_reg>;
 	};
 
+	reg_smarc_sdio_pwr: regulator-smarc-sdio-pwr {
+		compatible = "regulator-fixed";
+		regulator-name = "smarc_sdio_pwr";
+		regulator-min-microvolt = <3300000>;
+		regulator-max-microvolt = <3300000>;
+		gpio = <&gpio4 11 GPIO_ACTIVE_HIGH>; /* SMARC SDIO_PWR_EN */
+		enable-active-high;
+		regulator-boot-on;
+	};
+
 	reg_audio: regulator-audio {
 		compatible = "regulator-fixed";
 		regulator-name = "wm8962-supply";
@@ -678,10 +688,6 @@
 	lec-imx6 {
 		pinctrl_hog: hoggrp {
 			fsl,pins = <
-				MX6QDL_PAD_NANDF_D0__GPIO2_IO00 0x1b0b0
-				MX6QDL_PAD_NANDF_D1__GPIO2_IO01 0x1b0b0
-				MX6QDL_PAD_NANDF_D2__GPIO2_IO02 0x1b0b0
-				MX6QDL_PAD_NANDF_D3__GPIO2_IO03 0x1b0b0
 				MX6QDL_PAD_GPIO_0__CCM_CLKO1    0x130b0
 				MX6QDL_PAD_NANDF_CLE__GPIO6_IO07 0x1b0b0
 				MX6QDL_PAD_ENET_TXD1__GPIO1_IO29 0x1b0b0
@@ -920,7 +926,7 @@
 
 		pinctrl_pwm1: pwm1grp {
 			fsl,pins = <
-				MX6QDL_PAD_SD1_DAT3__PWM1_OUT		0x1b0b1
+				MX6QDL_PAD_GPIO_9__PWM1_OUT	0x1b0b1 /* SMARC LCD_BKLT_PWM */
 			>;
 		};
 
@@ -968,38 +974,37 @@
 			>;
 		};
 
+		pinctrl_usdhc1: usdhc1grp {
+			fsl,pins = <    /* on-module eMMC */
+				MX6QDL_PAD_SD1_CMD__SD1_CMD             0x17059
+				MX6QDL_PAD_SD1_CLK__SD1_CLK             0x10059
+				MX6QDL_PAD_SD1_DAT0__SD1_DATA0          0x17059
+				MX6QDL_PAD_SD1_DAT1__SD1_DATA1          0x17059
+				MX6QDL_PAD_SD1_DAT2__SD1_DATA2          0x17059
+				MX6QDL_PAD_SD1_DAT3__SD1_DATA3          0x17059
+				MX6QDL_PAD_NANDF_D0__SD1_DATA4          0x17059
+				MX6QDL_PAD_NANDF_D1__SD1_DATA5          0x17059
+				MX6QDL_PAD_NANDF_D2__SD1_DATA6          0x17059
+				MX6QDL_PAD_NANDF_D3__SD1_DATA7          0x17059
+			>;
+		};
+
 		pinctrl_usdhc2: usdhc2grp {
-			fsl,pins = <
+			fsl,pins = <	/* SMARC SDIO */
 				MX6QDL_PAD_SD2_CMD__SD2_CMD		0x17059
 				MX6QDL_PAD_SD2_CLK__SD2_CLK		0x10059
 				MX6QDL_PAD_SD2_DAT0__SD2_DATA0		0x17059
 				MX6QDL_PAD_SD2_DAT1__SD2_DATA1		0x17059
 				MX6QDL_PAD_SD2_DAT2__SD2_DATA2		0x17059
 				MX6QDL_PAD_SD2_DAT3__SD2_DATA3		0x17059
-				MX6QDL_PAD_NANDF_D4__SD2_DATA4		0x17059
-				MX6QDL_PAD_NANDF_D5__SD2_DATA5		0x17059
-				MX6QDL_PAD_NANDF_D6__SD2_DATA6		0x17059
-				MX6QDL_PAD_NANDF_D7__SD2_DATA7		0x17059
-			>;
-		};
-
-		pinctrl_usdhc3: usdhc3grp {
-			fsl,pins = <
-				MX6QDL_PAD_SD3_CMD__SD3_CMD		0x17059
-				MX6QDL_PAD_SD3_CLK__SD3_CLK		0x10059
-				MX6QDL_PAD_SD3_DAT0__SD3_DATA0		0x17059
-				MX6QDL_PAD_SD3_DAT1__SD3_DATA1		0x17059
-				MX6QDL_PAD_SD3_DAT2__SD3_DATA2		0x17059
-				MX6QDL_PAD_SD3_DAT3__SD3_DATA3		0x17059
-				MX6QDL_PAD_SD3_DAT4__SD3_DATA4		0x17059
-				MX6QDL_PAD_SD3_DAT5__SD3_DATA5		0x17059
-				MX6QDL_PAD_SD3_DAT6__SD3_DATA6		0x17059
-				MX6QDL_PAD_SD3_DAT7__SD3_DATA7		0x17059
+				//MX6QDL_PAD_GPIO_4__SD2_CD_B		0x80000000 /* controller internal CD doesn't work */
+				MX6QDL_PAD_GPIO_4__GPIO1_IO04		0x80000000 /* SD2_CD_B: mux as GPIO instead */
+				MX6QDL_PAD_GPIO_2__SD2_WP		0x80000000
 			>;
 		};
 
 		pinctrl_usdhc4: usdhc4grp {
-			fsl,pins = <
+			fsl,pins = <	/* SMARC SDMMC */
 				MX6QDL_PAD_SD4_CMD__SD4_CMD		0x17059
 				MX6QDL_PAD_SD4_CLK__SD4_CLK		0x10059
 				MX6QDL_PAD_SD4_DAT0__SD4_DATA0		0x17059
@@ -1010,6 +1015,7 @@
 				MX6QDL_PAD_SD4_DAT5__SD4_DATA5		0x17059
 				MX6QDL_PAD_SD4_DAT6__SD4_DATA6		0x17059
 				MX6QDL_PAD_SD4_DAT7__SD4_DATA7		0x17059
+				MX6QDL_PAD_NANDF_ALE__SD4_RESET		0x80000000
 			>;
 		};
 
@@ -1157,29 +1163,31 @@
 	status = "okay";
 };
 
-&usdhc2 {
+&usdhc1 {	/* on-module eMMC */
 	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_usdhc2>;
+	pinctrl-0 = <&pinctrl_usdhc1>;
 	bus-width = <8>;
-	cd-gpios = <&gpio2 2 GPIO_ACTIVE_LOW>;
-	wp-gpios = <&gpio2 3 GPIO_ACTIVE_HIGH>;
+	non-removable;
 	status = "okay";
 };
 
-&usdhc3 {
-	pinctrl-names = "default";
-	pinctrl-0 = <&pinctrl_usdhc3>;
-	bus-width = <8>;
-	cd-gpios = <&gpio2 0 GPIO_ACTIVE_LOW>;
-	wp-gpios = <&gpio2 1 GPIO_ACTIVE_HIGH>;
+&usdhc2 {	/* SMARC SDIO */
+	pinctrl-0 = <&pinctrl_usdhc2>;
+	bus-width = <4>;
+	//fsl,cd-controller; /* using controller internal CD doesn't work properly */
+	cd-gpios = <&gpio1 4 GPIO_ACTIVE_LOW>; /* need to treat it as GPIO instead */
+	fsl,wp-controller;
+	vmmc-supply = <&reg_smarc_sdio_pwr>;
+	vqmmc-supply = <&reg_smarc_sdio_pwr>;
 	status = "okay";
 };
 
-&usdhc4 {
+&usdhc4 {	/* SMARC SDMMC */
 	pinctrl-names = "default";
 	pinctrl-0 = <&pinctrl_usdhc4>;
 	bus-width = <8>;
-	non-removable;
+	//non-removable; /* eMMC: no polling saves power */
+	broken-cd; /* uSD slot on carrier: polling allows switching cards */
 	no-1-8-v;
 	auto-cmd23-broken;
 	status = "okay";
-- 
2.17.1

