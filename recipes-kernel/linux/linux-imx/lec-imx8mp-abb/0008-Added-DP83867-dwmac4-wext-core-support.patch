From 6e1f77ef9b5305dd35881248cabf504b7772dc7f Mon Sep 17 00:00:00 2001
From: "arun.tamilselvan" <arun.tamilselvan@adlinktech.com>
Date: Fri, 28 Mar 2025 15:36:48 +0530
Subject: [PATCH] Added DP83867 dwmac4 wext-core support

---
 .../net/ethernet/stmicro/stmmac/dwmac4_core.c |  4 +++
 drivers/net/phy/dp83867.c                     | 36 +++++++++++++++++++
 net/wireless/wext-core.c                      |  5 +++
 3 files changed, 45 insertions(+)

diff --git a/drivers/net/ethernet/stmicro/stmmac/dwmac4_core.c b/drivers/net/ethernet/stmicro/stmmac/dwmac4_core.c
index b21745368983..f2badbfc4d1b 100644
--- a/drivers/net/ethernet/stmicro/stmmac/dwmac4_core.c
+++ b/drivers/net/ethernet/stmicro/stmmac/dwmac4_core.c
@@ -475,11 +475,13 @@ static int dwmac4_add_hw_vlan_rx_fltr(struct net_device *dev,
 	if (vid > 4095)
 		return -EINVAL;
 
+#if 0
 	if (hw->promisc) {
 		netdev_err(dev,
 			   "Adding VLAN in promisc mode not supported\n");
 		return -EPERM;
 	}
+#endif
 
 	/* Single Rx VLAN Filter */
 	if (hw->num_vlan == 1) {
@@ -530,11 +532,13 @@ static int dwmac4_del_hw_vlan_rx_fltr(struct net_device *dev,
 {
 	int i, ret = 0;
 
+#if 0
 	if (hw->promisc) {
 		netdev_err(dev,
 			   "Deleting VLAN in promisc mode not supported\n");
 		return -EPERM;
 	}
+#endif
 
 	/* Single Rx VLAN Filter */
 	if (hw->num_vlan == 1) {
diff --git a/drivers/net/phy/dp83867.c b/drivers/net/phy/dp83867.c
index d097097c93c3..f114678ebce2 100644
--- a/drivers/net/phy/dp83867.c
+++ b/drivers/net/phy/dp83867.c
@@ -24,6 +24,11 @@
 #define MII_DP83867_PHYSTS	0x11
 #define MII_DP83867_MICR	0x12
 #define MII_DP83867_ISR		0x13
+
+/* Extended LED Registers */
+#define DP83867_LEDCR1		0x0018
+#define DP83867_LEDCR2		0x0019
+#define DP83867_CTRL		0x1f
 #define DP83867_CFG2		0x14
 #define DP83867_CFG3		0x1e
 #define DP83867_CTRL		0x1f
@@ -820,6 +825,37 @@ static int dp83867_config_init(struct phy_device *phydev)
 			       mask, val);
 	}
 
+	/* LED Configuration for SMARC series boards */
+	/* Set LED pins' function - set LED_0 1011, LED_1 0110, LED_2 0101, LED_GPIO 1111 */
+	/* LED_0    1011: Link established, blink for transmit or receive activity */
+	/* LED_1    0110: 100 BTX link established */
+	/* LED_2    0101: 1000BT link established */
+	/* LED_GPIO 1111: Reserved */
+	val = phy_read(phydev, DP83867_LEDCR1);
+	if (val < 0)
+		return val;
+
+	if ((val & 0xFFFF) != 0xF56B) {
+		val &= ~0xFFFF;
+		val |= 0xF56B;
+		ret = phy_write(phydev, DP83867_LEDCR1, val);
+		if (ret)
+			return ret;
+	}
+
+	/* Control LED outputs' ability - set LED_0, LED_1, LED_2 active low, LED_GPIO reserve */
+	val = phy_read(phydev, DP83867_LEDCR2);
+	if (val < 0)
+		return val;
+
+	if ((val & 0xFFFF) != 0x0000) {
+		val &= ~0xFFFF;
+		val |= 0x0000;
+		ret = phy_write(phydev, DP83867_LEDCR2, val);
+		if (ret)
+			return ret;
+	}
+
 	return 0;
 }
 
diff --git a/net/wireless/wext-core.c b/net/wireless/wext-core.c
index 76a80a41615b..b6c9af40205c 100644
--- a/net/wireless/wext-core.c
+++ b/net/wireless/wext-core.c
@@ -956,6 +956,11 @@ static int wireless_process_ioctl(struct net *net, struct iwreq *iwr,
 		else if (private)
 			return private(dev, iwr, cmd, info, handler);
 	}
+
+	/* Use Old driver API : call driver ioctl handler */
+	if (dev && dev->netdev_ops && dev->netdev_ops->ndo_do_ioctl)
+		return dev->netdev_ops->ndo_do_ioctl(dev, (struct ifreq *)iwr, cmd);
+
 	return -EOPNOTSUPP;
 }
 
-- 
2.25.1

