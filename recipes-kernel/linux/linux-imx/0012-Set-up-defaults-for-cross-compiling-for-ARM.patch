From 934a10f099cf894eb1c884aa396d7c6b2405d843 Mon Sep 17 00:00:00 2001
From: Dinesh kumar <dineshkumar.varadarajan@adlinktech.com>
Date: Thu, 4 Apr 2019 15:43:47 +0530
Subject: [PATCH 12/47] Set up defaults for cross-compiling for ARM.

Usually you'd have to do "make ARCH=arm CROSS_COMPILE=... menuconfig" or
similar every time, because a simple "make" would guess ARCH from the host,
i.e. x86 usually, and completely mess up the .config, even if you later use
ARCH=arm again. This can lead to very strange errors. Forgetting e.g.
CROSS_COMPILE=arm-linux-gnueabihf- hasn't such serious consequences except
that compiling will fail, but it's tiring to type every time.

Default ARCH is changed in the top level Makefile. That's not how it's meant
to work for the mainline, but this patched source tree is i.MX6-specific
anyway. CROSS_COMPILE is set in the defconfig, i.e. it can be changed easily
with "make menuconfig" - and has to be if using a different cross-compiler.

After changing the defaults a convenient "make menuconfig" or "make modules"
will again suffice.

Signed-off-by: Dinesh kumar <dineshkumar.varadarajan@adlinktech.com>
---
 Makefile | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/Makefile b/Makefile
index 89574ee..74658ae 100644
--- a/Makefile
+++ b/Makefile
@@ -310,7 +310,7 @@ SUBARCH := $(shell uname -m | sed -e s/i.86/x86/ -e s/x86_64/x86/ \
 # "make" in the configured kernel build directory always uses that.
 # Default value for CROSS_COMPILE is not to prefix executables
 # Note: Some architectures assign CROSS_COMPILE in their arch/*/Makefile
-ARCH		?= $(SUBARCH)
+ARCH		?= arm
 CROSS_COMPILE	?= $(CONFIG_CROSS_COMPILE:"%"=%)
 
 # Architecture as present in compile.h
-- 
2.7.4

