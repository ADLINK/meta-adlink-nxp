From 1910ce0749a4e24e824248c28671258311ceb83c Mon Sep 17 00:00:00 2001
From: Antony Abee Prakash XV <antonyabee.prakashxv@adlinktech.com>
Date: Thu, 10 Sep 2020 11:10:58 +0530
Subject: [PATCH 44/44] Support for i.MX6R2 QP module

Add device tree configuration for imx6qp based 4G module
and remove some IPU warning messages till root cause identified

Signed-off-by: Antony Abee Prakash XV <antonyabee.prakashxv@adlinktech.com>
---
 arch/arm/boot/dts/lec-imx6qp.dts | 39 +-------------------------------
 drivers/mxc/ipu3/pre.c           | 11 +++++----
 2 files changed, 7 insertions(+), 43 deletions(-)

diff --git a/arch/arm/boot/dts/lec-imx6qp.dts b/arch/arm/boot/dts/lec-imx6qp.dts
index d148684ac461..8cd0e60c1b27 100644
--- a/arch/arm/boot/dts/lec-imx6qp.dts
+++ b/arch/arm/boot/dts/lec-imx6qp.dts
@@ -1,5 +1,6 @@
 // SPDX-License-Identifier: GPL-2.0+ OR MIT
 //
+// Copyright 2014-2016 LiPPERT ADLINK Technology GmbH
 // Copyright 2016 Freescale Semiconductor, Inc.
 
 /dts-v1/;
@@ -16,44 +17,6 @@
 	vin-supply = <&sw2_reg>;
 };
 
-&iomuxc {
-	lec-imx6 {
-		pinctrl_usdhc2: usdhc2grp {
-			fsl,pins = <
-				MX6QDL_PAD_SD2_CMD__SD2_CMD		0x17059
-				MX6QDL_PAD_SD2_CLK__SD2_CLK		0x10071
-				MX6QDL_PAD_SD2_DAT0__SD2_DATA0		0x17059
-				MX6QDL_PAD_SD2_DAT1__SD2_DATA1		0x17059
-				MX6QDL_PAD_SD2_DAT2__SD2_DATA2		0x17059
-				MX6QDL_PAD_SD2_DAT3__SD2_DATA3		0x17059
-				MX6QDL_PAD_NANDF_D4__SD2_DATA4		0x17059
-				MX6QDL_PAD_NANDF_D5__SD2_DATA5		0x17059
-				MX6QDL_PAD_NANDF_D6__SD2_DATA6		0x17059
-				MX6QDL_PAD_NANDF_D7__SD2_DATA7		0x17059
-			>;
-		};
-
-		pinctrl_usdhc3: usdhc3grp {
-			fsl,pins = <
-				MX6QDL_PAD_SD3_CMD__SD3_CMD		0x17059
-				MX6QDL_PAD_SD3_CLK__SD3_CLK		0x10071
-				MX6QDL_PAD_SD3_DAT0__SD3_DATA0		0x17059
-				MX6QDL_PAD_SD3_DAT1__SD3_DATA1		0x17059
-				MX6QDL_PAD_SD3_DAT2__SD3_DATA2		0x17059
-				MX6QDL_PAD_SD3_DAT3__SD3_DATA3		0x17059
-				MX6QDL_PAD_SD3_DAT4__SD3_DATA4		0x17059
-				MX6QDL_PAD_SD3_DAT5__SD3_DATA5		0x17059
-				MX6QDL_PAD_SD3_DAT6__SD3_DATA6		0x17059
-				MX6QDL_PAD_SD3_DAT7__SD3_DATA7		0x17059
-			>;
-		};
-	};
-};
-
-&pcie {
-	status = "okay";
-};
-
 &sata {
 	status = "okay";
 };
diff --git a/drivers/mxc/ipu3/pre.c b/drivers/mxc/ipu3/pre.c
index 5dba5f63dec5..f887d9ef561d 100644
--- a/drivers/mxc/ipu3/pre.c
+++ b/drivers/mxc/ipu3/pre.c
@@ -644,31 +644,32 @@ static irqreturn_t ipu_pre_irq_handle(int irq, void *dev_id)
 	spin_lock(&pre->lock);
 	irq_stat = pre_read(pre, HW_PRE_IRQ);
 
+	/*We remove these warning messages till root cause is identified*/
 	if (irq_stat & BM_PRE_IRQ_HANDSHAKE_ABORT_IRQ) {
-		dev_warn(pre->dev, "handshake abort\n");
+		//dev_warn(pre->dev, "handshake abort\n");
 		pre_write(pre, BM_PRE_IRQ_HANDSHAKE_ABORT_IRQ, HW_PRE_IRQ_CLR);
 	}
 
 	if (irq_stat & BM_PRE_IRQ_TPR_RD_NUM_BYTES_OVFL_IRQ) {
-		dev_warn(pre->dev, "tpr read num bytes overflow\n");
+		//dev_warn(pre->dev, "tpr read num bytes overflow\n");
 		pre_write(pre, BM_PRE_IRQ_TPR_RD_NUM_BYTES_OVFL_IRQ,
 				HW_PRE_IRQ_CLR);
 	}
 
 	if (irq_stat & BM_PRE_IRQ_HANDSHAKE_ERROR_IRQ) {
-		dev_warn(pre->dev, "handshake error\n");
+		//dev_warn(pre->dev, "handshake error\n");
 		pre_write(pre, BM_PRE_IRQ_HANDSHAKE_ERROR_IRQ, HW_PRE_IRQ_CLR);
 	}
 
 	axi_id = (irq_stat & BM_PRE_IRQ_AXI_ERROR_ID) >>
 					BP_PRE_IRQ_AXI_ERROR_ID;
 	if (irq_stat & BM_PRE_IRQ_AXI_WRITE_ERROR) {
-		dev_warn(pre->dev, "AXI%d write error\n", axi_id);
+		//dev_warn(pre->dev, "AXI%d write error\n", axi_id);
 		pre_write(pre, BM_PRE_IRQ_AXI_WRITE_ERROR, HW_PRE_IRQ_CLR);
 	}
 
 	if (irq_stat & BM_PRE_IRQ_AXI_READ_ERROR) {
-		dev_warn(pre->dev, "AXI%d read error\n", axi_id);
+		//dev_warn(pre->dev, "AXI%d read error\n", axi_id);
 		pre_write(pre, BM_PRE_IRQ_AXI_READ_ERROR, HW_PRE_IRQ_CLR);
 	}
 	spin_unlock(&pre->lock);
-- 
2.17.1

