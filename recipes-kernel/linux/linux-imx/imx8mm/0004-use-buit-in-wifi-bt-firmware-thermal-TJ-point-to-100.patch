From f62b4cc986e59069262a0652e6df1871a52f4bd4 Mon Sep 17 00:00:00 2001
From: Dinesh V <dinesh.v@adlinktech.com>
Date: Tue, 25 Oct 2022 23:02:30 +0530
Subject: [PATCH 8/8] use buit-in wifi/bt firmware,thermal TJ point to 100C and
 105C,Force limit dma use 32bits mask

---
 arch/arm64/boot/dts/Makefile                |  1 +
 drivers/bluetooth/btmrvl_sdio.c             |  2 +-
 drivers/net/wireless/marvell/mwifiex/sdio.h |  4 +-
 drivers/thermal/imx8mm_thermal.c            | 92 +++++++++++++++++++++
 kernel/dma/mapping.c                        |  1 +
 5 files changed, 97 insertions(+), 3 deletions(-)

diff --git a/arch/arm64/boot/dts/Makefile b/arch/arm64/boot/dts/Makefile
index 9b1170658d60..3cf14d3498be 100644
--- a/arch/arm64/boot/dts/Makefile
+++ b/arch/arm64/boot/dts/Makefile
@@ -1,5 +1,6 @@
 # SPDX-License-Identifier: GPL-2.0
 subdir-y += actions
+subdir-y += adlink
 subdir-y += allwinner
 subdir-y += altera
 subdir-y += amazon
diff --git a/drivers/bluetooth/btmrvl_sdio.c b/drivers/bluetooth/btmrvl_sdio.c
index 33d58b30c5ac..5391b98f425f 100644
--- a/drivers/bluetooth/btmrvl_sdio.c
+++ b/drivers/bluetooth/btmrvl_sdio.c
@@ -303,7 +303,7 @@ static const struct btmrvl_sdio_device btmrvl_sdio_sd8987 = {
 
 static const struct btmrvl_sdio_device btmrvl_sdio_sd8997 = {
 	.helper         = NULL,
-	.firmware       = "mrvl/sdsd8997_combo_v4.bin",
+	.firmware       = "nxp/sdsd8997_combo_v4.bin",
 	.reg            = &btmrvl_reg_89xx,
 	.support_pscan_win_report = true,
 	.sd_blksz_fw_dl = 256,
diff --git a/drivers/net/wireless/marvell/mwifiex/sdio.h b/drivers/net/wireless/marvell/mwifiex/sdio.h
index dec534a6ddb1..159fffbd9fff 100644
--- a/drivers/net/wireless/marvell/mwifiex/sdio.h
+++ b/drivers/net/wireless/marvell/mwifiex/sdio.h
@@ -36,9 +36,9 @@
 #define SD8897_DEFAULT_FW_NAME "mrvl/sd8897_uapsta.bin"
 #define SD8887_DEFAULT_FW_NAME "mrvl/sd8887_uapsta.bin"
 #define SD8801_DEFAULT_FW_NAME "mrvl/sd8801_uapsta.bin"
-#define SD8977_DEFAULT_FW_NAME "mrvl/sdsd8977_combo_v2.bin"
+#define SD8977_DEFAULT_FW_NAME "nxp/sdsd8977_combo_v2.bin"
 #define SD8987_DEFAULT_FW_NAME "mrvl/sd8987_uapsta.bin"
-#define SD8997_DEFAULT_FW_NAME "mrvl/sdsd8997_combo_v4.bin"
+#define SD8997_DEFAULT_FW_NAME "nxp/sdsd8997_combo_v4.bin"
 
 #define BLOCK_MODE	1
 #define BYTE_MODE	0
diff --git a/drivers/thermal/imx8mm_thermal.c b/drivers/thermal/imx8mm_thermal.c
index fd1bf2d14c53..18fd7cd2957a 100644
--- a/drivers/thermal/imx8mm_thermal.c
+++ b/drivers/thermal/imx8mm_thermal.c
@@ -85,6 +85,87 @@ static int imx8mm_tmu_get_temp(void *data, int *temp)
 	return 0;
 }
 
+#define OCOTP_BASE_ADDR 0x30350000
+struct ocotp_regs {
+	u32	ctrl;
+	u32	ctrl_set;
+	u32     ctrl_clr;
+	u32	ctrl_tog;
+	u32	timing;
+	u32     rsvd0[3];
+	u32     data;
+	u32     rsvd1[3];
+	u32     read_ctrl;
+	u32     rsvd2[3];
+	u32	read_fuse_data;
+	u32     rsvd3[3];
+	u32	sw_sticky;
+	u32     rsvd4[3];
+	u32     scs;
+	u32     scs_set;
+	u32     scs_clr;
+	u32     scs_tog;
+	u32     crc_addr;
+	u32     rsvd5[3];
+	u32     crc_value;
+	u32     rsvd6[3];
+	u32     version;
+	u32     rsvd7[0xdb];
+
+	/* fuse banks */
+	struct fuse_bank {
+		u32	fuse_regs[0x10];
+	} bank[0];
+};
+
+struct fuse_bank1_regs {
+	u32 tester3;
+	u32 rsvd0[3];
+	u32 tester4;
+	u32 rsvd1[3];
+	u32 tester5;
+	u32 rsvd2[3];
+	u32 cfg0;
+	u32 rsvd3[3];
+};
+
+static int get_cpu_temp_grade_maxc(void)
+{
+	unsigned int val = 0;
+	int minc = 0, maxc = 0;
+
+	if (of_machine_is_compatible("fsl,imx8mp") || of_machine_is_compatible("fsl,imx8mm")) {
+		struct ocotp_regs *ocotp = (struct ocotp_regs *)OCOTP_BASE_ADDR;
+		struct fuse_bank *bank = &ocotp->bank[1];
+		struct fuse_bank1_regs *fuse = (struct fuse_bank1_regs *)bank->fuse_regs;
+		void __iomem *tmpp = ioremap_cache((phys_addr_t)fuse, sizeof(struct fuse_bank1_regs));
+		if (!tmpp)
+			return -ENOMEM;
+
+		fuse = (struct fuse_bank1_regs *)tmpp;
+		val = fuse->tester3;
+		switch ((val >> 5) & 0x3) {
+		case 0: // Commercial (0 to 95 ¢FXC)
+			minc = 0;
+			maxc = 95;
+			break;
+		case 1: // Extended Commercial (-20 ¢FXC to 105 ¢FXC)
+			minc = -20;
+			maxc = 105;
+			break;
+		case 2: // Industrial (-40 ¢FXC to 105 ¢FXC)
+			minc = -40;
+			maxc = 105;
+			break;
+		case 3: // Automotive (-40 ¢FXC to 125 ¢FXC)
+			minc = -40;
+			maxc = 125;
+			break;
+		}
+	}
+	return maxc;
+}
+
 static int imx8mp_tmu_get_temp(void *data, int *temp)
 {
 	struct tmu_sensor *sensor = data;
@@ -224,6 +305,17 @@ static int imx8mm_tmu_probe(struct platform_device *pdev)
 		}
 		tmu->sensors[i].hw_id = i;
 
+		trips = of_thermal_get_trip_points(tmu->sensors[i].tzd);
+
+		/* get the thermal trip temp */
+		if (of_machine_is_compatible("fsl,imx8mp") || of_machine_is_compatible("fsl,imx8mm")) {
+			tmu->sensors[i].temp_passive = ((get_cpu_temp_grade_maxc() - 10) * 1000);
+			tmu->sensors[i].temp_critical = (get_cpu_temp_grade_maxc() * 1000);
+		} else {
+		tmu->sensors[i].temp_passive = trips[0].temperature;
+		tmu->sensors[i].temp_critical = trips[1].temperature;
+		}
+
 		tmu->sensors[i].cdev = devfreq_cooling_register();
 		if (IS_ERR(tmu->sensors[i].cdev)) {
 			ret = PTR_ERR(tmu->sensors[i].cdev);
diff --git a/kernel/dma/mapping.c b/kernel/dma/mapping.c
index 51bb8fa8eb89..158047c0b5d5 100644
--- a/kernel/dma/mapping.c
+++ b/kernel/dma/mapping.c
@@ -424,6 +424,7 @@ void *dma_alloc_attrs(struct device *dev, size_t size, dma_addr_t *dma_handle,
 	const struct dma_map_ops *ops = get_dma_ops(dev);
 	void *cpu_addr;
 
+	dma_set_mask_and_coherent(dev,DMA_BIT_MASK(32));
 	WARN_ON_ONCE(!dev->coherent_dma_mask);
 
 	if (dma_alloc_from_dev_coherent(dev, size, dma_handle, &cpu_addr))
-- 
2.25.1

