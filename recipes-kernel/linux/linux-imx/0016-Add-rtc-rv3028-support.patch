From 0be0551d31411b6896e579c06295fc89b2493d7e Mon Sep 17 00:00:00 2001
From: Antony Abee Prakash XV <antonyabee.prakashxv@adlinktech.com>
Date: Fri, 3 Jul 2020 19:11:59 +0530
Subject: [PATCH 16/16] Add-rtc-rv3028-support

This patch will add support for rtc rv3028 in i2c1 bus

Signed-off-by: Antony Abee Prakash XV <antonyabee.prakashxv@adlinktech.com>
---
 arch/arm64/boot/dts/adlink/adlink-lec-imx8m.dts |  6 ++++++
 arch/arm64/configs/lec_imx8m_defconfig          |  3 +--
 drivers/rtc/rtc-rv3028.c                        | 16 +++++++++++++---
 3 files changed, 20 insertions(+), 5 deletions(-)

diff --git a/arch/arm64/boot/dts/adlink/adlink-lec-imx8m.dts b/arch/arm64/boot/dts/adlink/adlink-lec-imx8m.dts
index 8a020a6c1a19..c9c8c2fa8cb7 100755
--- a/arch/arm64/boot/dts/adlink/adlink-lec-imx8m.dts
+++ b/arch/arm64/boot/dts/adlink/adlink-lec-imx8m.dts
@@ -345,6 +345,12 @@
 			};
 		};
 	};
+       
+        rv3028: rtc@52 {
+                compatible = "microcrystal,rv3028";
+                reg = <0x52>;
+                status = "okay";
+        };
 };
 
 &i2c3 {
diff --git a/arch/arm64/configs/lec_imx8m_defconfig b/arch/arm64/configs/lec_imx8m_defconfig
index 360738758993..96603e1752df 100644
--- a/arch/arm64/configs/lec_imx8m_defconfig
+++ b/arch/arm64/configs/lec_imx8m_defconfig
@@ -628,8 +628,7 @@ CONFIG_RTC_DRV_PCF2127=y
 CONFIG_RTC_DRV_EFI=y
 CONFIG_RTC_DRV_CROS_EC=y
 CONFIG_RTC_DRV_PL031=y
-CONFIG_RTC_DRV_SNVS=y
-CONFIG_RTC_DRV_IMX_SC=y
+CONFIG_RTC_DRV_RV3028=y
 CONFIG_DMADEVICES=y
 CONFIG_BCM_SBA_RAID=m
 CONFIG_FSL_EDMA=y
diff --git a/drivers/rtc/rtc-rv3028.c b/drivers/rtc/rtc-rv3028.c
index 2b316661a578..2ae07ed5ae86 100644
--- a/drivers/rtc/rtc-rv3028.c
+++ b/drivers/rtc/rtc-rv3028.c
@@ -71,6 +71,7 @@
 #define RV3028_EEBUSY_POLL		10000
 #define RV3028_EEBUSY_TIMEOUT		100000
 
+#define RV3028_BACKUP_BSM		BIT(2)
 #define RV3028_BACKUP_TCE		BIT(5)
 #define RV3028_BACKUP_TCR_MASK		GENMASK(1,0)
 
@@ -605,7 +606,7 @@ static int rv3028_probe(struct i2c_client *client)
 		.word_size = 1,
 		.stride = 1,
 		.size = 2,
-		.type = NVMEM_TYPE_BATTERY_BACKED,
+		//.type = NVMEM_TYPE_BATTERY_BACKED,
 		.reg_read = rv3028_nvram_read,
 		.reg_write = rv3028_nvram_write,
 	};
@@ -614,7 +615,7 @@ static int rv3028_probe(struct i2c_client *client)
 		.word_size = 1,
 		.stride = 1,
 		.size = 43,
-		.type = NVMEM_TYPE_EEPROM,
+		//.type = NVMEM_TYPE_EEPROM,
 		.reg_read = rv3028_eeprom_read,
 		.reg_write = rv3028_eeprom_write,
 	};
@@ -632,8 +633,10 @@ static int rv3028_probe(struct i2c_client *client)
 	if (ret < 0)
 		return ret;
 
-	if (status & RV3028_STATUS_PORF)
+	if (status & RV3028_STATUS_PORF){
 		dev_warn(&client->dev, "Voltage low, data loss detected.\n");
+		ret = regmap_update_bits(rv3028->regmap, RV3028_STATUS, RV3028_STATUS_PORF, 0);
+	}
 
 	if (status & RV3028_STATUS_AF)
 		dev_warn(&client->dev, "An alarm may have been missed.\n");
@@ -696,11 +699,18 @@ static int rv3028_probe(struct i2c_client *client)
 
 	rv3028->rtc->range_min = RTC_TIMESTAMP_BEGIN_2000;
 	rv3028->rtc->range_max = RTC_TIMESTAMP_END_2099;
+        //set Backup Switchover Mode
+        ret = regmap_update_bits(rv3028->regmap, RV3028_BACKUP,
+                                                BIT(2)|BIT(3),RV3028_BACKUP_BSM);
+
 	rv3028->rtc->ops = &rv3028_rtc_ops;
 	ret = rtc_register_device(rv3028->rtc);
 	if (ret)
 		return ret;
 
+	/* Create a sysfs node to read simulated coordinates */
+	ret = sysfs_create_group( &rv3028->rtc->dev.kobj, &rv3028_attr_group );
+       
 	nvmem_cfg.priv = rv3028->regmap;
 	rtc_nvmem_register(rv3028->rtc, &nvmem_cfg);
 	eeprom_cfg.priv = rv3028->regmap;
-- 
2.17.1

