From 6870345c33a42470da56dd310d9e9057f05ea20e Mon Sep 17 00:00:00 2001
From: Santhana Kumar <santhanakumar.a@ltts.com>
Date: Fri, 5 Apr 2019 19:17:38 +0530
Subject: [PATCH 38/47] Our SPI is connected differently.

- We use SPI1, 2 and 4 instead of just SPI1.
- SPI1 and 2 provide 2 CS lines (i.e. support 2 devices) each.
- The on-module SPI flash is on SPI4, using a single CS. It's a different
  chip, too: Winbond W25Q64 instead of ST M25P32. Apart from the different
  ID this also means the SPI clock can be 3x faster.
- To achieve this speed enable the 'phase-shift SPI clock during data input'
  workaround for 30 MHz and faster clocks.
- A backup SST 25VF032B also exists, and the BMC may switch chips
  automatically. Fortunately Linux will just issue a warning and continue if
  it reads a different chip ID, so there is nothing we have to (or can) do
  about it.
- Very different pinmux, naturally.

Signed-off-by: Santhana Kumar <santhanakumar.a@ltts.com>
---
 arch/arm/boot/dts/lec-imx6.dtsi | 46 +++++++++++++++++++++++++++++++++++++++++
 1 file changed, 46 insertions(+)

diff --git a/arch/arm/boot/dts/lec-imx6.dtsi b/arch/arm/boot/dts/lec-imx6.dtsi
index 4f716f2..cc5e286 100644
--- a/arch/arm/boot/dts/lec-imx6.dtsi
+++ b/arch/arm/boot/dts/lec-imx6.dtsi
@@ -410,6 +410,33 @@
 };
 #endif
 
+&ecspi2 {	/* SMARC SPI1 */
+	fsl,spi-num-chipselects = <2>;
+	cs-gpios = <&gpio2 27 GPIO_ACTIVE_LOW>, /* SMARC CS0 */
+	           <&gpio2 26 GPIO_ACTIVE_LOW>; /* SMARC CS1 */
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_ecspi2>;
+	status = "okay";
+};
+
+&ecspi4 {	/* on-module U-Boot SPI */
+	fsl,spi-num-chipselects = <1>;
+	cs-gpios = <&gpio3 25 GPIO_ACTIVE_LOW>;
+	pinctrl-names = "default";
+	pinctrl-0 = <&pinctrl_ecspi4>;
+	fsl,clk-workaround-freq = <30000000>;
+	status = "okay";
+
+	flash: m25p80@0 {
+		#address-cells = <1>;
+		#size-cells = <1>;
+		compatible = "winbond,w25q64";
+		spi-max-frequency = <66000000>; /* slowest we used was SST25VF032B; i.MX6 provides 60MHz max */
+		reg = <0>;
+		m25p,fast-read;
+	};
+};
+
 &fec {
 	pinctrl-names = "default";
 	pinctrl-0 = <&pinctrl_enet>;
@@ -751,6 +778,25 @@
 		};
 #endif
 
+		pinctrl_ecspi2: ecspi2grp {
+			fsl,pins = <	/* SMARC SPI1 */
+				MX6QDL_PAD_EIM_OE__ECSPI2_MISO		0x100b1
+				MX6QDL_PAD_EIM_CS1__ECSPI2_MOSI		0x100b1
+				MX6QDL_PAD_EIM_CS0__ECSPI2_SCLK		0x100b1
+				MX6QDL_PAD_EIM_RW__GPIO2_IO26		0x1b0b0 /* SMARC CS1 */
+				MX6QDL_PAD_EIM_LBA__GPIO2_IO27		0x1b0b0 /* SMARC CS0 */
+			>;
+		};
+
+		pinctrl_ecspi4: ecspi4grp {
+			fsl,pins = <	/* on-module U-Boot SPI */
+				MX6QDL_PAD_EIM_D22__ECSPI4_MISO		0x100b1
+				MX6QDL_PAD_EIM_D28__ECSPI4_MOSI		0x100b1
+				MX6QDL_PAD_EIM_D21__ECSPI4_SCLK		0x100b1
+				MX6QDL_PAD_EIM_D25__GPIO3_IO25		0x1b0b0 /* CS3 */
+
+			>;
+		};
 
 		pinctrl_enet: enetgrp {
 			fsl,pins = <
-- 
2.7.4

