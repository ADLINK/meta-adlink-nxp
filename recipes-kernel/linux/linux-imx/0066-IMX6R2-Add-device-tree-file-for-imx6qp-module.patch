From ca85c729efcdd3d8bba61e5ab428f3e3d03f1363 Mon Sep 17 00:00:00 2001
From: Arun Kumar E V <arunkumar.ev@ltts.com>
Date: Mon, 23 Dec 2019 12:09:05 +0530
Subject: [PATCH] IMX6R2: Add device tree file for imx6qp module

Add device tree configuration for imx6qp based 4G module
and remove some IPU warning messages till root cause identified

Signed-off-by: Arun Kumar E V <arunkumar.ev@ltts.com>

diff --git a/arch/arm/boot/dts/Makefile b/arch/arm/boot/dts/Makefile
index 0fcfabc..e86a811 100644
--- a/arch/arm/boot/dts/Makefile
+++ b/arch/arm/boot/dts/Makefile
@@ -498,7 +498,8 @@ dtb-$(CONFIG_SOC_IMX6Q) += \
 	imx6qp-sabresd-ldo-pcie-cert.dtb \
 	imx6qp-zii-rdu2.dtb \
 	lec-imx6q.dtb \
-	lec-imx6s.dtb
+	lec-imx6s.dtb \
+	lec-imx6qp.dtb
 dtb-$(CONFIG_SOC_IMX6SL) += \
 	imx6sl-evk.dtb \
 	imx6sl-evk-btwifi.dtb \
diff --git a/arch/arm/boot/dts/lec-imx6qp.dts b/arch/arm/boot/dts/lec-imx6qp.dts
new file mode 100644
index 00000000..dac124a
--- /dev/null
+++ b/arch/arm/boot/dts/lec-imx6qp.dts
@@ -0,0 +1,111 @@
+/*
+ * Copyright 2016 Freescale Semiconductor, Inc.
+ *
+ * This file is dual-licensed: you can use it either under the terms
+ * of the GPL or the X11 license, at your option. Note that this dual
+ * licensing only applies to this file, and not this project as a
+ * whole.
+ *
+ *  a) This file is free software; you can redistribute it and/or
+ *     modify it under the terms of the GNU General Public License as
+ *     published by the Free Software Foundation; either version 2 of the
+ *     License, or (at your option) any later version.
+ *
+ *     This file is distributed in the hope that it will be useful,
+ *     but WITHOUT ANY WARRANTY; without even the implied warranty of
+ *     MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
+ *     GNU General Public License for more details.
+ *
+ * Or, alternatively,
+ *
+ *  b) Permission is hereby granted, free of charge, to any person
+ *     obtaining a copy of this software and associated documentation
+ *     files (the "Software"), to deal in the Software without
+ *     restriction, including without limitation the rights to use,
+ *     copy, modify, merge, publish, distribute, sublicense, and/or
+ *     sell copies of the Software, and to permit persons to whom the
+ *     Software is furnished to do so, subject to the following
+ *     conditions:
+ *
+ *     The above copyright notice and this permission notice shall be
+ *     included in all copies or substantial portions of the Software.
+ *
+ *     THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND,
+ *     EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES
+ *     OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND
+ *     NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT
+ *     HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY,
+ *     WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
+ *     FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR
+ *     OTHER DEALINGS IN THE SOFTWARE.
+ */
+
+/dts-v1/;
+
+#include "imx6qp.dtsi"
+#include "lec-imx6.dtsi"
+
+/ {
+	model = "Freescale i.MX6 Quad Plus SABRE Smart Device Board";
+	compatible = "adlink,lec-imx6", "fsl,imx6qp";
+};
+
+&reg_arm {
+	vin-supply = <&sw2_reg>;
+};
+
+
+&ldb {
+	lvds-channel@0 {
+		crtc = "ipu2-di0";
+	};
+
+	lvds-channel@1 {
+		crtc = "ipu2-di1";
+	};
+};
+
+&mxcfb1 {
+	prefetch;
+	status = "okay";
+};
+
+&mxcfb2 {
+	prefetch;
+	status = "okay";
+};
+
+&mxcfb3 {
+	prefetch;
+	status = "okay";
+};
+
+&pre1 {
+	status = "okay";
+};
+
+&pre2 {
+	status = "okay";
+};
+
+&pre3 {
+	status = "okay";
+};
+
+&pre4 {
+	status = "okay";
+};
+
+&prg1 {
+	memory-region = <&memory>;
+	status = "okay";
+};
+
+&prg2 {
+	memory-region = <&memory>;
+	status = "okay";
+};
+
+&sata {
+	status = "okay";
+};
diff --git a/drivers/mxc/ipu3/pre.c b/drivers/mxc/ipu3/pre.c
index f1ce02b..ba4ee22 100644
--- a/drivers/mxc/ipu3/pre.c
+++ b/drivers/mxc/ipu3/pre.c
@@ -642,31 +642,32 @@ static irqreturn_t ipu_pre_irq_handle(int irq, void *dev_id)
 	spin_lock(&pre->lock);
 	irq_stat = pre_read(pre, HW_PRE_IRQ);
 
+	/*We remove these warning messages till root cause is identified*/
 	if (irq_stat & BM_PRE_IRQ_HANDSHAKE_ABORT_IRQ) {
-		dev_warn(pre->dev, "handshake abort\n");
+		//dev_warn(pre->dev, "handshake abort\n");
 		pre_write(pre, BM_PRE_IRQ_HANDSHAKE_ABORT_IRQ, HW_PRE_IRQ_CLR);
 	}
 
 	if (irq_stat & BM_PRE_IRQ_TPR_RD_NUM_BYTES_OVFL_IRQ) {
-		dev_warn(pre->dev, "tpr read num bytes overflow\n");
+		//dev_warn(pre->dev, "tpr read num bytes overflow\n");
 		pre_write(pre, BM_PRE_IRQ_TPR_RD_NUM_BYTES_OVFL_IRQ,
 				HW_PRE_IRQ_CLR);
 	}
 
 	if (irq_stat & BM_PRE_IRQ_HANDSHAKE_ERROR_IRQ) {
-		dev_warn(pre->dev, "handshake error\n");
+		//dev_warn(pre->dev, "handshake error\n");
 		pre_write(pre, BM_PRE_IRQ_HANDSHAKE_ERROR_IRQ, HW_PRE_IRQ_CLR);
 	}
 
 	axi_id = (irq_stat & BM_PRE_IRQ_AXI_ERROR_ID) >>
 					BP_PRE_IRQ_AXI_ERROR_ID;
 	if (irq_stat & BM_PRE_IRQ_AXI_WRITE_ERROR) {
-		dev_warn(pre->dev, "AXI%d write error\n", axi_id);
+		//dev_warn(pre->dev, "AXI%d write error\n", axi_id);
 		pre_write(pre, BM_PRE_IRQ_AXI_WRITE_ERROR, HW_PRE_IRQ_CLR);
 	}
 
 	if (irq_stat & BM_PRE_IRQ_AXI_READ_ERROR) {
-		dev_warn(pre->dev, "AXI%d read error\n", axi_id);
+		//dev_warn(pre->dev, "AXI%d read error\n", axi_id);
 		pre_write(pre, BM_PRE_IRQ_AXI_READ_ERROR, HW_PRE_IRQ_CLR);
 	}
 	spin_unlock(&pre->lock);
-- 
2.7.4

