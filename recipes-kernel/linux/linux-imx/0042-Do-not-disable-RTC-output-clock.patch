From 530095b9b097fba291460551ea4934aed22103a6 Mon Sep 17 00:00:00 2001
From: Antony Abee Prakash XV <antonyabee.prakashxv@adlinktech.com>
Date: Tue, 18 Aug 2020 15:04:34 +0530
Subject: [PATCH 42/42] Do not disable RTC output clock

Do not disable CLKOUT line from RTC PCF8563. Set
CLKOUT register 0x0D to 0x80. Also default CPU RTC
driver (CONFIG_RTC_DRV_SNVS) is disabled in kernel config

Signed-off-by: Antony Abee Prakash XV <antonyabee.prakashxv@adlinktech.com>
---
 arch/arm/configs/lec_imx6_defconfig |  1 -
 drivers/rtc/rtc-pcf8563.c           | 18 +++++++++++++++---
 2 files changed, 15 insertions(+), 4 deletions(-)

diff --git a/arch/arm/configs/lec_imx6_defconfig b/arch/arm/configs/lec_imx6_defconfig
index 622e54301787..ace508d5d803 100644
--- a/arch/arm/configs/lec_imx6_defconfig
+++ b/arch/arm/configs/lec_imx6_defconfig
@@ -432,7 +432,6 @@ CONFIG_RTC_DRV_DA9063=y
 CONFIG_RTC_DRV_MC13XXX=y
 CONFIG_RTC_DRV_MXC=y
 CONFIG_RTC_DRV_MXC_V2=y
-CONFIG_RTC_DRV_SNVS=y
 CONFIG_RTC_DRV_IMX_RPMSG=y
 CONFIG_DMADEVICES=y
 CONFIG_FSL_EDMA=y
diff --git a/drivers/rtc/rtc-pcf8563.c b/drivers/rtc/rtc-pcf8563.c
index 24baa4767b11..7e3c4197532a 100644
--- a/drivers/rtc/rtc-pcf8563.c
+++ b/drivers/rtc/rtc-pcf8563.c
@@ -200,7 +200,7 @@ static int pcf8563_rtc_read_time(struct device *dev, struct rtc_time *tm)
 {
 	struct i2c_client *client = to_i2c_client(dev);
 	struct pcf8563 *pcf8563 = i2c_get_clientdata(client);
-	unsigned char buf[9];
+	unsigned char buf[9], buf1;
 	int err;
 
 	err = pcf8563_read_block_data(client, PCF8563_REG_ST1, 9, buf);
@@ -240,7 +240,12 @@ static int pcf8563_rtc_read_time(struct device *dev, struct rtc_time *tm)
 		tm->tm_sec, tm->tm_min, tm->tm_hour,
 		tm->tm_mday, tm->tm_mon, tm->tm_year, tm->tm_wday);
 
-	return 0;
+	err = pcf8563_read_block_data(client, PCF8563_REG_CLKO, 1, &buf1);
+	pr_debug("Reg 0x0D value - %0x\n", buf1);
+	if (err)
+		return err;
+
+       return 0;
 }
 
 static int pcf8563_rtc_set_time(struct device *dev, struct rtc_time *tm)
@@ -475,7 +480,8 @@ static int pcf8563_clkout_prepare(struct clk_hw *hw)
 
 static void pcf8563_clkout_unprepare(struct clk_hw *hw)
 {
-	pcf8563_clkout_control(hw, 0);
+	//TBD: Do not disable CLKOUT line fow now
+	//pcf8563_clkout_control(hw, 0);
 }
 
 static int pcf8563_clkout_is_prepared(struct clk_hw *hw)
@@ -531,6 +537,12 @@ static struct clk *pcf8563_clkout_register_clk(struct pcf8563 *pcf8563)
 	if (!IS_ERR(clk))
 		of_clk_add_provider(node, of_clk_src_simple_get, clk);
 
+	/*Enable CLKOUT line*/
+	buf = 0x80;
+	ret = pcf8563_write_block_data(client, PCF8563_REG_CLKO, 1, &buf);
+	if (ret < 0)
+		return ERR_PTR(ret);
+
 	return clk;
 }
 #endif
-- 
2.17.1

