From b87322e1a4bbef6307a0f239c2e18ebd92212ee4 Mon Sep 17 00:00:00 2001
From: "po.cheng" <po.cheng@adlinktech.com>
Date: Mon, 13 Jan 2025 17:01:51 +0800
Subject: [PATCH] Patch: imx678

Signed-off-by: po.cheng <po.cheng@adlinktech.com>
---
 build-all-isp.sh                              |    2 +
 .../sensor_dwe_IMX678_Basic_1920x1080.json    |   54 +
 .../sensor_dwe_IMX678_Basic_3840x2160.json    |   54 +
 units/isi/CMakeLists.txt                      |    4 +
 units/isi/drv/imx678/CMakeLists.txt           |  115 ++
 units/isi/drv/imx678/Sensor0_Entry.cfg        |   10 +
 units/isi/drv/imx678/Sensor1_Entry.cfg        |   10 +
 units/isi/drv/imx678/calib/CMakeLists.txt     |   44 +
 .../calib/IMX678/IMX678_Basic_1920x1080.xml   | 1103 ++++++++++++++
 .../calib/IMX678/IMX678_Basic_3840x2160.xml   | 1103 ++++++++++++++
 units/isi/drv/imx678/source/IMX678.c          | 1268 +++++++++++++++++
 11 files changed, 3767 insertions(+)
 create mode 100644 dewarp/dewarp_config/sensor_dwe_IMX678_Basic_1920x1080.json
 create mode 100644 dewarp/dewarp_config/sensor_dwe_IMX678_Basic_3840x2160.json
 create mode 100755 units/isi/drv/imx678/CMakeLists.txt
 create mode 100644 units/isi/drv/imx678/Sensor0_Entry.cfg
 create mode 100644 units/isi/drv/imx678/Sensor1_Entry.cfg
 create mode 100644 units/isi/drv/imx678/calib/CMakeLists.txt
 create mode 100644 units/isi/drv/imx678/calib/IMX678/IMX678_Basic_1920x1080.xml
 create mode 100644 units/isi/drv/imx678/calib/IMX678/IMX678_Basic_3840x2160.xml
 create mode 100644 units/isi/drv/imx678/source/IMX678.c

diff --git a/build-all-isp.sh b/build-all-isp.sh
index 5dcd8f5..ee3d9a8 100755
--- a/build-all-isp.sh
+++ b/build-all-isp.sh
@@ -118,6 +118,8 @@ cp -a appshell/build/generated/${BUILD_DIR}/lib/*.so* ${ISP_LIB_DIR}
 #cp -a appshell/build/generated/${BUILD_TYPE}/bin/ov2775* ${ISP_BIN_DIR}
 cp -a appshell/build/generated/${BUILD_TYPE}/bin/OS08a20* ${ISP_BIN_DIR}
 cp -a appshell/build/generated/${BUILD_TYPE}/bin/os08a20* ${ISP_BIN_DIR}
+cp -a appshell/build/generated/${BUILD_TYPE}/bin/IMX678* ${ISP_BIN_DIR}
+cp -a appshell/build/generated/${BUILD_TYPE}/bin/imx678* ${ISP_BIN_DIR}
 cp -a appshell/build/generated/${BUILD_TYPE}/bin/isp_media_server ${ISP_BIN_DIR}
 cp -a appshell/build/generated/${BUILD_TYPE}/bin/*_test ${ISP_BIN_DIR}
 cp -a appshell/build/generated/${BUILD_DIR}/bin/*.cfg ${ISP_BIN_DIR}/
diff --git a/dewarp/dewarp_config/sensor_dwe_IMX678_Basic_1920x1080.json b/dewarp/dewarp_config/sensor_dwe_IMX678_Basic_1920x1080.json
new file mode 100644
index 0000000..e7351ce
--- /dev/null
+++ b/dewarp/dewarp_config/sensor_dwe_IMX678_Basic_1920x1080.json
@@ -0,0 +1,54 @@
+{
+    "dewarpConfigArray": [
+        {
+            "source_image": {
+                "width": 1920,
+                "height": 1080
+            },
+            "?dewarpType": "LENS_CORRECTION, FISHEYE_EXPAND, SPLIT_SCREEN",
+            "dewarpType": "LENS_CORRECTION",
+            "scale": {
+                "roix": 0,
+                "roiy": 0,
+                "factor": 1.0
+            },
+            "split": {
+                "horizon_line": 540,
+                "vertical_line_up": 960,
+                "vertical_line_down": 960
+            },
+            "bypass": true,
+            "hflip": false,
+            "vflip": false,
+            "camera_matrix": [
+                1000.0,
+                0.0,
+                960.0,
+                0.0,
+                1000.0,
+                540.0,
+                0.0,
+                0.0,
+                1.0
+            ],
+            "distortion_coeff": [
+                0.0,
+                0.0,
+                0.0,
+                0.0,
+                0.0
+            ],
+            "perspective": [
+                1.0,
+                0,
+                0,
+                0,
+                1,
+                0,
+                0,
+                0,
+                1
+            ]
+        }
+    ]
+}
\ No newline at end of file
diff --git a/dewarp/dewarp_config/sensor_dwe_IMX678_Basic_3840x2160.json b/dewarp/dewarp_config/sensor_dwe_IMX678_Basic_3840x2160.json
new file mode 100644
index 0000000..ad9c7ae
--- /dev/null
+++ b/dewarp/dewarp_config/sensor_dwe_IMX678_Basic_3840x2160.json
@@ -0,0 +1,54 @@
+{
+    "dewarpConfigArray": [
+        {
+            "source_image": {
+                "width": 3840,
+                "height": 2160
+            },
+            "?dewarpType": "LENS_CORRECTION, FISHEYE_EXPAND, SPLIT_SCREEN",
+            "dewarpType": "LENS_CORRECTION",
+            "scale": {
+                "roix": 0,
+                "roiy": 0,
+                "factor": 1.0
+            },
+            "split": {
+                "horizon_line": 1080,
+                "vertical_line_up": 1920,
+                "vertical_line_down": 1920
+            },
+            "bypass": true,
+            "hflip": false,
+            "vflip": false,
+            "camera_matrix": [
+                1000.0,
+                0.0,
+                1920.0,
+                0.0,
+                1000.0,
+                1080.0,
+                0.0,
+                0.0,
+                1.0
+            ],
+            "distortion_coeff": [
+                0.0,
+                0.0,
+                0.0,
+                0.0,
+                0.0
+            ],
+            "perspective": [
+                1.0,
+                0,
+                0,
+                0,
+                1,
+                0,
+                0,
+                0,
+                1
+            ]
+        }
+    ]
+}
\ No newline at end of file
diff --git a/units/isi/CMakeLists.txt b/units/isi/CMakeLists.txt
index 0775d24..095e7c5 100755
--- a/units/isi/CMakeLists.txt
+++ b/units/isi/CMakeLists.txt
@@ -60,6 +60,9 @@ add_custom_target(copy_shell_libs_${module} ALL
        COMMAND ${CMAKE_COMMAND} -E copy_directory ${LIB_ROOT}/${CMAKE_BUILD_TYPE}/include/${module} ${CMAKE_HOME_DIRECTORY}/shell_libs/include/units_headers/${module}
        COMMAND ${CMAKE_COMMAND} -E copy ${UNITS_TOP_DIRECTORY}/isi/drv/*.cfg  ${LIB_ROOT}/${CMAKE_BUILD_TYPE}/bin/
        COMMAND ${CMAKE_COMMAND} -E copy ${UNITS_TOP_DIRECTORY}/isi/drv/*.cfg  ${LIB_ROOT}/${CMAKE_BUILD_TYPE}/bin/
+       COMMAND ${CMAKE_COMMAND} -E copy ${UNITS_TOP_DIRECTORY}/isi/drv/basler-camera/build_${CMAKE_BUILD_TYPE}/android/*.so*  ${LIB_ROOT}/${CMAKE_BUILD_TYPE}/lib/
+       COMMAND ${CMAKE_COMMAND} -E copy ${UNITS_TOP_DIRECTORY}/isi/drv/basler-camera/build_${CMAKE_BUILD_TYPE}/android/*.drv  ${LIB_ROOT}/${CMAKE_BUILD_TYPE}/bin/
+       COMMAND ${CMAKE_COMMAND} -E copy ${UNITS_TOP_DIRECTORY}/isi/drv/basler-camera/build_${CMAKE_BUILD_TYPE}/android/*.xml  ${LIB_ROOT}/${CMAKE_BUILD_TYPE}/bin/
 )
 add_dependencies(copy_shell_libs_${module} ${module}_shared)
 endif ( NOT ANDROID )
@@ -78,4 +81,5 @@ include(${UNITS_TOP_DIRECTORY}/targets.cmake)
 
 # add sensor driver modules here
 add_subdirectory( drv/OS08a20 )
+add_subdirectory( drv/imx678 )
 
diff --git a/units/isi/drv/imx678/CMakeLists.txt b/units/isi/drv/imx678/CMakeLists.txt
new file mode 100755
index 0000000..73e5a7f
--- /dev/null
+++ b/units/isi/drv/imx678/CMakeLists.txt
@@ -0,0 +1,115 @@
+cmake_minimum_required(VERSION 2.6)
+
+# define module name & interface version
+set (module imx678)
+
+# define interface version
+set (${module}_INTERFACE_CURRENT  1)
+set (${module}_INTERFACE_REVISION 0)
+set (${module}_INTERFACE_AGE      0)
+
+# we want to compile all .c files as default
+file(GLOB libsources source/IMX678.c )
+
+# set public headers, these get installed
+file(GLOB pub_headers include/*.h)
+
+# define include paths
+include_directories(
+    include
+    include_priv
+    ${LIB_ROOT}/${CMAKE_BUILD_TYPE}/include
+    )
+
+# module specific defines
+###add_definitions(-Wno-error=unused-function)
+
+# add lib to build env
+#add_library(${module}_static STATIC ${libsources})
+add_library(${module}_shared SHARED ${libsources})
+
+#SET_TARGET_PROPERTIES(${module}_static PROPERTIES OUTPUT_NAME     ${module})
+#SET_TARGET_PROPERTIES(${module}_static PROPERTIES LINK_FLAGS      -static)
+#SET_TARGET_PROPERTIES(${module}_static PROPERTIES FRAMEWORK       TRUE PUBLIC_HEADER "${pub_headers}")
+
+SET_TARGET_PROPERTIES(${module}_shared PROPERTIES OUTPUT_NAME     ${module})
+SET_TARGET_PROPERTIES(${module}_shared PROPERTIES LINK_FLAGS      -shared)
+SET_TARGET_PROPERTIES(${module}_shared PROPERTIES SOVERSION       ${${module}_INTERFACE_CURRENT})
+SET_TARGET_PROPERTIES(${module}_shared PROPERTIES VERSION         ${${module}_INTERFACE_CURRENT}.${${module}_INTERFACE_REVISION}.${${module}_INTERFACE_AGE})
+SET_TARGET_PROPERTIES(${module}_shared PROPERTIES FRAMEWORK       TRUE PUBLIC_HEADER "${pub_headers}")
+
+# add convenience target: put sensor driver into the 'bin' output dir as well
+if ( NOT ANDROID )
+add_custom_target(${module}.drv
+                  ALL
+                  COMMAND ${CMAKE_COMMAND} -E copy ${LIB_ROOT}/${CMAKE_BUILD_TYPE}/lib/lib${module}.so.${${module}_INTERFACE_CURRENT} ${LIB_ROOT}/${CMAKE_BUILD_TYPE}/bin/${module}.drv
+                  DEPENDS ${module}_shared
+                  COMMENT "Copying ${module} driver module"
+                  )
+endif()
+
+if(${APPMODE} STREQUAL NATIVE)
+add_custom_target(${module}.init
+                  ALL
+		  DEPENDS ${module}_shared
+                  COMMENT "Copying ${module} init files"
+                  )
+endif (${APPMODE} STREQUAL NATIVE)
+
+# define lib dependencies
+#target_link_libraries(${module}_static
+#                      ${platform_libs}
+#                      ${base_libs}
+#                      ${drv_libs}
+#                      isi_shared
+#                      )
+
+# add link libs, or dlopen failed on Android
+if (ANDROID)
+target_link_libraries(${module}_shared
+                      ${platform_libs}
+                      ${base_libs}
+                      ${drv_libs}
+                      isi_shared
+                      )
+endif (ANDROID)
+
+# define stuff to install
+#install(TARGETS ${module}_static
+#        PUBLIC_HEADER   DESTINATION ${CMAKE_INSTALL_PREFIX}/include/${module}
+#        ARCHIVE         DESTINATION ${CMAKE_INSTALL_PREFIX}/lib
+#        )
+
+install(TARGETS ${module}_shared
+        PUBLIC_HEADER   DESTINATION ${CMAKE_INSTALL_PREFIX}/include/${module}
+        ARCHIVE         DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/${module}
+        LIBRARY         DESTINATION ${CMAKE_INSTALL_PREFIX}/lib/${module}
+        )
+
+# install the sensor driver as well, but to 'bin' location!
+install(FILES       ${LIB_ROOT}/${CMAKE_BUILD_TYPE}/lib/lib${module}.so.${${module}_INTERFACE_CURRENT}
+        DESTINATION ${CMAKE_INSTALL_PREFIX}/bin
+        RENAME      ${module}.drv
+        )
+
+if( DEFINED APPSHELL_TOP_COMPILE)
+add_custom_target(copy_shell_libs_${module} ALL
+       COMMENT "##Copy libs to shell libs"
+       COMMAND ${CMAKE_COMMAND} -E copy ${LIB_ROOT}/${CMAKE_BUILD_TYPE}/lib/lib${module}.so ${CMAKE_HOME_DIRECTORY}/shell_libs/${APPMODE}/ispcore/${PLATFORM}/lib${module}.so
+       #COMMAND ${CMAKE_COMMAND} -E copy_directory ${LIB_ROOT}/${CMAKE_BUILD_TYPE}/include/${module} ${CMAKE_HOME_DIRECTORY}/shell_libs/include/units_headers/${module}
+)
+add_dependencies(copy_shell_libs_${module} ${module}_shared)
+endif( DEFINED APPSHELL_TOP_COMPILE)
+
+if (NOT GENERATE_PARTITION_BUILD)
+add_custom_target(${module}_create_isi_dir
+       COMMAND ${CMAKE_COMMAND} -E make_directory ${LIB_ROOT}/${CMAKE_BUILD_TYPE}/include/isi
+       COMMENT "Create isi dir for ${module}")
+add_dependencies(${module}_create_isi_dir ${module}_shared)
+endif (NOT GENERATE_PARTITION_BUILD)
+
+# create common targets for this module
+include(${UNITS_TOP_DIRECTORY}/targets.cmake)
+
+# create calib data targets
+add_subdirectory(calib)
diff --git a/units/isi/drv/imx678/Sensor0_Entry.cfg b/units/isi/drv/imx678/Sensor0_Entry.cfg
new file mode 100644
index 0000000..30811e6
--- /dev/null
+++ b/units/isi/drv/imx678/Sensor0_Entry.cfg
@@ -0,0 +1,10 @@
+name = "imx678"
+drv = "imx678.drv"
+mode = 0
+[mode.0]
+xml = "IMX678_Basic_3840x2160.xml"
+dwe = "dewarp_config/sensor_dwe_IMX678_Basic_3840x2160.json"
+[mode.1]
+xml = "IMX678_Basic_1920x1080.xml"
+dwe = "dewarp_config/sensor_dwe_IMX678_Basic_1920x1080.json"
+
diff --git a/units/isi/drv/imx678/Sensor1_Entry.cfg b/units/isi/drv/imx678/Sensor1_Entry.cfg
new file mode 100644
index 0000000..1b51d7d
--- /dev/null
+++ b/units/isi/drv/imx678/Sensor1_Entry.cfg
@@ -0,0 +1,10 @@
+name = "imx678"
+drv = "imx678.drv"
+mode = 0
+[mode.0]
+xml = "IMX678_3840x2160.xml"
+dwe = "dewarp_config/sensor_dwe_4K_config.json"
+[mode.1]
+xml = "IMX678_1920x1080.xml"
+dwe = "dewarp_config/sensor_dwe_4K_config.json"
+
diff --git a/units/isi/drv/imx678/calib/CMakeLists.txt b/units/isi/drv/imx678/calib/CMakeLists.txt
new file mode 100644
index 0000000..9944bca
--- /dev/null
+++ b/units/isi/drv/imx678/calib/CMakeLists.txt
@@ -0,0 +1,44 @@
+cmake_minimum_required(VERSION 2.6)
+
+# use upper level module name
+
+# get calib data filenames
+file(GLOB_RECURSE calib_files *.xml)
+list(SORT calib_files)
+
+# a nice helper function
+function(add_calib_target ${calib_file})
+    # get calib data file's base name
+    get_filename_component(base_name ${calib_file} NAME_WE)
+
+    # add target to put sensor driver calibration data file into the 'bin' output and create a similar named symlink to the driver as well
+    add_custom_target(${base_name}_calib
+                      ALL
+                      COMMAND ${CMAKE_COMMAND} -E copy ${calib_file} ${LIB_ROOT}/${CMAKE_BUILD_TYPE}/bin/${base_name}.xml
+                      #COMMAND ${CMAKE_COMMAND} -E create_symlink ${module}.drv ${LIB_ROOT}/${CMAKE_BUILD_TYPE}/bin/${base_name}.drv
+                      DEPENDS ${calib_file}
+                      COMMENT "Configuring ${base_name} calibration database"
+                      )
+
+#    add_dependencies(${module}_static
+#                     ${base_name}_calib
+#                     )
+
+    add_dependencies(${module}_shared
+                     ${base_name}_calib
+                     )
+
+    # install the sensor driver config & similar named driver symlink as well, but to 'bin' location!
+    install(FILES       ${calib_file}
+            DESTINATION ${CMAKE_INSTALL_PREFIX}/bin
+            RENAME      ${base_name}.xml
+            )
+    install(CODE "${CMAKE_COMMAND} -E create_symlink ${module}.drv ${CMAKE_INSTALL_PREFIX}/bin/${base_name}.drv")
+endfunction(add_calib_target)
+
+# loop over all calib data files
+foreach(calib_file ${calib_files})
+    add_calib_target(calib_file)
+endforeach(calib_file)
+
+
diff --git a/units/isi/drv/imx678/calib/IMX678/IMX678_Basic_1920x1080.xml b/units/isi/drv/imx678/calib/IMX678/IMX678_Basic_1920x1080.xml
new file mode 100644
index 0000000..a602297
--- /dev/null
+++ b/units/isi/drv/imx678/calib/IMX678/IMX678_Basic_1920x1080.xml
@@ -0,0 +1,1103 @@
+<?xml version="1.0" ?>
+<matfile>
+   <header type="struct" size="[1 1]">
+      <creation_date index="1" type="char" size="[1 11]">
+         18-Jan-2024
+      </creation_date>
+      <creator index="1" type="char" size="[1 6]">
+         Framos
+      </creator>
+      <sensor_name index="1" type="char" size="[1 6]">
+         IMX678
+      </sensor_name>
+      <sample_name index="1" type="char" size="[1 37]">
+         Basic_1920x1080
+      </sample_name>
+      <generator_version index="1" type="char" size="[1 7]">
+         v2.0.19
+      </generator_version>
+      <resolution index="1" type="cell" size="[1 1]">
+         <cell index="1" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 9]">
+               1920x1080
+            </name>
+            <id index="1" type="char" size="[1 10]">
+               0x00000001
+            </id>
+            <width index="1" type="double" size="[1 1]">
+               [ 1920]
+            </width>
+            <height index="1" type="double" size="[1 1]">
+               [ 1080]
+            </height>
+            <framerate index="1" type="cell" size="[1 3]">
+               <cell index="1" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 6]">
+                     FPS_15
+                  </name>
+                  <fps index="1" type="double" size="[1 1]">
+                     [ 14.9916]
+                  </fps>
+               </cell>
+               <cell index="2" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 6]">
+                     FPS_10
+                  </name>
+                  <fps index="1" type="double" size="[1 1]">
+                     [ 9.9944]
+                  </fps>
+               </cell>
+               <cell index="3" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 6]">
+                     FPS_05
+                  </name>
+                  <fps index="1" type="double" size="[1 1]">
+                     [ 4.9972]
+                  </fps>
+               </cell>
+            </framerate>
+         </cell>
+      </resolution>
+   </header>
+   <sensor type="struct" size="[1 1]">
+      <AWB index="1" type="struct" size="[1 1]">
+         <globals index="1" type="cell" size="[1 1]">
+            <cell index="1" type="struct" size="[1 1]">
+               <name index="1" type="char" size="[1 9]">
+                  1920x1080
+               </name>
+               <resolution index="1" type="char" size="[1 9]">
+                  1920x1080
+               </resolution>
+               <SVDMeanValue index="1" type="double" size="[1 3]">
+                  [0.350821 0.461451 0.18773]
+               </SVDMeanValue>
+               <PCAMatrix index="1" type="double" size="[3 2]">
+                  [-0.747621 0.0895615 0.658059 0.328222 -0.81157 0.48335]
+               </PCAMatrix>
+               <CenterLine index="1" type="double" size="[1 3]">
+                  [-0.840503 -0.541807 -2.5476]
+               </CenterLine>
+               <afRg2 index="1" type="double" size="[1 16]">
+                  [1.20944 1.25673 1.30402 1.35132 1.39861 1.4459 1.4932 1.54049 1.58778 1.63508 1.68237 1.72966 1.77696 1.82425 1.87154 1.9188]
+               </afRg2>
+               <afMaxDist2 index="1" type="double" size="[1 16]">
+                  [0.01049 0.0067139 0.00344454 0.000598565 -0.0017099 -0.00358594 -0.00493888 -0.00576626 -0.0060659 -0.00582415 -0.00500751 -0.00359477 -0.00162514 0.000989081 0.00422767 0.010466]
+               </afMaxDist2>
+               <afRg1 index="1" type="double" size="[1 16]">
+                  [1.20944 1.25673 1.30402 1.35132 1.39861 1.4459 1.4932 1.54049 1.58778 1.63508 1.68237 1.72966 1.77696 1.82425 1.87154 1.9188]
+               </afRg1>
+               <afMaxDist1 index="1" type="double" size="[1 16]">
+                  [-0.000490041 0.0032861 0.00655546 0.00940144 0.0117099 0.0135859 0.0149389 0.0157663 0.0160659 0.0158242 0.0150075 0.0135948 0.0116251 0.00901092 0.00577233 -0.00046563]
+               </afMaxDist1>
+               <afGlobalFade2 index="1" type="double" size="[1 16]">
+                  [0.8 0.877256 0.954511 1.03177 1.10902 1.18628 1.26353 1.34079 1.41805 1.4953 1.57256 1.64981 1.72707 1.80432 1.88158 1.9588]
+               </afGlobalFade2>
+               <afGlobalGainDistance2 index="1" type="double" size="[1 16]">
+                  [0.155026 0.143403 0.132925 0.123335 0.114897 0.107527 0.101224 0.0961947 0.09238 0.0900132 0.0889725 0.0893575 0.091282 0.0947975 0.100008 0.11196]
+               </afGlobalGainDistance2>
+               <afGlobalFade1 index="1" type="double" size="[1 16]">
+                  [0.8 0.877256 0.954511 1.03177 1.10902 1.18628 1.26353 1.34079 1.41805 1.4953 1.57256 1.64981 1.72707 1.80432 1.88158 1.9588]
+               </afGlobalFade1>
+               <afGlobalGainDistance1 index="1" type="double" size="[1 16]">
+                  [0.0449741 0.0565967 0.0670752 0.0766648 0.0851034 0.0924732 0.0987762 0.103805 0.10762 0.109987 0.111027 0.110643 0.108718 0.105203 0.099992 0.088042]
+               </afGlobalGainDistance1>
+               <fRgProjIndoorMin index="1" type="double" size="[1 1]">
+                  [ 1.2094]
+               </fRgProjIndoorMin>
+               <fRgProjMax index="1" type="double" size="[1 1]">
+                  [ 1.9188]
+               </fRgProjMax>
+               <fRgProjMaxSky index="1" type="double" size="[1 1]">
+                  [ 1.9588]
+               </fRgProjMaxSky>
+               <fRgProjOutdoorMin index="1" type="double" size="[1 1]">
+                  [ 1.6351]
+               </fRgProjOutdoorMin>
+               <awb_clip_outdoor index="1" type="char" size="[1 3]">
+                  D65
+               </awb_clip_outdoor>
+               <K_Factor index="1" type="double" size="[1 1]">
+                  [ 4.5676]
+               </K_Factor>
+               <afFade2 index="1" type="double" size="[1 6]">
+                  [0.75 1.28836 1.77672 2.164 2.6 3.0618]
+               </afFade2>
+               <afCbMinRegionMax index="1" type="double" size="[1 6]">
+                  [114 114 105 95 95 90]
+               </afCbMinRegionMax>
+               <afCrMinRegionMax index="1" type="double" size="[1 6]">
+                  [83 83 110 120 122 128]
+               </afCrMinRegionMax>
+               <afMaxCSumRegionMax index="1" type="double" size="[1 6]">
+                  [28 27 18 16 9 9]
+               </afMaxCSumRegionMax>
+               <afCbMinRegionMin index="1" type="double" size="[1 6]">
+                  [123 123 123 123 123 120]
+               </afCbMinRegionMin>
+               <afCrMinRegionMin index="1" type="double" size="[1 6]">
+                  [123 123 123 123 123 126]
+               </afCrMinRegionMin>
+               <afMaxCSumRegionMin index="1" type="double" size="[1 6]">
+                  [5 5 5 5 5 5]
+               </afMaxCSumRegionMin>
+               <RegionSize index="1" type="double" size="[1 1]">
+                  [ 1]
+               </RegionSize>
+               <RegionSizeInc index="1" type="double" size="[1 1]">
+                  [ 0.8]
+               </RegionSizeInc>
+               <RegionSizeDec index="1" type="double" size="[1 1]">
+                  [ 0.05]
+               </RegionSizeDec>
+               <IIR index="1" type="struct" size="[1 1]">
+                  <DampCoefAdd index="1" type="double" size="[1 1]">
+                     [ 0.05]
+                  </DampCoefAdd>
+                  <DampCoefSub index="1" type="double" size="[1 1]">
+                     [ 0.05]
+                  </DampCoefSub>
+                  <DampFilterThreshold index="1" type="double" size="[1 1]">
+                     [ 0.4]
+                  </DampFilterThreshold>
+                  <DampingCoefMin index="1" type="double" size="[1 1]">
+                     [ 0.5]
+                  </DampingCoefMin>
+                  <DampingCoefMax index="1" type="double" size="[1 1]">
+                     [ 0.9]
+                  </DampingCoefMax>
+                  <DampingCoefInit index="1" type="double" size="[1 1]">
+                     [ 0.5]
+                  </DampingCoefInit>
+                  <ExpPriorFilterSizeMax index="1" type="double" size="[1 1]">
+                     [ 50]
+                  </ExpPriorFilterSizeMax>
+                  <ExpPriorFilterSizeMin index="1" type="double" size="[1 1]">
+                     [ 1]
+                  </ExpPriorFilterSizeMin>
+                  <ExpPriorMiddle index="1" type="double" size="[1 1]">
+                     [ 0.5]
+                  </ExpPriorMiddle>
+               </IIR>
+            </cell>
+         </globals>
+         <illumination index="1" type="cell" size="[1 3]">
+            <cell index="1" type="struct" size="[1 1]">
+               <name index="1" type="char" size="[1 1]">
+                  A
+               </name>
+               <doorType index="1" type="char" size="[1 6]">
+                  Indoor
+               </doorType>
+               <GMM index="1" type="struct" size="[1 1]">
+                  <invCovMatrix index="1" type="double" size="[2 2]">
+                     [2651.53 3387.15 3387.15 7258.5713]
+                  </invCovMatrix>
+                  <GaussianScalingFactor index="1" type="double" size="[1 1]">
+                     [ 443.7393]
+                  </GaussianScalingFactor>
+                  <tau index="1" type="double" size="[1 2]">
+                     [0.75 0.9]
+                  </tau>
+                  <GaussianMeanValue index="1" type="double" size="[1 2]">
+                     [-0.0306101 -0.0036106]
+                  </GaussianMeanValue>
+               </GMM>
+               <aLSC index="1" type="cell" size="[1 1]">
+                  <cell index="1" type="struct" size="[1 1]">
+                     <resolution index="1" type="char" size="[1 9]">
+                        1920x1080
+                     </resolution>
+                     <LSC_PROFILE_LIST index="1" type="char" size="[1 15]">
+                        1920x1080_A_100
+                     </LSC_PROFILE_LIST>
+                  </cell>
+               </aLSC>
+               <manualWB index="1" type="double" size="[1 4]">
+                  [1.23923 1 1 2.7836]
+               </manualWB>
+               <manualccMatrix index="1" type="double" size="[3 3]">
+                  [1.58915 0.0377625 -0.616429 -0.945174 2.52794 -0.537235 -0.217771 -1.76346 2.9884]
+               </manualccMatrix>
+               <manualccOffsets index="1" type="double" size="[1 3]">
+                  [-36.4461 -38.1612 -29.3263]
+               </manualccOffsets>
+               <awbType index="1" type="char" size="[1 4]">
+                  AUTO
+               </awbType>
+               <sat_CT index="1" type="struct" size="[1 1]">
+                  <gains index="1" type="double" size="[1 4]">
+                     [1 2 4 8]
+                  </gains>
+                  <sat index="1" type="double" size="[1 4]">
+                     [100 95 90 74]
+                  </sat>
+               </sat_CT>
+               <vig_CT index="1" type="struct" size="[1 1]">
+                  <gains index="1" type="double" size="[1 4]">
+                     [1 2 4 8]
+                  </gains>
+                  <vig index="1" type="double" size="[1 4]">
+                     [100 95 90 70]
+                  </vig>
+               </vig_CT>
+               <aCC index="1" type="struct" size="[1 1]">
+                  <CC_PROFILE_LIST index="1" type="char" size="[1 5]">
+                     A_104
+                  </CC_PROFILE_LIST>
+               </aCC>
+            </cell>
+            <cell index="2" type="struct" size="[1 1]">
+               <name index="1" type="char" size="[1 3]">
+                  D65
+               </name>
+               <doorType index="1" type="char" size="[1 7]">
+                  Outdoor
+               </doorType>
+               <GMM index="1" type="struct" size="[1 1]">
+                  <invCovMatrix index="1" type="double" size="[2 2]">
+                     [533.326 -38.9322 -38.9322 2476.1192]
+                  </invCovMatrix>
+                  <GaussianScalingFactor index="1" type="double" size="[1 1]">
+                     [ 182.7902]
+                  </GaussianScalingFactor>
+                  <tau index="1" type="double" size="[1 2]">
+                     [1 1]
+                  </tau>
+                  <GaussianMeanValue index="1" type="double" size="[1 2]">
+                     [0.145974 -0.0036106]
+                  </GaussianMeanValue>
+               </GMM>
+               <aLSC index="1" type="cell" size="[1 1]">
+                  <cell index="1" type="struct" size="[1 1]">
+                     <resolution index="1" type="char" size="[1 9]">
+                        1920x1080
+                     </resolution>
+                     <LSC_PROFILE_LIST index="1" type="char" size="[1 16]">
+                        1920x1080_D65_90
+                     </LSC_PROFILE_LIST>
+                  </cell>
+               </aLSC>
+               <manualWB index="1" type="double" size="[1 4]">
+                  [1.98523 1 1 1.6928]
+               </manualWB>
+               <manualccMatrix index="1" type="double" size="[3 3]">
+                  [2.1243 -0.955239 -0.160056 -0.585798 2.27098 -0.616837 -0.0192654 -0.974804 2.036]
+               </manualccMatrix>
+               <manualccOffsets index="1" type="double" size="[1 3]">
+                  [-36.8576 -44.6401 -45.1663]
+               </manualccOffsets>
+               <awbType index="1" type="char" size="[1 4]">
+                  AUTO
+               </awbType>
+               <sat_CT index="1" type="struct" size="[1 1]">
+                  <gains index="1" type="double" size="[1 4]">
+                     [1 2 4 8]
+                  </gains>
+                  <sat index="1" type="double" size="[1 4]">
+                     [100 95 90 74]
+                  </sat>
+               </sat_CT>
+               <vig_CT index="1" type="struct" size="[1 1]">
+                  <gains index="1" type="double" size="[1 4]">
+                     [1 2 4 8]
+                  </gains>
+                  <vig index="1" type="double" size="[1 4]">
+                     [100 95 90 70]
+                  </vig>
+               </vig_CT>
+               <aCC index="1" type="struct" size="[1 1]">
+                  <CC_PROFILE_LIST index="1" type="char" size="[1 7]">
+                     D65_109
+                  </CC_PROFILE_LIST>
+               </aCC>
+            </cell>
+            <cell index="3" type="struct" size="[1 1]">
+               <name index="1" type="char" size="[1 10]">
+                  F11 (TL84)
+               </name>
+               <doorType index="1" type="char" size="[1 6]">
+                  Indoor
+               </doorType>
+               <GMM index="1" type="struct" size="[1 1]">
+                  <invCovMatrix index="1" type="double" size="[2 2]">
+                     [797.808 508.94 508.94 2977.8141]
+                  </invCovMatrix>
+                  <GaussianScalingFactor index="1" type="double" size="[1 1]">
+                     [ 231.5529]
+                  </GaussianScalingFactor>
+                  <tau index="1" type="double" size="[1 2]">
+                     [0.75 0.9]
+                  </tau>
+                  <GaussianMeanValue index="1" type="double" size="[1 2]">
+                     [0.0300834 -0.019091]
+                  </GaussianMeanValue>
+               </GMM>
+               <aLSC index="1" type="cell" size="[1 1]">
+                  <cell index="1" type="struct" size="[1 1]">
+                     <resolution index="1" type="char" size="[1 9]">
+                        1920x1080
+                     </resolution>
+                     <LSC_PROFILE_LIST index="1" type="char" size="[1 16]">
+                        1920x1080_F11_90
+                     </LSC_PROFILE_LIST>
+                  </cell>
+               </aLSC>
+               <manualWB index="1" type="double" size="[1 4]">
+                  [1.48927 1 1 2.4188]
+               </manualWB>
+               <manualccMatrix index="1" type="double" size="[3 3]">
+                  [2.05797 -0.842641 -0.197003 -0.842204 2.361 -0.441285 -0.076882 -1.19612 2.2813]
+               </manualccMatrix>
+               <manualccOffsets index="1" type="double" size="[1 3]">
+                  [-32.4424 -44.2278 -33.9074]
+               </manualccOffsets>
+               <awbType index="1" type="char" size="[1 4]">
+                  AUTO
+               </awbType>
+               <sat_CT index="1" type="struct" size="[1 1]">
+                  <gains index="1" type="double" size="[1 4]">
+                     [1 2 4 8]
+                  </gains>
+                  <sat index="1" type="double" size="[1 4]">
+                     [100 95 90 74]
+                  </sat>
+               </sat_CT>
+               <vig_CT index="1" type="struct" size="[1 1]">
+                  <gains index="1" type="double" size="[1 4]">
+                     [1 2 4 8]
+                  </gains>
+                  <vig index="1" type="double" size="[1 4]">
+                     [100 95 90 70]
+                  </vig>
+               </vig_CT>
+               <aCC index="1" type="struct" size="[1 1]">
+                  <CC_PROFILE_LIST index="1" type="char" size="[1 7]">
+                     F11_108
+                  </CC_PROFILE_LIST>
+               </aCC>
+            </cell>
+         </illumination>
+      </AWB>
+      <LSC index="1" type="cell" size="[1 4]">
+         <cell index="1" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 15]">
+               1920x1080_A_100
+            </name>
+            <resolution index="1" type="char" size="[1 9]">
+               1920x1080
+            </resolution>
+            <illumination index="1" type="char" size="[1 1]">
+               A
+            </illumination>
+            <LSC_sectors index="1" type="double" size="[1 1]">
+               [ 16]
+            </LSC_sectors>
+            <LSC_No index="1" type="double" size="[1 1]">
+               [ 10]
+            </LSC_No>
+            <LSC_Xo index="1" type="double" size="[1 1]">
+               [ 15]
+            </LSC_Xo>
+            <LSC_Yo index="1" type="double" size="[1 1]">
+               [ 15]
+            </LSC_Yo>
+            <LSC_SECT_SIZE_X index="1" type="double" size="[1 8]">
+               [120 120 120 120 120 120 120 120]
+            </LSC_SECT_SIZE_X>
+            <LSC_SECT_SIZE_Y index="1" type="double" size="[1 8]">
+               [67 67 67 67 68 68 68 68]
+            </LSC_SECT_SIZE_Y>
+            <vignetting index="1" type="double" size="[1 1]">
+               [ 100]
+            </vignetting>
+            <LSC_SAMPLES_red index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_red>
+            <LSC_SAMPLES_greenR index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_greenR>
+            <LSC_SAMPLES_greenB index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_greenB>
+            <LSC_SAMPLES_blue index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_blue>
+         </cell>
+         <cell index="2" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 16]">
+               1920x1080_D65_90
+            </name>
+            <resolution index="1" type="char" size="[1 9]">
+               1920x1080
+            </resolution>
+            <illumination index="1" type="char" size="[1 3]">
+               D65
+            </illumination>
+            <LSC_sectors index="1" type="double" size="[1 1]">
+               [ 16]
+            </LSC_sectors>
+            <LSC_No index="1" type="double" size="[1 1]">
+               [ 10]
+            </LSC_No>
+            <LSC_Xo index="1" type="double" size="[1 1]">
+               [ 15]
+            </LSC_Xo>
+            <LSC_Yo index="1" type="double" size="[1 1]">
+               [ 15]
+            </LSC_Yo>
+            <LSC_SECT_SIZE_X index="1" type="double" size="[1 8]">
+               [120 120 120 120 120 120 120 120]
+            </LSC_SECT_SIZE_X>
+            <LSC_SECT_SIZE_Y index="1" type="double" size="[1 8]">
+               [67 67 67 67 68 68 68 68]
+            </LSC_SECT_SIZE_Y>
+            <vignetting index="1" type="double" size="[1 1]">
+               [ 90]
+            </vignetting>
+            <LSC_SAMPLES_red index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_red>
+            <LSC_SAMPLES_greenR index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_greenR>
+            <LSC_SAMPLES_greenB index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_greenB>
+            <LSC_SAMPLES_blue index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_blue>
+         </cell>
+         <cell index="3" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 16]">
+               1920x1080_F11_90
+            </name>
+            <resolution index="1" type="char" size="[1 9]">
+               1920x1080
+            </resolution>
+            <illumination index="1" type="char" size="[1 3]">
+               F11
+            </illumination>
+            <LSC_sectors index="1" type="double" size="[1 1]">
+               [ 16]
+            </LSC_sectors>
+            <LSC_No index="1" type="double" size="[1 1]">
+               [ 10]
+            </LSC_No>
+            <LSC_Xo index="1" type="double" size="[1 1]">
+               [ 15]
+            </LSC_Xo>
+            <LSC_Yo index="1" type="double" size="[1 1]">
+               [ 15]
+            </LSC_Yo>
+            <LSC_SECT_SIZE_X index="1" type="double" size="[1 8]">
+               [120 120 120 120 120 120 120 120]
+            </LSC_SECT_SIZE_X>
+            <LSC_SECT_SIZE_Y index="1" type="double" size="[1 8]">
+               [67 67 67 67 68 68 68 68]
+            </LSC_SECT_SIZE_Y>
+            <vignetting index="1" type="double" size="[1 1]">
+               [ 90]
+            </vignetting>
+            <LSC_SAMPLES_red index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_red>
+            <LSC_SAMPLES_greenR index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_greenR>
+            <LSC_SAMPLES_greenB index="1" type="double" size="[17 17]">
+               [1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024]
+            </LSC_SAMPLES_greenB>
+            <LSC_SAMPLES_blue index="1" type="double" size="[17 17]">
+               [1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024]
+            </LSC_SAMPLES_blue>
+         </cell>
+         <cell index="4" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 15]">
+               1920x1080_F2_90
+            </name>
+            <resolution index="1" type="char" size="[1 9]">
+               1920x1080
+            </resolution>
+            <illumination index="1" type="char" size="[1 2]">
+               F2
+            </illumination>
+            <LSC_sectors index="1" type="double" size="[1 1]">
+               [ 16]
+            </LSC_sectors>
+            <LSC_No index="1" type="double" size="[1 1]">
+               [ 10]
+            </LSC_No>
+            <LSC_Xo index="1" type="double" size="[1 1]">
+               [ 15]
+            </LSC_Xo>
+            <LSC_Yo index="1" type="double" size="[1 1]">
+               [ 15]
+            </LSC_Yo>
+            <LSC_SECT_SIZE_X index="1" type="double" size="[1 8]">
+               [120 120 120 120 120 120 120 120]
+            </LSC_SECT_SIZE_X>
+            <LSC_SECT_SIZE_Y index="1" type="double" size="[1 8]">
+               [67 67 67 67 68 68 68 68]
+            </LSC_SECT_SIZE_Y>
+            <vignetting index="1" type="double" size="[1 1]">
+               [ 90]
+            </vignetting>
+            <LSC_SAMPLES_red index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_red>
+            <LSC_SAMPLES_greenR index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_greenR>
+            <LSC_SAMPLES_greenB index="1" type="double" size="[17 17]">
+               [1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024]
+            </LSC_SAMPLES_greenB>
+            <LSC_SAMPLES_blue index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_blue>
+         </cell>
+      </LSC>
+      <CC index="1" type="cell" size="[1 4]">
+         <cell index="1" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 5]">
+               A_104
+            </name>
+            <saturation index="1" type="double" size="[1 1]">
+               [ 104]
+            </saturation>
+            <ccMatrix index="1" type="double" size="[3 3]">
+               [1.58915 0.0377625 -0.616429 -0.945174 2.52794 -0.537235 -0.217771 -1.76346 2.9884]
+            </ccMatrix>
+            <ccOffsets index="1" type="double" size="[1 3]">
+               [-36.4461 -38.1612 -29.3263]
+            </ccOffsets>
+            <wb index="1" type="double" size="[1 4]">
+               [1.23923 1 1 2.7836]
+            </wb>
+         </cell>
+         <cell index="2" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 7]">
+               D65_109
+            </name>
+            <saturation index="1" type="double" size="[1 1]">
+               [ 109]
+            </saturation>
+            <ccMatrix index="1" type="double" size="[3 3]">
+               [2.1243 -0.955239 -0.160056 -0.585798 2.27098 -0.616837 -0.0192654 -0.974804 2.036]
+            </ccMatrix>
+            <ccOffsets index="1" type="double" size="[1 3]">
+               [-36.8576 -44.6401 -45.1663]
+            </ccOffsets>
+            <wb index="1" type="double" size="[1 4]">
+               [1.98523 1 1 1.6928]
+            </wb>
+         </cell>
+         <cell index="3" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 7]">
+               F11_108
+            </name>
+            <saturation index="1" type="double" size="[1 1]">
+               [ 108]
+            </saturation>
+            <ccMatrix index="1" type="double" size="[3 3]">
+               [2.05797 -0.842641 -0.197003 -0.842204 2.361 -0.441285 -0.076882 -1.19612 2.2813]
+            </ccMatrix>
+            <ccOffsets index="1" type="double" size="[1 3]">
+               [-32.4424 -44.2278 -33.9074]
+            </ccOffsets>
+            <wb index="1" type="double" size="[1 4]">
+               [1.48927 1 1 2.4188]
+            </wb>
+         </cell>
+         <cell index="4" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 6]">
+               F2_108
+            </name>
+            <saturation index="1" type="double" size="[1 1]">
+               [ 108]
+            </saturation>
+            <ccMatrix index="1" type="double" size="[3 3]">
+               [2.64855 -1.46973 -0.171784 -0.746979 2.12541 -0.309928 -0.0672896 -1.22039 2.3223]
+            </ccMatrix>
+            <ccOffsets index="1" type="double" size="[1 3]">
+               [-28.8121 -42.8676 -35.6405]
+            </ccOffsets>
+            <wb index="1" type="double" size="[1 4]">
+               [1.67897 1 1 2.4837]
+            </wb>
+         </cell>
+      </CC>
+      <AF index="1" type="struct" size="[1 1]">
+         <tbd index="1" type="double" size="[1 1]">
+            [ -1]
+         </tbd>
+      </AF>
+      <AEC index="1" type="struct" size="[1 1]">
+         <SetPoint index="1" type="double" size="[1 1]">
+            [ 80]
+         </SetPoint>
+         <ClmTolerance index="1" type="double" size="[1 1]">
+            [ 20]
+         </ClmTolerance>
+         <DampOver index="1" type="double" size="[1 1]">
+            [ 0.2]
+         </DampOver>
+         <DampUnder index="1" type="double" size="[1 1]">
+            [ 0.3]
+         </DampUnder>
+         <DampOverVideo index="1" type="double" size="[1 1]">
+            [ 0.7]
+         </DampOverVideo>
+         <DampUnderVideo index="1" type="double" size="[1 1]">
+            [ 0.9]
+         </DampUnderVideo>
+         <ECM index="1" type="cell" size="[1 3]">
+            <cell index="1" type="struct" size="[1 1]">
+               <name index="1" type="char" size="[1 16]">
+                  1920x1080_FPS_15
+               </name>
+               <PrioritySchemes index="1" type="cell" size="[1 3]">
+                  <cell index="1" type="struct" size="[1 1]">
+                     <name index="1" type="char" size="[1 4]">
+                        fast
+                     </name>
+                     <OffsetT0Fac index="1" type="double" size="[1 1]">
+                        [ 1]
+                     </OffsetT0Fac>
+                     <SlopeA0 index="1" type="double" size="[1 1]">
+                        [ 2]
+                     </SlopeA0>
+                  </cell>
+                  <cell index="2" type="struct" size="[1 1]">
+                     <name index="1" type="char" size="[1 6]">
+                        normal
+                     </name>
+                     <OffsetT0Fac index="1" type="double" size="[1 1]">
+                        [ 1]
+                     </OffsetT0Fac>
+                     <SlopeA0 index="1" type="double" size="[1 1]">
+                        [ 1]
+                     </SlopeA0>
+                  </cell>
+                  <cell index="3" type="struct" size="[1 1]">
+                     <name index="1" type="char" size="[1 4]">
+                        slow
+                     </name>
+                     <OffsetT0Fac index="1" type="double" size="[1 1]">
+                        [ 2]
+                     </OffsetT0Fac>
+                     <SlopeA0 index="1" type="double" size="[1 1]">
+                        [ 1]
+                     </SlopeA0>
+                  </cell>
+               </PrioritySchemes>
+            </cell>
+            <cell index="2" type="struct" size="[1 1]">
+               <name index="1" type="char" size="[1 16]">
+                  1920x1080_FPS_10
+               </name>
+               <PrioritySchemes index="1" type="cell" size="[1 3]">
+                  <cell index="1" type="struct" size="[1 1]">
+                     <name index="1" type="char" size="[1 4]">
+                        fast
+                     </name>
+                     <OffsetT0Fac index="1" type="double" size="[1 1]">
+                        [ 1]
+                     </OffsetT0Fac>
+                     <SlopeA0 index="1" type="double" size="[1 1]">
+                        [ 2]
+                     </SlopeA0>
+                  </cell>
+                  <cell index="2" type="struct" size="[1 1]">
+                     <name index="1" type="char" size="[1 6]">
+                        normal
+                     </name>
+                     <OffsetT0Fac index="1" type="double" size="[1 1]">
+                        [ 1]
+                     </OffsetT0Fac>
+                     <SlopeA0 index="1" type="double" size="[1 1]">
+                        [ 1]
+                     </SlopeA0>
+                  </cell>
+                  <cell index="3" type="struct" size="[1 1]">
+                     <name index="1" type="char" size="[1 4]">
+                        slow
+                     </name>
+                     <OffsetT0Fac index="1" type="double" size="[1 1]">
+                        [ 2]
+                     </OffsetT0Fac>
+                     <SlopeA0 index="1" type="double" size="[1 1]">
+                        [ 1]
+                     </SlopeA0>
+                  </cell>
+               </PrioritySchemes>
+            </cell>
+            <cell index="3" type="struct" size="[1 1]">
+               <name index="1" type="char" size="[1 16]">
+                  1920x1080_FPS_05
+               </name>
+               <PrioritySchemes index="1" type="cell" size="[1 3]">
+                  <cell index="1" type="struct" size="[1 1]">
+                     <name index="1" type="char" size="[1 4]">
+                        fast
+                     </name>
+                     <OffsetT0Fac index="1" type="double" size="[1 1]">
+                        [ 1]
+                     </OffsetT0Fac>
+                     <SlopeA0 index="1" type="double" size="[1 1]">
+                        [ 1]
+                     </SlopeA0>
+                  </cell>
+                  <cell index="2" type="struct" size="[1 1]">
+                     <name index="1" type="char" size="[1 6]">
+                        normal
+                     </name>
+                     <OffsetT0Fac index="1" type="double" size="[1 1]">
+                        [ 2]
+                     </OffsetT0Fac>
+                     <SlopeA0 index="1" type="double" size="[1 1]">
+                        [ 0.9]
+                     </SlopeA0>
+                  </cell>
+                  <cell index="3" type="struct" size="[1 1]">
+                     <name index="1" type="char" size="[1 4]">
+                        slow
+                     </name>
+                     <OffsetT0Fac index="1" type="double" size="[1 1]">
+                        [ 4]
+                     </OffsetT0Fac>
+                     <SlopeA0 index="1" type="double" size="[1 1]">
+                        [ 0.9]
+                     </SlopeA0>
+                  </cell>
+               </PrioritySchemes>
+            </cell>
+         </ECM>
+         <aFpsMaxGain index="1" type="double" size="[1 1]">
+            [ 8]
+         </aFpsMaxGain>
+      </AEC>
+      <BLS index="1" type="cell" size="[1 1]">
+         <cell index="1" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 9]">
+               1920x1080
+            </name>
+            <resolution index="1" type="char" size="[1 9]">
+               1920x1080
+            </resolution>
+            <blsData index="1" type="double" size="[1 4]">
+               [200 200 200 200]
+            </blsData>
+         </cell>
+      </BLS>
+      <DEGAMMA index="1" type="cell" size="[1 1]">
+         <cell index="1" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 6]">
+               linear
+            </name>
+            <degamma_dx index="1" type="double" size="[1 16]">
+               [256 512 768 1024 1280 1536 1792 2048 2304 2560 2816 3072 3328 3584 3840 4096]
+            </degamma_dx>
+            <degamma_y index="1" type="double" size="[1 17]">
+               [0 256 512 768 1024 1280 1536 1792 2048 2304 2560 2816 3072 3328 3584 3840 4095]
+            </degamma_y>
+         </cell>
+      </DEGAMMA>
+      <WDR index="1" type="struct" size="[1 1]">
+         <tbd index="1" type="double" size="[1 1]">
+            [ -1]
+         </tbd>
+         <curve1 index="1" type="struct" size="[1 1]">
+            <xval index="1" type="double" size="[1 33]">
+               [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
+            </xval>
+            <yval index="1" type="double" size="[1 33]">
+               [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
+            </yval>
+         </curve1>
+         <curve2 index="1" type="struct" size="[1 1]">
+            <xval index="1" type="double" size="[1 33]">
+               [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
+            </xval>
+            <yval index="1" type="double" size="[1 33]">
+               [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
+            </yval>
+         </curve2>
+      </WDR>
+      <CAC index="1" type="cell" size="[1 1]">
+         <cell index="1" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 9]">
+               1920x1080
+            </name>
+            <resolution index="1" type="char" size="[1 9]">
+               1920x1080
+            </resolution>
+            <x_normshift index="1" type="double" size="[1 1]">
+               [ 0]
+            </x_normshift>
+            <x_normfactor index="1" type="double" size="[1 1]">
+               [ 0]
+            </x_normfactor>
+            <y_normshift index="1" type="double" size="[1 1]">
+               [ 0]
+            </y_normshift>
+            <y_normfactor index="1" type="double" size="[1 1]">
+               [ 0]
+            </y_normfactor>
+            <x_offset index="1" type="double" size="[1 1]">
+               [ 0]
+            </x_offset>
+            <y_offset index="1" type="double" size="[1 1]">
+               [ 0]
+            </y_offset>
+            <red_parameters index="1" type="double" size="[1 3]">
+               [0 0 0]
+            </red_parameters>
+            <blue_parameters index="1" type="double" size="[1 3]">
+               [0 0 0]
+            </blue_parameters>
+         </cell>
+      </CAC>
+      <DPF index="1" type="cell" size="[1 1]">
+         <cell index="1" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 9]">
+               1920x1080
+            </name>
+            <resolution index="1" type="char" size="[1 9]">
+               1920x1080
+            </resolution>
+            <NLL_SEGMENTATION index="1" type="double" size="[1 1]">
+               [ 1]
+            </NLL_SEGMENTATION>
+            <nll_coeff_n index="1" type="double" size="[1 17]">
+               [1023 859 589 476 410 334 288 258 235 203 182 166 143 128 117 108 101]
+            </nll_coeff_n>
+            <SigmaGreen index="1" type="double" size="[1 1]">
+               [ 4]
+            </SigmaGreen>
+            <SigmaRedBlue index="1" type="double" size="[1 1]">
+               [ 4]
+            </SigmaRedBlue>
+            <Gradient index="1" type="double" size="[1 1]">
+               [ 0.15]
+            </Gradient>
+            <Offset index="1" type="double" size="[1 1]">
+               [ 0]
+            </Offset>
+            <NlGains index="1" type="double" size="[1 4]">
+               [1 1 1 1]
+            </NlGains>
+         </cell>
+      </DPF>
+      <DPCC index="1" type="cell" size="[1 1]">
+         <cell index="1" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 9]">
+               1920x1080
+            </name>
+            <resolution index="1" type="char" size="[1 9]">
+               1920x1080
+            </resolution>
+            <register index="1" type="cell" size="[1 23]">
+               <cell index="1" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 13]">
+                     ISP_DPCC_MODE
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0004
+                  </value>
+               </cell>
+               <cell index="2" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 17]">
+                     ISP_DPCC_OUT_MODE
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0003
+                  </value>
+               </cell>
+               <cell index="3" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 16]">
+                     ISP_DPCC_SET_USE
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0007
+                  </value>
+               </cell>
+               <cell index="4" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 21]">
+                     ISP_DPCC_METHODS_SET1
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x1D1D
+                  </value>
+               </cell>
+               <cell index="5" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 21]">
+                     ISP_DPCC_METHODS_SET2
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0707
+                  </value>
+               </cell>
+               <cell index="6" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 21]">
+                     ISP_DPCC_METHODS_SET3
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x1F1F
+                  </value>
+               </cell>
+               <cell index="7" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 22]">
+                     ISP_DPCC_LINE_THRESH_1
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0808
+                  </value>
+               </cell>
+               <cell index="8" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 23]">
+                     ISP_DPCC_LINE_MAD_FAC_1
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0404
+                  </value>
+               </cell>
+               <cell index="9" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 17]">
+                     ISP_DPCC_PG_FAC_1
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0403
+                  </value>
+               </cell>
+               <cell index="10" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 21]">
+                     ISP_DPCC_RND_THRESH_1
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0A0A
+                  </value>
+               </cell>
+               <cell index="11" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 17]">
+                     ISP_DPCC_RG_FAC_1
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x2020
+                  </value>
+               </cell>
+               <cell index="12" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 22]">
+                     ISP_DPCC_LINE_THRESH_2
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x100C
+                  </value>
+               </cell>
+               <cell index="13" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 23]">
+                     ISP_DPCC_LINE_MAD_FAC_2
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x1810
+                  </value>
+               </cell>
+               <cell index="14" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 17]">
+                     ISP_DPCC_PG_FAC_2
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0403
+                  </value>
+               </cell>
+               <cell index="15" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 21]">
+                     ISP_DPCC_RND_THRESH_2
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0808
+                  </value>
+               </cell>
+               <cell index="16" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 17]">
+                     ISP_DPCC_RG_FAC_2
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0808
+                  </value>
+               </cell>
+               <cell index="17" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 22]">
+                     ISP_DPCC_LINE_THRESH_3
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x2020
+                  </value>
+               </cell>
+               <cell index="18" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 23]">
+                     ISP_DPCC_LINE_MAD_FAC_3
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0404
+                  </value>
+               </cell>
+               <cell index="19" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 17]">
+                     ISP_DPCC_PG_FAC_3
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0403
+                  </value>
+               </cell>
+               <cell index="20" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 21]">
+                     ISP_DPCC_RND_THRESH_3
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0806
+                  </value>
+               </cell>
+               <cell index="21" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 17]">
+                     ISP_DPCC_RG_FAC_3
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0404
+                  </value>
+               </cell>
+               <cell index="22" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 18]">
+                     ISP_DPCC_RO_LIMITS
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0A0A
+                  </value>
+               </cell>
+               <cell index="23" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 17]">
+                     ISP_DPCC_RND_OFFS
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0FFF
+                  </value>
+               </cell>
+            </register>
+         </cell>
+      </DPCC>
+   </sensor>
+   <system type="struct" size="[1 1]">
+      <AFPS index="1" type="struct" size="[1 1]">
+         <aFpsDefault index="1" type="char" size="[1 2]">
+            on
+         </aFpsDefault>
+      </AFPS>
+   </system>
+<tuning>
+      <awb enable="true">
+         <damping>true</damping>
+         <index>2</index>
+         <mode>2</mode>
+      </awb>
+   </tuning>
+</matfile>
diff --git a/units/isi/drv/imx678/calib/IMX678/IMX678_Basic_3840x2160.xml b/units/isi/drv/imx678/calib/IMX678/IMX678_Basic_3840x2160.xml
new file mode 100644
index 0000000..82035bf
--- /dev/null
+++ b/units/isi/drv/imx678/calib/IMX678/IMX678_Basic_3840x2160.xml
@@ -0,0 +1,1103 @@
+<?xml version="1.0" ?>
+<matfile>
+   <header type="struct" size="[1 1]">
+      <creation_date index="1" type="char" size="[1 11]">
+         18-Jan-2024
+      </creation_date>
+      <creator index="1" type="char" size="[1 6]">
+         Framos
+      </creator>
+      <sensor_name index="1" type="char" size="[1 6]">
+         IMX678
+      </sensor_name>
+      <sample_name index="1" type="char" size="[1 37]">
+         Basic_3840x2160
+      </sample_name>
+      <generator_version index="1" type="char" size="[1 7]">
+         v2.0.19
+      </generator_version>
+      <resolution index="1" type="cell" size="[1 1]">
+         <cell index="1" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 9]">
+               3840x2160
+            </name>
+            <id index="1" type="char" size="[1 10]">
+               0x00000001
+            </id>
+            <width index="1" type="double" size="[1 1]">
+               [ 3840]
+            </width>
+            <height index="1" type="double" size="[1 1]">
+               [ 2160]
+            </height>
+            <framerate index="1" type="cell" size="[1 3]">
+               <cell index="1" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 6]">
+                     FPS_15
+                  </name>
+                  <fps index="1" type="double" size="[1 1]">
+                     [ 14.9916]
+                  </fps>
+               </cell>
+               <cell index="2" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 6]">
+                     FPS_10
+                  </name>
+                  <fps index="1" type="double" size="[1 1]">
+                     [ 9.9944]
+                  </fps>
+               </cell>
+               <cell index="3" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 6]">
+                     FPS_05
+                  </name>
+                  <fps index="1" type="double" size="[1 1]">
+                     [ 4.9972]
+                  </fps>
+               </cell>
+            </framerate>
+         </cell>
+      </resolution>
+   </header>
+   <sensor type="struct" size="[1 1]">
+      <AWB index="1" type="struct" size="[1 1]">
+         <globals index="1" type="cell" size="[1 1]">
+            <cell index="1" type="struct" size="[1 1]">
+               <name index="1" type="char" size="[1 9]">
+                  3840x2160
+               </name>
+               <resolution index="1" type="char" size="[1 9]">
+                  3840x2160
+               </resolution>
+               <SVDMeanValue index="1" type="double" size="[1 3]">
+                  [0.350821 0.461451 0.18773]
+               </SVDMeanValue>
+               <PCAMatrix index="1" type="double" size="[3 2]">
+                  [-0.747621 0.0895615 0.658059 0.328222 -0.81157 0.48335]
+               </PCAMatrix>
+               <CenterLine index="1" type="double" size="[1 3]">
+                  [-0.840503 -0.541807 -2.5476]
+               </CenterLine>
+               <afRg2 index="1" type="double" size="[1 16]">
+                  [1.20944 1.25673 1.30402 1.35132 1.39861 1.4459 1.4932 1.54049 1.58778 1.63508 1.68237 1.72966 1.77696 1.82425 1.87154 1.9188]
+               </afRg2>
+               <afMaxDist2 index="1" type="double" size="[1 16]">
+                  [0.01049 0.0067139 0.00344454 0.000598565 -0.0017099 -0.00358594 -0.00493888 -0.00576626 -0.0060659 -0.00582415 -0.00500751 -0.00359477 -0.00162514 0.000989081 0.00422767 0.010466]
+               </afMaxDist2>
+               <afRg1 index="1" type="double" size="[1 16]">
+                  [1.20944 1.25673 1.30402 1.35132 1.39861 1.4459 1.4932 1.54049 1.58778 1.63508 1.68237 1.72966 1.77696 1.82425 1.87154 1.9188]
+               </afRg1>
+               <afMaxDist1 index="1" type="double" size="[1 16]">
+                  [-0.000490041 0.0032861 0.00655546 0.00940144 0.0117099 0.0135859 0.0149389 0.0157663 0.0160659 0.0158242 0.0150075 0.0135948 0.0116251 0.00901092 0.00577233 -0.00046563]
+               </afMaxDist1>
+               <afGlobalFade2 index="1" type="double" size="[1 16]">
+                  [0.8 0.877256 0.954511 1.03177 1.10902 1.18628 1.26353 1.34079 1.41805 1.4953 1.57256 1.64981 1.72707 1.80432 1.88158 1.9588]
+               </afGlobalFade2>
+               <afGlobalGainDistance2 index="1" type="double" size="[1 16]">
+                  [0.155026 0.143403 0.132925 0.123335 0.114897 0.107527 0.101224 0.0961947 0.09238 0.0900132 0.0889725 0.0893575 0.091282 0.0947975 0.100008 0.11196]
+               </afGlobalGainDistance2>
+               <afGlobalFade1 index="1" type="double" size="[1 16]">
+                  [0.8 0.877256 0.954511 1.03177 1.10902 1.18628 1.26353 1.34079 1.41805 1.4953 1.57256 1.64981 1.72707 1.80432 1.88158 1.9588]
+               </afGlobalFade1>
+               <afGlobalGainDistance1 index="1" type="double" size="[1 16]">
+                  [0.0449741 0.0565967 0.0670752 0.0766648 0.0851034 0.0924732 0.0987762 0.103805 0.10762 0.109987 0.111027 0.110643 0.108718 0.105203 0.099992 0.088042]
+               </afGlobalGainDistance1>
+               <fRgProjIndoorMin index="1" type="double" size="[1 1]">
+                  [ 1.2094]
+               </fRgProjIndoorMin>
+               <fRgProjMax index="1" type="double" size="[1 1]">
+                  [ 1.9188]
+               </fRgProjMax>
+               <fRgProjMaxSky index="1" type="double" size="[1 1]">
+                  [ 1.9588]
+               </fRgProjMaxSky>
+               <fRgProjOutdoorMin index="1" type="double" size="[1 1]">
+                  [ 1.6351]
+               </fRgProjOutdoorMin>
+               <awb_clip_outdoor index="1" type="char" size="[1 3]">
+                  D65
+               </awb_clip_outdoor>
+               <K_Factor index="1" type="double" size="[1 1]">
+                  [ 4.5676]
+               </K_Factor>
+               <afFade2 index="1" type="double" size="[1 6]">
+                  [0.75 1.28836 1.77672 2.164 2.6 3.0618]
+               </afFade2>
+               <afCbMinRegionMax index="1" type="double" size="[1 6]">
+                  [114 114 105 95 95 90]
+               </afCbMinRegionMax>
+               <afCrMinRegionMax index="1" type="double" size="[1 6]">
+                  [83 83 110 120 122 128]
+               </afCrMinRegionMax>
+               <afMaxCSumRegionMax index="1" type="double" size="[1 6]">
+                  [28 27 18 16 9 9]
+               </afMaxCSumRegionMax>
+               <afCbMinRegionMin index="1" type="double" size="[1 6]">
+                  [123 123 123 123 123 120]
+               </afCbMinRegionMin>
+               <afCrMinRegionMin index="1" type="double" size="[1 6]">
+                  [123 123 123 123 123 126]
+               </afCrMinRegionMin>
+               <afMaxCSumRegionMin index="1" type="double" size="[1 6]">
+                  [5 5 5 5 5 5]
+               </afMaxCSumRegionMin>
+               <RegionSize index="1" type="double" size="[1 1]">
+                  [ 1]
+               </RegionSize>
+               <RegionSizeInc index="1" type="double" size="[1 1]">
+                  [ 0.8]
+               </RegionSizeInc>
+               <RegionSizeDec index="1" type="double" size="[1 1]">
+                  [ 0.05]
+               </RegionSizeDec>
+               <IIR index="1" type="struct" size="[1 1]">
+                  <DampCoefAdd index="1" type="double" size="[1 1]">
+                     [ 0.05]
+                  </DampCoefAdd>
+                  <DampCoefSub index="1" type="double" size="[1 1]">
+                     [ 0.05]
+                  </DampCoefSub>
+                  <DampFilterThreshold index="1" type="double" size="[1 1]">
+                     [ 0.4]
+                  </DampFilterThreshold>
+                  <DampingCoefMin index="1" type="double" size="[1 1]">
+                     [ 0.5]
+                  </DampingCoefMin>
+                  <DampingCoefMax index="1" type="double" size="[1 1]">
+                     [ 0.9]
+                  </DampingCoefMax>
+                  <DampingCoefInit index="1" type="double" size="[1 1]">
+                     [ 0.5]
+                  </DampingCoefInit>
+                  <ExpPriorFilterSizeMax index="1" type="double" size="[1 1]">
+                     [ 50]
+                  </ExpPriorFilterSizeMax>
+                  <ExpPriorFilterSizeMin index="1" type="double" size="[1 1]">
+                     [ 1]
+                  </ExpPriorFilterSizeMin>
+                  <ExpPriorMiddle index="1" type="double" size="[1 1]">
+                     [ 0.5]
+                  </ExpPriorMiddle>
+               </IIR>
+            </cell>
+         </globals>
+         <illumination index="1" type="cell" size="[1 3]">
+            <cell index="1" type="struct" size="[1 1]">
+               <name index="1" type="char" size="[1 1]">
+                  A
+               </name>
+               <doorType index="1" type="char" size="[1 6]">
+                  Indoor
+               </doorType>
+               <GMM index="1" type="struct" size="[1 1]">
+                  <invCovMatrix index="1" type="double" size="[2 2]">
+                     [2651.53 3387.15 3387.15 7258.5713]
+                  </invCovMatrix>
+                  <GaussianScalingFactor index="1" type="double" size="[1 1]">
+                     [ 443.7393]
+                  </GaussianScalingFactor>
+                  <tau index="1" type="double" size="[1 2]">
+                     [0.75 0.9]
+                  </tau>
+                  <GaussianMeanValue index="1" type="double" size="[1 2]">
+                     [-0.0306101 -0.0036106]
+                  </GaussianMeanValue>
+               </GMM>
+               <aLSC index="1" type="cell" size="[1 1]">
+                  <cell index="1" type="struct" size="[1 1]">
+                     <resolution index="1" type="char" size="[1 9]">
+                        3840x2160
+                     </resolution>
+                     <LSC_PROFILE_LIST index="1" type="char" size="[1 15]">
+                        3840x2160_A_100
+                     </LSC_PROFILE_LIST>
+                  </cell>
+               </aLSC>
+               <manualWB index="1" type="double" size="[1 4]">
+                  [1.23923 1 1 2.7836]
+               </manualWB>
+               <manualccMatrix index="1" type="double" size="[3 3]">
+                  [1.58915 0.0377625 -0.616429 -0.945174 2.52794 -0.537235 -0.217771 -1.76346 2.9884]
+               </manualccMatrix>
+               <manualccOffsets index="1" type="double" size="[1 3]">
+                  [-36.4461 -38.1612 -29.3263]
+               </manualccOffsets>
+               <awbType index="1" type="char" size="[1 4]">
+                  AUTO
+               </awbType>
+               <sat_CT index="1" type="struct" size="[1 1]">
+                  <gains index="1" type="double" size="[1 4]">
+                     [1 2 4 8]
+                  </gains>
+                  <sat index="1" type="double" size="[1 4]">
+                     [100 95 90 74]
+                  </sat>
+               </sat_CT>
+               <vig_CT index="1" type="struct" size="[1 1]">
+                  <gains index="1" type="double" size="[1 4]">
+                     [1 2 4 8]
+                  </gains>
+                  <vig index="1" type="double" size="[1 4]">
+                     [100 95 90 70]
+                  </vig>
+               </vig_CT>
+               <aCC index="1" type="struct" size="[1 1]">
+                  <CC_PROFILE_LIST index="1" type="char" size="[1 5]">
+                     A_104
+                  </CC_PROFILE_LIST>
+               </aCC>
+            </cell>
+            <cell index="2" type="struct" size="[1 1]">
+               <name index="1" type="char" size="[1 3]">
+                  D65
+               </name>
+               <doorType index="1" type="char" size="[1 7]">
+                  Outdoor
+               </doorType>
+               <GMM index="1" type="struct" size="[1 1]">
+                  <invCovMatrix index="1" type="double" size="[2 2]">
+                     [533.326 -38.9322 -38.9322 2476.1192]
+                  </invCovMatrix>
+                  <GaussianScalingFactor index="1" type="double" size="[1 1]">
+                     [ 182.7902]
+                  </GaussianScalingFactor>
+                  <tau index="1" type="double" size="[1 2]">
+                     [1 1]
+                  </tau>
+                  <GaussianMeanValue index="1" type="double" size="[1 2]">
+                     [0.145974 -0.0036106]
+                  </GaussianMeanValue>
+               </GMM>
+               <aLSC index="1" type="cell" size="[1 1]">
+                  <cell index="1" type="struct" size="[1 1]">
+                     <resolution index="1" type="char" size="[1 9]">
+                        3840x2160
+                     </resolution>
+                     <LSC_PROFILE_LIST index="1" type="char" size="[1 16]">
+                        3840x2160_D65_90
+                     </LSC_PROFILE_LIST>
+                  </cell>
+               </aLSC>
+               <manualWB index="1" type="double" size="[1 4]">
+                  [1.98523 1 1 1.6928]
+               </manualWB>
+               <manualccMatrix index="1" type="double" size="[3 3]">
+                  [2.1243 -0.955239 -0.160056 -0.585798 2.27098 -0.616837 -0.0192654 -0.974804 2.036]
+               </manualccMatrix>
+               <manualccOffsets index="1" type="double" size="[1 3]">
+                  [-36.8576 -44.6401 -45.1663]
+               </manualccOffsets>
+               <awbType index="1" type="char" size="[1 4]">
+                  AUTO
+               </awbType>
+               <sat_CT index="1" type="struct" size="[1 1]">
+                  <gains index="1" type="double" size="[1 4]">
+                     [1 2 4 8]
+                  </gains>
+                  <sat index="1" type="double" size="[1 4]">
+                     [100 95 90 74]
+                  </sat>
+               </sat_CT>
+               <vig_CT index="1" type="struct" size="[1 1]">
+                  <gains index="1" type="double" size="[1 4]">
+                     [1 2 4 8]
+                  </gains>
+                  <vig index="1" type="double" size="[1 4]">
+                     [100 95 90 70]
+                  </vig>
+               </vig_CT>
+               <aCC index="1" type="struct" size="[1 1]">
+                  <CC_PROFILE_LIST index="1" type="char" size="[1 7]">
+                     D65_109
+                  </CC_PROFILE_LIST>
+               </aCC>
+            </cell>
+            <cell index="3" type="struct" size="[1 1]">
+               <name index="1" type="char" size="[1 10]">
+                  F11 (TL84)
+               </name>
+               <doorType index="1" type="char" size="[1 6]">
+                  Indoor
+               </doorType>
+               <GMM index="1" type="struct" size="[1 1]">
+                  <invCovMatrix index="1" type="double" size="[2 2]">
+                     [797.808 508.94 508.94 2977.8141]
+                  </invCovMatrix>
+                  <GaussianScalingFactor index="1" type="double" size="[1 1]">
+                     [ 231.5529]
+                  </GaussianScalingFactor>
+                  <tau index="1" type="double" size="[1 2]">
+                     [0.75 0.9]
+                  </tau>
+                  <GaussianMeanValue index="1" type="double" size="[1 2]">
+                     [0.0300834 -0.019091]
+                  </GaussianMeanValue>
+               </GMM>
+               <aLSC index="1" type="cell" size="[1 1]">
+                  <cell index="1" type="struct" size="[1 1]">
+                     <resolution index="1" type="char" size="[1 9]">
+                        3840x2160
+                     </resolution>
+                     <LSC_PROFILE_LIST index="1" type="char" size="[1 16]">
+                        3840x2160_F11_90
+                     </LSC_PROFILE_LIST>
+                  </cell>
+               </aLSC>
+               <manualWB index="1" type="double" size="[1 4]">
+                  [1.48927 1 1 2.4188]
+               </manualWB>
+               <manualccMatrix index="1" type="double" size="[3 3]">
+                  [2.05797 -0.842641 -0.197003 -0.842204 2.361 -0.441285 -0.076882 -1.19612 2.2813]
+               </manualccMatrix>
+               <manualccOffsets index="1" type="double" size="[1 3]">
+                  [-32.4424 -44.2278 -33.9074]
+               </manualccOffsets>
+               <awbType index="1" type="char" size="[1 4]">
+                  AUTO
+               </awbType>
+               <sat_CT index="1" type="struct" size="[1 1]">
+                  <gains index="1" type="double" size="[1 4]">
+                     [1 2 4 8]
+                  </gains>
+                  <sat index="1" type="double" size="[1 4]">
+                     [100 95 90 74]
+                  </sat>
+               </sat_CT>
+               <vig_CT index="1" type="struct" size="[1 1]">
+                  <gains index="1" type="double" size="[1 4]">
+                     [1 2 4 8]
+                  </gains>
+                  <vig index="1" type="double" size="[1 4]">
+                     [100 95 90 70]
+                  </vig>
+               </vig_CT>
+               <aCC index="1" type="struct" size="[1 1]">
+                  <CC_PROFILE_LIST index="1" type="char" size="[1 7]">
+                     F11_108
+                  </CC_PROFILE_LIST>
+               </aCC>
+            </cell>
+         </illumination>
+      </AWB>
+      <LSC index="1" type="cell" size="[1 4]">
+         <cell index="1" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 15]">
+               3840x2160_A_100
+            </name>
+            <resolution index="1" type="char" size="[1 9]">
+               3840x2160
+            </resolution>
+            <illumination index="1" type="char" size="[1 1]">
+               A
+            </illumination>
+            <LSC_sectors index="1" type="double" size="[1 1]">
+               [ 16]
+            </LSC_sectors>
+            <LSC_No index="1" type="double" size="[1 1]">
+               [ 10]
+            </LSC_No>
+            <LSC_Xo index="1" type="double" size="[1 1]">
+               [ 15]
+            </LSC_Xo>
+            <LSC_Yo index="1" type="double" size="[1 1]">
+               [ 15]
+            </LSC_Yo>
+            <LSC_SECT_SIZE_X index="1" type="double" size="[1 8]">
+               [240 240 240 240 240 240 240 240]
+            </LSC_SECT_SIZE_X>
+            <LSC_SECT_SIZE_Y index="1" type="double" size="[1 8]">
+               [135 135 135 135 135 135 135 135]
+            </LSC_SECT_SIZE_Y>
+            <vignetting index="1" type="double" size="[1 1]">
+               [ 100]
+            </vignetting>
+            <LSC_SAMPLES_red index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_red>
+            <LSC_SAMPLES_greenR index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_greenR>
+            <LSC_SAMPLES_greenB index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_greenB>
+            <LSC_SAMPLES_blue index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_blue>
+         </cell>
+         <cell index="2" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 16]">
+               3840x2160_D65_90
+            </name>
+            <resolution index="1" type="char" size="[1 9]">
+               3840x2160
+            </resolution>
+            <illumination index="1" type="char" size="[1 3]">
+               D65
+            </illumination>
+            <LSC_sectors index="1" type="double" size="[1 1]">
+               [ 16]
+            </LSC_sectors>
+            <LSC_No index="1" type="double" size="[1 1]">
+               [ 10]
+            </LSC_No>
+            <LSC_Xo index="1" type="double" size="[1 1]">
+               [ 15]
+            </LSC_Xo>
+            <LSC_Yo index="1" type="double" size="[1 1]">
+               [ 15]
+            </LSC_Yo>
+            <LSC_SECT_SIZE_X index="1" type="double" size="[1 8]">
+               [240 240 240 240 240 240 240 240]
+            </LSC_SECT_SIZE_X>
+            <LSC_SECT_SIZE_Y index="1" type="double" size="[1 8]">
+               [135 135 135 135 135 135 135 135]
+            </LSC_SECT_SIZE_Y>
+            <vignetting index="1" type="double" size="[1 1]">
+               [ 90]
+            </vignetting>
+            <LSC_SAMPLES_red index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_red>
+            <LSC_SAMPLES_greenR index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_greenR>
+            <LSC_SAMPLES_greenB index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_greenB>
+            <LSC_SAMPLES_blue index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_blue>
+         </cell>
+         <cell index="3" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 16]">
+               3840x2160_F11_90
+            </name>
+            <resolution index="1" type="char" size="[1 9]">
+               3840x2160
+            </resolution>
+            <illumination index="1" type="char" size="[1 3]">
+               F11
+            </illumination>
+            <LSC_sectors index="1" type="double" size="[1 1]">
+               [ 16]
+            </LSC_sectors>
+            <LSC_No index="1" type="double" size="[1 1]">
+               [ 10]
+            </LSC_No>
+            <LSC_Xo index="1" type="double" size="[1 1]">
+               [ 15]
+            </LSC_Xo>
+            <LSC_Yo index="1" type="double" size="[1 1]">
+               [ 15]
+            </LSC_Yo>
+            <LSC_SECT_SIZE_X index="1" type="double" size="[1 8]">
+               [240 240 240 240 240 240 240 240]
+            </LSC_SECT_SIZE_X>
+            <LSC_SECT_SIZE_Y index="1" type="double" size="[1 8]">
+               [135 135 135 135 135 135 135 135]
+            </LSC_SECT_SIZE_Y>
+            <vignetting index="1" type="double" size="[1 1]">
+               [ 90]
+            </vignetting>
+            <LSC_SAMPLES_red index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_red>
+            <LSC_SAMPLES_greenR index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_greenR>
+            <LSC_SAMPLES_greenB index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_greenB>
+            <LSC_SAMPLES_blue index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_blue>
+         </cell>
+         <cell index="4" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 15]">
+               3840x2160_F2_90
+            </name>
+            <resolution index="1" type="char" size="[1 9]">
+               3840x2160
+            </resolution>
+            <illumination index="1" type="char" size="[1 2]">
+               F2
+            </illumination>
+            <LSC_sectors index="1" type="double" size="[1 1]">
+               [ 16]
+            </LSC_sectors>
+            <LSC_No index="1" type="double" size="[1 1]">
+               [ 10]
+            </LSC_No>
+            <LSC_Xo index="1" type="double" size="[1 1]">
+               [ 15]
+            </LSC_Xo>
+            <LSC_Yo index="1" type="double" size="[1 1]">
+               [ 15]
+            </LSC_Yo>
+            <LSC_SECT_SIZE_X index="1" type="double" size="[1 8]">
+               [240 240 240 240 240 240 240 240]
+            </LSC_SECT_SIZE_X>
+            <LSC_SECT_SIZE_Y index="1" type="double" size="[1 8]">
+               [135 135 135 135 135 135 135 135]
+            </LSC_SECT_SIZE_Y>
+            <vignetting index="1" type="double" size="[1 1]">
+               [ 90]
+            </vignetting>
+            <LSC_SAMPLES_red index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_red>
+            <LSC_SAMPLES_greenR index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_greenR>
+            <LSC_SAMPLES_greenB index="1" type="double" size="[17 17]">

+            </LSC_SAMPLES_greenB>
+            <LSC_SAMPLES_blue index="1" type="double" size="[17 17]">
+               [1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024 1024]
+            </LSC_SAMPLES_blue>
+         </cell>
+      </LSC>
+      <CC index="1" type="cell" size="[1 4]">
+         <cell index="1" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 5]">
+               A_104
+            </name>
+            <saturation index="1" type="double" size="[1 1]">
+               [ 104]
+            </saturation>
+            <ccMatrix index="1" type="double" size="[3 3]">
+               [1.58915 0.0377625 -0.616429 -0.945174 2.52794 -0.537235 -0.217771 -1.76346 2.9884]
+            </ccMatrix>
+            <ccOffsets index="1" type="double" size="[1 3]">
+               [-36.4461 -38.1612 -29.3263]
+            </ccOffsets>
+            <wb index="1" type="double" size="[1 4]">
+               [1.23923 1 1 2.7836]
+            </wb>
+         </cell>
+         <cell index="2" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 7]">
+               D65_109
+            </name>
+            <saturation index="1" type="double" size="[1 1]">
+               [ 109]
+            </saturation>
+            <ccMatrix index="1" type="double" size="[3 3]">
+               [2.1243 -0.955239 -0.160056 -0.585798 2.27098 -0.616837 -0.0192654 -0.974804 2.036]
+            </ccMatrix>
+            <ccOffsets index="1" type="double" size="[1 3]">
+               [-36.8576 -44.6401 -45.1663]
+            </ccOffsets>
+            <wb index="1" type="double" size="[1 4]">
+               [1.98523 1 1 1.6928]
+            </wb>
+         </cell>
+         <cell index="3" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 7]">
+               F11_108
+            </name>
+            <saturation index="1" type="double" size="[1 1]">
+               [ 108]
+            </saturation>
+            <ccMatrix index="1" type="double" size="[3 3]">
+               [2.05797 -0.842641 -0.197003 -0.842204 2.361 -0.441285 -0.076882 -1.19612 2.2813]
+            </ccMatrix>
+            <ccOffsets index="1" type="double" size="[1 3]">
+               [-32.4424 -44.2278 -33.9074]
+            </ccOffsets>
+            <wb index="1" type="double" size="[1 4]">
+               [1.48927 1 1 2.4188]
+            </wb>
+         </cell>
+         <cell index="4" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 6]">
+               F2_108
+            </name>
+            <saturation index="1" type="double" size="[1 1]">
+               [ 108]
+            </saturation>
+            <ccMatrix index="1" type="double" size="[3 3]">
+               [2.64855 -1.46973 -0.171784 -0.746979 2.12541 -0.309928 -0.0672896 -1.22039 2.3223]
+            </ccMatrix>
+            <ccOffsets index="1" type="double" size="[1 3]">
+               [-28.8121 -42.8676 -35.6405]
+            </ccOffsets>
+            <wb index="1" type="double" size="[1 4]">
+               [1.67897 1 1 2.4837]
+            </wb>
+         </cell>
+      </CC>
+      <AF index="1" type="struct" size="[1 1]">
+         <tbd index="1" type="double" size="[1 1]">
+            [ -1]
+         </tbd>
+      </AF>
+      <AEC index="1" type="struct" size="[1 1]">
+         <SetPoint index="1" type="double" size="[1 1]">
+            [ 80]
+         </SetPoint>
+         <ClmTolerance index="1" type="double" size="[1 1]">
+            [ 20]
+         </ClmTolerance>
+         <DampOver index="1" type="double" size="[1 1]">
+            [ 0.2]
+         </DampOver>
+         <DampUnder index="1" type="double" size="[1 1]">
+            [ 0.3]
+         </DampUnder>
+         <DampOverVideo index="1" type="double" size="[1 1]">
+            [ 0.7]
+         </DampOverVideo>
+         <DampUnderVideo index="1" type="double" size="[1 1]">
+            [ 0.9]
+         </DampUnderVideo>
+         <ECM index="1" type="cell" size="[1 3]">
+            <cell index="1" type="struct" size="[1 1]">
+               <name index="1" type="char" size="[1 16]">
+                  3840x2160_FPS_15
+               </name>
+               <PrioritySchemes index="1" type="cell" size="[1 3]">
+                  <cell index="1" type="struct" size="[1 1]">
+                     <name index="1" type="char" size="[1 4]">
+                        fast
+                     </name>
+                     <OffsetT0Fac index="1" type="double" size="[1 1]">
+                        [ 1]
+                     </OffsetT0Fac>
+                     <SlopeA0 index="1" type="double" size="[1 1]">
+                        [ 2]
+                     </SlopeA0>
+                  </cell>
+                  <cell index="2" type="struct" size="[1 1]">
+                     <name index="1" type="char" size="[1 6]">
+                        normal
+                     </name>
+                     <OffsetT0Fac index="1" type="double" size="[1 1]">
+                        [ 1]
+                     </OffsetT0Fac>
+                     <SlopeA0 index="1" type="double" size="[1 1]">
+                        [ 1]
+                     </SlopeA0>
+                  </cell>
+                  <cell index="3" type="struct" size="[1 1]">
+                     <name index="1" type="char" size="[1 4]">
+                        slow
+                     </name>
+                     <OffsetT0Fac index="1" type="double" size="[1 1]">
+                        [ 2]
+                     </OffsetT0Fac>
+                     <SlopeA0 index="1" type="double" size="[1 1]">
+                        [ 1]
+                     </SlopeA0>
+                  </cell>
+               </PrioritySchemes>
+            </cell>
+            <cell index="2" type="struct" size="[1 1]">
+               <name index="1" type="char" size="[1 16]">
+                  3840x2160_FPS_10
+               </name>
+               <PrioritySchemes index="1" type="cell" size="[1 3]">
+                  <cell index="1" type="struct" size="[1 1]">
+                     <name index="1" type="char" size="[1 4]">
+                        fast
+                     </name>
+                     <OffsetT0Fac index="1" type="double" size="[1 1]">
+                        [ 1]
+                     </OffsetT0Fac>
+                     <SlopeA0 index="1" type="double" size="[1 1]">
+                        [ 2]
+                     </SlopeA0>
+                  </cell>
+                  <cell index="2" type="struct" size="[1 1]">
+                     <name index="1" type="char" size="[1 6]">
+                        normal
+                     </name>
+                     <OffsetT0Fac index="1" type="double" size="[1 1]">
+                        [ 1]
+                     </OffsetT0Fac>
+                     <SlopeA0 index="1" type="double" size="[1 1]">
+                        [ 1]
+                     </SlopeA0>
+                  </cell>
+                  <cell index="3" type="struct" size="[1 1]">
+                     <name index="1" type="char" size="[1 4]">
+                        slow
+                     </name>
+                     <OffsetT0Fac index="1" type="double" size="[1 1]">
+                        [ 2]
+                     </OffsetT0Fac>
+                     <SlopeA0 index="1" type="double" size="[1 1]">
+                        [ 1]
+                     </SlopeA0>
+                  </cell>
+               </PrioritySchemes>
+            </cell>
+            <cell index="3" type="struct" size="[1 1]">
+               <name index="1" type="char" size="[1 16]">
+                  3840x2160_FPS_05
+               </name>
+               <PrioritySchemes index="1" type="cell" size="[1 3]">
+                  <cell index="1" type="struct" size="[1 1]">
+                     <name index="1" type="char" size="[1 4]">
+                        fast
+                     </name>
+                     <OffsetT0Fac index="1" type="double" size="[1 1]">
+                        [ 1]
+                     </OffsetT0Fac>
+                     <SlopeA0 index="1" type="double" size="[1 1]">
+                        [ 1]
+                     </SlopeA0>
+                  </cell>
+                  <cell index="2" type="struct" size="[1 1]">
+                     <name index="1" type="char" size="[1 6]">
+                        normal
+                     </name>
+                     <OffsetT0Fac index="1" type="double" size="[1 1]">
+                        [ 2]
+                     </OffsetT0Fac>
+                     <SlopeA0 index="1" type="double" size="[1 1]">
+                        [ 0.9]
+                     </SlopeA0>
+                  </cell>
+                  <cell index="3" type="struct" size="[1 1]">
+                     <name index="1" type="char" size="[1 4]">
+                        slow
+                     </name>
+                     <OffsetT0Fac index="1" type="double" size="[1 1]">
+                        [ 4]
+                     </OffsetT0Fac>
+                     <SlopeA0 index="1" type="double" size="[1 1]">
+                        [ 0.9]
+                     </SlopeA0>
+                  </cell>
+               </PrioritySchemes>
+            </cell>
+         </ECM>
+         <aFpsMaxGain index="1" type="double" size="[1 1]">
+            [ 8]
+         </aFpsMaxGain>
+      </AEC>
+      <BLS index="1" type="cell" size="[1 1]">
+         <cell index="1" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 9]">
+               3840x2160
+            </name>
+            <resolution index="1" type="char" size="[1 9]">
+               3840x2160
+            </resolution>
+            <blsData index="1" type="double" size="[1 4]">
+               [50 50 50 50]
+            </blsData>
+         </cell>
+      </BLS>
+      <DEGAMMA index="1" type="cell" size="[1 1]">
+         <cell index="1" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 6]">
+               linear
+            </name>
+            <degamma_dx index="1" type="double" size="[1 16]">
+               [256 512 768 1024 1280 1536 1792 2048 2304 2560 2816 3072 3328 3584 3840 4096]
+            </degamma_dx>
+            <degamma_y index="1" type="double" size="[1 17]">
+               [0 256 512 768 1024 1280 1536 1792 2048 2304 2560 2816 3072 3328 3584 3840 4095]
+            </degamma_y>
+         </cell>
+      </DEGAMMA>
+      <WDR index="1" type="struct" size="[1 1]">
+         <tbd index="1" type="double" size="[1 1]">
+            [ -1]
+         </tbd>
+         <curve1 index="1" type="struct" size="[1 1]">
+            <xval index="1" type="double" size="[1 33]">
+               [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
+            </xval>
+            <yval index="1" type="double" size="[1 33]">
+               [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
+            </yval>
+         </curve1>
+         <curve2 index="1" type="struct" size="[1 1]">
+            <xval index="1" type="double" size="[1 33]">
+               [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
+            </xval>
+            <yval index="1" type="double" size="[1 33]">
+               [-1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1 -1]
+            </yval>
+         </curve2>
+      </WDR>
+      <CAC index="1" type="cell" size="[1 1]">
+         <cell index="1" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 9]">
+               3840x2160
+            </name>
+            <resolution index="1" type="char" size="[1 9]">
+               3840x2160
+            </resolution>
+            <x_normshift index="1" type="double" size="[1 1]">
+               [ 0]
+            </x_normshift>
+            <x_normfactor index="1" type="double" size="[1 1]">
+               [ 0]
+            </x_normfactor>
+            <y_normshift index="1" type="double" size="[1 1]">
+               [ 0]
+            </y_normshift>
+            <y_normfactor index="1" type="double" size="[1 1]">
+               [ 0]
+            </y_normfactor>
+            <x_offset index="1" type="double" size="[1 1]">
+               [ 0]
+            </x_offset>
+            <y_offset index="1" type="double" size="[1 1]">
+               [ 0]
+            </y_offset>
+            <red_parameters index="1" type="double" size="[1 3]">
+               [0 0 0]
+            </red_parameters>
+            <blue_parameters index="1" type="double" size="[1 3]">
+               [0 0 0]
+            </blue_parameters>
+         </cell>
+      </CAC>
+      <DPF index="1" type="cell" size="[1 1]">
+         <cell index="1" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 9]">
+               3840x2160
+            </name>
+            <resolution index="1" type="char" size="[1 9]">
+               3840x2160
+            </resolution>
+            <NLL_SEGMENTATION index="1" type="double" size="[1 1]">
+               [ 1]
+            </NLL_SEGMENTATION>
+            <nll_coeff_n index="1" type="double" size="[1 17]">
+               [1023 859 589 476 410 334 288 258 235 203 182 166 143 128 117 108 101]
+            </nll_coeff_n>
+            <SigmaGreen index="1" type="double" size="[1 1]">
+               [ 4]
+            </SigmaGreen>
+            <SigmaRedBlue index="1" type="double" size="[1 1]">
+               [ 4]
+            </SigmaRedBlue>
+            <Gradient index="1" type="double" size="[1 1]">
+               [ 0.15]
+            </Gradient>
+            <Offset index="1" type="double" size="[1 1]">
+               [ 0]
+            </Offset>
+            <NlGains index="1" type="double" size="[1 4]">
+               [1 1 1 1]
+            </NlGains>
+         </cell>
+      </DPF>
+      <DPCC index="1" type="cell" size="[1 1]">
+         <cell index="1" type="struct" size="[1 1]">
+            <name index="1" type="char" size="[1 9]">
+               3840x2160
+            </name>
+            <resolution index="1" type="char" size="[1 9]">
+               3840x2160
+            </resolution>
+            <register index="1" type="cell" size="[1 23]">
+               <cell index="1" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 13]">
+                     ISP_DPCC_MODE
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0004
+                  </value>
+               </cell>
+               <cell index="2" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 17]">
+                     ISP_DPCC_OUT_MODE
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0003
+                  </value>
+               </cell>
+               <cell index="3" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 16]">
+                     ISP_DPCC_SET_USE
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0007
+                  </value>
+               </cell>
+               <cell index="4" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 21]">
+                     ISP_DPCC_METHODS_SET1
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x1D1D
+                  </value>
+               </cell>
+               <cell index="5" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 21]">
+                     ISP_DPCC_METHODS_SET2
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0707
+                  </value>
+               </cell>
+               <cell index="6" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 21]">
+                     ISP_DPCC_METHODS_SET3
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x1F1F
+                  </value>
+               </cell>
+               <cell index="7" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 22]">
+                     ISP_DPCC_LINE_THRESH_1
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0808
+                  </value>
+               </cell>
+               <cell index="8" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 23]">
+                     ISP_DPCC_LINE_MAD_FAC_1
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0404
+                  </value>
+               </cell>
+               <cell index="9" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 17]">
+                     ISP_DPCC_PG_FAC_1
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0403
+                  </value>
+               </cell>
+               <cell index="10" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 21]">
+                     ISP_DPCC_RND_THRESH_1
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0A0A
+                  </value>
+               </cell>
+               <cell index="11" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 17]">
+                     ISP_DPCC_RG_FAC_1
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x2020
+                  </value>
+               </cell>
+               <cell index="12" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 22]">
+                     ISP_DPCC_LINE_THRESH_2
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x100C
+                  </value>
+               </cell>
+               <cell index="13" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 23]">
+                     ISP_DPCC_LINE_MAD_FAC_2
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x1810
+                  </value>
+               </cell>
+               <cell index="14" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 17]">
+                     ISP_DPCC_PG_FAC_2
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0403
+                  </value>
+               </cell>
+               <cell index="15" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 21]">
+                     ISP_DPCC_RND_THRESH_2
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0808
+                  </value>
+               </cell>
+               <cell index="16" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 17]">
+                     ISP_DPCC_RG_FAC_2
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0808
+                  </value>
+               </cell>
+               <cell index="17" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 22]">
+                     ISP_DPCC_LINE_THRESH_3
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x2020
+                  </value>
+               </cell>
+               <cell index="18" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 23]">
+                     ISP_DPCC_LINE_MAD_FAC_3
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0404
+                  </value>
+               </cell>
+               <cell index="19" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 17]">
+                     ISP_DPCC_PG_FAC_3
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0403
+                  </value>
+               </cell>
+               <cell index="20" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 21]">
+                     ISP_DPCC_RND_THRESH_3
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0806
+                  </value>
+               </cell>
+               <cell index="21" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 17]">
+                     ISP_DPCC_RG_FAC_3
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0404
+                  </value>
+               </cell>
+               <cell index="22" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 18]">
+                     ISP_DPCC_RO_LIMITS
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0A0A
+                  </value>
+               </cell>
+               <cell index="23" type="struct" size="[1 1]">
+                  <name index="1" type="char" size="[1 17]">
+                     ISP_DPCC_RND_OFFS
+                  </name>
+                  <value index="1" type="char" size="[1 6]">
+                     0x0FFF
+                  </value>
+               </cell>
+            </register>
+         </cell>
+      </DPCC>
+   </sensor>
+   <system type="struct" size="[1 1]">
+      <AFPS index="1" type="struct" size="[1 1]">
+         <aFpsDefault index="1" type="char" size="[1 2]">
+            on
+         </aFpsDefault>
+      </AFPS>
+   </system>
+<tuning>
+      <awb enable="true">
+         <damping>true</damping>
+         <index>2</index>
+         <mode>2</mode>
+      </awb>
+   </tuning>
+</matfile>
diff --git a/units/isi/drv/imx678/source/IMX678.c b/units/isi/drv/imx678/source/IMX678.c
new file mode 100644
index 0000000..b2d35da
--- /dev/null
+++ b/units/isi/drv/imx678/source/IMX678.c
@@ -0,0 +1,1268 @@
+/******************************************************************************\
+|* Copyright (c) 2020 by VeriSilicon Holdings Co., Ltd. ("VeriSilicon")       *|
+|* All Rights Reserved.                                                       *|
+|*                                                                            *|
+|* The material in this file is confidential and contains trade secrets of    *|
+|* of VeriSilicon.  This is proprietary information owned or licensed by      *|
+|* VeriSilicon.  No part of this work may be disclosed, reproduced, copied,   *|
+|* transmitted, or used in any way for any purpose, without the express       *|
+|* written permission of VeriSilicon.                                         *|
+|*                                                                            *|
+\******************************************************************************/
+
+#include <ebase/types.h>
+#include <ebase/trace.h>
+#include <ebase/builtins.h>
+#include <common/return_codes.h>
+#include <common/misc.h>
+#include <sys/ioctl.h>
+#include <fcntl.h>
+#include "isi.h"
+#include "isi_iss.h"
+#include "isi_priv.h"
+#include "vvsensor.h"
+
+CREATE_TRACER( IMX678_INFO , "IMX678: ", INFO,    1);
+CREATE_TRACER( IMX678_WARN , "IMX678: ", WARNING, 1);
+CREATE_TRACER( IMX678_ERROR, "IMX678: ", ERROR,   1);
+
+#ifdef SUBDEV_V4L2
+#include <sys/ioctl.h>
+#include <sys/mman.h>
+#include <fcntl.h>
+#include <linux/videodev2.h>
+#include <linux/v4l2-subdev.h>
+//#undef TRACE
+//#define TRACE(x, ...)
+#endif
+
+static const char SensorName[16] = "imx678";
+
+typedef struct IMX678_Context_s
+{
+    IsiSensorContext_t  IsiCtx;
+    struct vvcam_mode_info_s CurMode;
+    IsiSensorAeInfo_t AeInfo;
+    IsiSensorIntTime_t IntTime;
+    uint32_t LongIntLine;
+    uint32_t IntLine;
+    uint32_t ShortIntLine;
+    IsiSensorGain_t SensorGain;
+    uint32_t minAfps;
+    uint64_t AEStartExposure;
+} IMX678_Context_t;
+
+static RESULT IMX678_IsiSensorSetPowerIss(IsiSensorHandle_t handle, bool_t on)
+{
+    int ret = 0;
+
+    TRACE( IMX678_INFO, "%s: (enter)\n", __func__);
+    TRACE( IMX678_INFO, "%s: set power %d\n", __func__,on);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+    HalContext_t *pHalCtx = (HalContext_t *) pIMX678Ctx->IsiCtx.HalHandle;
+
+    int32_t power = on;
+    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_POWER, &power);
+    if (ret != 0){
+        TRACE(IMX678_ERROR, "%s set power %d error\n", __func__,power);
+        return RET_FAILURE;
+    }
+
+    TRACE( IMX678_INFO, "%s: (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiSensorGetClkIss(IsiSensorHandle_t handle,
+                                        struct vvcam_clk_s *pclk)
+{
+    int ret = 0;
+
+    TRACE( IMX678_INFO, "%s: (enter)\n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+    HalContext_t *pHalCtx = (HalContext_t *) pIMX678Ctx->IsiCtx.HalHandle;
+
+    if (!pclk)
+        return RET_NULL_POINTER;
+
+    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_G_CLK, pclk);
+    if (ret != 0) {
+        TRACE(IMX678_ERROR, "%s get clock error\n", __func__);
+        return RET_FAILURE;
+    } 
+    
+    TRACE( IMX678_INFO, "%s: status:%d sensor_mclk:%d csi_max_pixel_clk:%d\n",
+        __func__, pclk->status, pclk->sensor_mclk, pclk->csi_max_pixel_clk);
+    TRACE( IMX678_INFO, "%s: (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiSensorSetClkIss(IsiSensorHandle_t handle,
+                                        struct vvcam_clk_s *pclk)
+{
+    int ret = 0;
+
+    TRACE( IMX678_INFO, "%s: (enter)\n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+    HalContext_t *pHalCtx = (HalContext_t *) pIMX678Ctx->IsiCtx.HalHandle;
+
+    if (pclk == NULL)
+        return RET_NULL_POINTER;
+    
+    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_CLK, &pclk);
+    if (ret != 0) {
+        TRACE(IMX678_ERROR, "%s set clk error\n", __func__);
+        return RET_FAILURE;
+    }
+
+    TRACE( IMX678_INFO, "%s: status:%d sensor_mclk:%d csi_max_pixel_clk:%d\n",
+        __func__, pclk->status, pclk->sensor_mclk, pclk->csi_max_pixel_clk);
+
+    TRACE( IMX678_INFO, "%s: (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiResetSensorIss(IsiSensorHandle_t handle)
+{
+    int ret = 0;
+
+    TRACE( IMX678_INFO, "%s: (enter)\n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+    HalContext_t *pHalCtx = (HalContext_t *) pIMX678Ctx->IsiCtx.HalHandle;
+
+    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_RESET, NULL);
+    if (ret != 0) {
+        TRACE(IMX678_ERROR, "%s set reset error\n", __func__);
+        return RET_FAILURE;
+    }
+
+    TRACE( IMX678_INFO, "%s: (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiRegisterReadIss(IsiSensorHandle_t handle,
+                                        const uint32_t address,
+                                        uint32_t * pValue)
+{
+    int32_t ret = 0;
+
+    TRACE(IMX678_INFO, "%s (enter)\n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+    HalContext_t *pHalCtx = (HalContext_t *) pIMX678Ctx->IsiCtx.HalHandle;
+
+    struct vvcam_sccb_data_s sccb_data;
+    sccb_data.addr = address;
+    sccb_data.data = 0;
+    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_READ_REG, &sccb_data);
+    if (ret != 0) {
+        TRACE(IMX678_ERROR, "%s: read sensor register error!\n", __func__);
+        return (RET_FAILURE);
+    }
+
+    *pValue = sccb_data.data;
+
+    TRACE(IMX678_INFO, "%s (exit) \n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiRegisterWriteIss(IsiSensorHandle_t handle,
+                                        const uint32_t address,
+                                        const uint32_t value)
+{
+    int ret = 0;
+
+    TRACE(IMX678_INFO, "%s (enter)\n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+    HalContext_t *pHalCtx = (HalContext_t *) pIMX678Ctx->IsiCtx.HalHandle;
+
+    struct vvcam_sccb_data_s sccb_data;
+    sccb_data.addr = address;
+    sccb_data.data = value;
+
+    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_WRITE_REG, &sccb_data);
+    if (ret != 0) {
+        TRACE(IMX678_ERROR, "%s: write sensor register error!\n", __func__);
+        return (RET_FAILURE);
+    }
+
+    TRACE(IMX678_INFO, "%s (exit) \n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_UpdateIsiAEInfo(IsiSensorHandle_t handle)
+{
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+
+    IsiSensorAeInfo_t *pAeInfo = &pIMX678Ctx->AeInfo;
+    pAeInfo->oneLineExpTime = pIMX678Ctx->CurMode.ae_info.one_line_exp_time_ns / 1000;
+
+    if (pIMX678Ctx->CurMode.hdr_mode == SENSOR_MODE_LINEAR) {
+        pAeInfo->maxIntTime.linearInt =
+            pIMX678Ctx->CurMode.ae_info.max_integration_line * pAeInfo->oneLineExpTime * 1000;
+        pAeInfo->minIntTime.linearInt =
+            pIMX678Ctx->CurMode.ae_info.min_integration_line * pAeInfo->oneLineExpTime * 1000;
+        pAeInfo->maxAGain.linearGainParas = pIMX678Ctx->CurMode.ae_info.max_again;
+        pAeInfo->minAGain.linearGainParas = pIMX678Ctx->CurMode.ae_info.min_again;
+        pAeInfo->maxDGain.linearGainParas = pIMX678Ctx->CurMode.ae_info.max_dgain;
+        pAeInfo->minDGain.linearGainParas = pIMX678Ctx->CurMode.ae_info.min_dgain;
+    } else {
+        switch (pIMX678Ctx->CurMode.stitching_mode) {
+            case SENSOR_STITCHING_DUAL_DCG:
+            case SENSOR_STITCHING_3DOL:
+            case SENSOR_STITCHING_LINEBYLINE:
+                pAeInfo->maxIntTime.triInt.triSIntTime =
+                    pIMX678Ctx->CurMode.ae_info.max_vsintegration_line * pAeInfo->oneLineExpTime;
+                pAeInfo->minIntTime.triInt.triSIntTime =
+                    pIMX678Ctx->CurMode.ae_info.min_vsintegration_line * pAeInfo->oneLineExpTime;
+                
+                pAeInfo->maxIntTime.triInt.triIntTime =
+                    pIMX678Ctx->CurMode.ae_info.max_integration_line * pAeInfo->oneLineExpTime;
+                pAeInfo->minIntTime.triInt.triIntTime =
+                    pIMX678Ctx->CurMode.ae_info.min_integration_line * pAeInfo->oneLineExpTime;
+
+                if (pIMX678Ctx->CurMode.stitching_mode == SENSOR_STITCHING_DUAL_DCG) {
+                    pAeInfo->maxIntTime.triInt.triLIntTime = pAeInfo->maxIntTime.triInt.triIntTime;
+                    pAeInfo->minIntTime.triInt.triLIntTime = pAeInfo->minIntTime.triInt.triIntTime;
+                } else {
+                    pAeInfo->maxIntTime.triInt.triLIntTime =
+                        pIMX678Ctx->CurMode.ae_info.max_longintegration_line * pAeInfo->oneLineExpTime;
+                    pAeInfo->minIntTime.triInt.triLIntTime =
+                        pIMX678Ctx->CurMode.ae_info.min_longintegration_line * pAeInfo->oneLineExpTime;
+                }
+
+                pAeInfo->maxAGain.triGainParas.triSGain = pIMX678Ctx->CurMode.ae_info.max_short_again;
+                pAeInfo->minAGain.triGainParas.triSGain = pIMX678Ctx->CurMode.ae_info.min_short_again;
+                pAeInfo->maxDGain.triGainParas.triSGain = pIMX678Ctx->CurMode.ae_info.max_short_dgain;
+                pAeInfo->minDGain.triGainParas.triSGain = pIMX678Ctx->CurMode.ae_info.min_short_dgain;
+
+                pAeInfo->maxAGain.triGainParas.triGain = pIMX678Ctx->CurMode.ae_info.max_again;
+                pAeInfo->minAGain.triGainParas.triGain = pIMX678Ctx->CurMode.ae_info.min_again;
+                pAeInfo->maxDGain.triGainParas.triGain = pIMX678Ctx->CurMode.ae_info.max_dgain;
+                pAeInfo->minDGain.triGainParas.triGain = pIMX678Ctx->CurMode.ae_info.min_dgain;
+
+                pAeInfo->maxAGain.triGainParas.triLGain = pIMX678Ctx->CurMode.ae_info.max_long_again;
+                pAeInfo->minAGain.triGainParas.triLGain = pIMX678Ctx->CurMode.ae_info.min_long_again;
+                pAeInfo->maxDGain.triGainParas.triLGain = pIMX678Ctx->CurMode.ae_info.max_long_dgain;
+                pAeInfo->minDGain.triGainParas.triLGain = pIMX678Ctx->CurMode.ae_info.min_long_dgain;
+                break;
+            case SENSOR_STITCHING_DUAL_DCG_NOWAIT:
+            case SENSOR_STITCHING_16BIT_COMPRESS:
+            case SENSOR_STITCHING_L_AND_S:
+            case SENSOR_STITCHING_2DOL:
+                pAeInfo->maxIntTime.dualInt.dualIntTime =
+                    pIMX678Ctx->CurMode.ae_info.max_integration_line * pAeInfo->oneLineExpTime;
+                pAeInfo->minIntTime.dualInt.dualIntTime =
+                    pIMX678Ctx->CurMode.ae_info.min_integration_line * pAeInfo->oneLineExpTime;
+
+                if (pIMX678Ctx->CurMode.stitching_mode == SENSOR_STITCHING_DUAL_DCG_NOWAIT) {
+                    pAeInfo->maxIntTime.dualInt.dualSIntTime = pAeInfo->maxIntTime.dualInt.dualIntTime;
+                    pAeInfo->minIntTime.dualInt.dualSIntTime = pAeInfo->minIntTime.dualInt.dualIntTime;
+                } else {
+                    pAeInfo->maxIntTime.dualInt.dualSIntTime =
+                        pIMX678Ctx->CurMode.ae_info.max_vsintegration_line * pAeInfo->oneLineExpTime;
+                    pAeInfo->minIntTime.dualInt.dualSIntTime =
+                        pIMX678Ctx->CurMode.ae_info.min_vsintegration_line * pAeInfo->oneLineExpTime;
+                }
+                
+                if (pIMX678Ctx->CurMode.stitching_mode == SENSOR_STITCHING_DUAL_DCG_NOWAIT) {
+                    pAeInfo->maxAGain.dualGainParas.dualSGain = pIMX678Ctx->CurMode.ae_info.max_again;
+                    pAeInfo->minAGain.dualGainParas.dualSGain = pIMX678Ctx->CurMode.ae_info.min_again;
+                    pAeInfo->maxDGain.dualGainParas.dualSGain = pIMX678Ctx->CurMode.ae_info.max_dgain;
+                    pAeInfo->minDGain.dualGainParas.dualSGain = pIMX678Ctx->CurMode.ae_info.min_dgain;
+                    pAeInfo->maxAGain.dualGainParas.dualGain  = pIMX678Ctx->CurMode.ae_info.max_long_again;
+                    pAeInfo->minAGain.dualGainParas.dualGain  = pIMX678Ctx->CurMode.ae_info.min_long_again;
+                    pAeInfo->maxDGain.dualGainParas.dualGain  = pIMX678Ctx->CurMode.ae_info.max_long_dgain;
+                    pAeInfo->minDGain.dualGainParas.dualGain  = pIMX678Ctx->CurMode.ae_info.min_long_dgain;
+                } else {
+                    pAeInfo->maxAGain.dualGainParas.dualSGain = pIMX678Ctx->CurMode.ae_info.max_short_again;
+                    pAeInfo->minAGain.dualGainParas.dualSGain = pIMX678Ctx->CurMode.ae_info.min_short_again;
+                    pAeInfo->maxDGain.dualGainParas.dualSGain = pIMX678Ctx->CurMode.ae_info.max_short_dgain;
+                    pAeInfo->minDGain.dualGainParas.dualSGain = pIMX678Ctx->CurMode.ae_info.min_short_dgain;
+                    pAeInfo->maxAGain.dualGainParas.dualGain  = pIMX678Ctx->CurMode.ae_info.max_again;
+                    pAeInfo->minAGain.dualGainParas.dualGain  = pIMX678Ctx->CurMode.ae_info.min_again;
+                    pAeInfo->maxDGain.dualGainParas.dualGain  = pIMX678Ctx->CurMode.ae_info.max_dgain;
+                    pAeInfo->minDGain.dualGainParas.dualGain  = pIMX678Ctx->CurMode.ae_info.min_dgain;
+                }
+                
+                break;
+            default:
+                break;
+        }
+    }
+    pAeInfo->gainStep = pIMX678Ctx->CurMode.ae_info.gain_step;
+    pAeInfo->currFps  = pIMX678Ctx->CurMode.ae_info.cur_fps;
+    pAeInfo->maxFps   = pIMX678Ctx->CurMode.ae_info.max_fps;
+    pAeInfo->minFps   = pIMX678Ctx->CurMode.ae_info.min_fps;
+    pAeInfo->minAfps  = pIMX678Ctx->CurMode.ae_info.min_afps;
+    pAeInfo->hdrRatio[0] = pIMX678Ctx->CurMode.ae_info.hdr_ratio.ratio_l_s;
+    pAeInfo->hdrRatio[1] = pIMX678Ctx->CurMode.ae_info.hdr_ratio.ratio_s_vs;
+
+    pAeInfo->intUpdateDlyFrm = pIMX678Ctx->CurMode.ae_info.int_update_delay_frm;
+    pAeInfo->gainUpdateDlyFrm = pIMX678Ctx->CurMode.ae_info.gain_update_delay_frm;
+
+    if (pIMX678Ctx->minAfps != 0) {
+        pAeInfo->minAfps = pIMX678Ctx->minAfps;
+    } 
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiGetSensorModeIss(IsiSensorHandle_t handle,
+                                         IsiSensorMode_t *pMode)
+{
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+
+    TRACE(IMX678_INFO, "%s (enter)\n", __func__);
+
+    if (pMode == NULL)
+        return (RET_NULL_POINTER);
+
+    memcpy(pMode, &pIMX678Ctx->CurMode, sizeof(IsiSensorMode_t));
+
+    TRACE(IMX678_INFO, "%s (exit) \n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiSetSensorModeIss(IsiSensorHandle_t handle,
+                                         IsiSensorMode_t *pMode)
+{
+    int ret = 0;
+
+    TRACE(IMX678_INFO, "%s (enter)\n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+    HalContext_t *pHalCtx = (HalContext_t *) pIMX678Ctx->IsiCtx.HalHandle;
+
+    if (pMode == NULL)
+        return (RET_NULL_POINTER);
+
+    struct vvcam_mode_info_s sensor_mode;
+    memset(&sensor_mode, 0, sizeof(struct vvcam_mode_info_s));
+    sensor_mode.index = pMode->index;
+
+    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_SENSOR_MODE, &sensor_mode);
+    if (ret != 0) {
+        TRACE(IMX678_ERROR, "%s set sensor mode error\n", __func__);
+        return RET_FAILURE;
+    }
+
+    memset(&sensor_mode, 0, sizeof(struct vvcam_mode_info_s));
+    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_G_SENSOR_MODE, &sensor_mode);
+    if (ret != 0) {
+        TRACE(IMX678_ERROR, "%s set sensor mode failed", __func__);
+        return RET_FAILURE;
+    }
+    memcpy(&pIMX678Ctx->CurMode, &sensor_mode, sizeof(struct vvcam_mode_info_s));
+    IMX678_UpdateIsiAEInfo(handle);
+
+    TRACE(IMX678_INFO, "%s (exit) \n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiSensorSetStreamingIss(IsiSensorHandle_t handle,
+                                              bool_t on)
+{
+    int ret = 0;
+
+    TRACE(IMX678_INFO, "%s (enter)\n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+    HalContext_t *pHalCtx = (HalContext_t *) pIMX678Ctx->IsiCtx.HalHandle;
+
+    uint32_t status = on;
+    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_STREAM, &status);
+    if (ret != 0){
+        TRACE(IMX678_ERROR, "%s set sensor stream %d error\n", __func__);
+        return RET_FAILURE;
+    }
+
+    TRACE(IMX678_INFO, "%s: set streaming %d\n", __func__, on);
+    TRACE(IMX678_INFO, "%s (exit) \n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiCreateSensorIss(IsiSensorInstanceConfig_t * pConfig)
+{
+    RESULT result = RET_SUCCESS;
+    IMX678_Context_t *pIMX678Ctx;
+
+    TRACE(IMX678_INFO, "%s (enter)\n", __func__);
+
+    if (!pConfig || !pConfig->pSensor || !pConfig->HalHandle)
+        return RET_NULL_POINTER;
+
+    pIMX678Ctx = (IMX678_Context_t *) malloc(sizeof(IMX678_Context_t));
+    if (!pIMX678Ctx)
+        return RET_OUTOFMEM;
+
+    memset(pIMX678Ctx, 0, sizeof(IMX678_Context_t));
+    pIMX678Ctx->IsiCtx.HalHandle = pConfig->HalHandle;
+    pIMX678Ctx->IsiCtx.pSensor   = pConfig->pSensor;
+    pConfig->hSensor = (IsiSensorHandle_t) pIMX678Ctx;
+
+    result = IMX678_IsiSensorSetPowerIss(pIMX678Ctx, BOOL_TRUE);
+    if (result != RET_SUCCESS) {
+        TRACE(IMX678_ERROR, "%s set power error\n", __func__);
+        return RET_FAILURE;
+    }
+    struct vvcam_clk_s clk;
+    memset(&clk, 0, sizeof(struct vvcam_clk_s));
+    result = IMX678_IsiSensorGetClkIss(pIMX678Ctx, &clk);
+    if (result != RET_SUCCESS) {
+        TRACE(IMX678_ERROR, "%s get clk error\n", __func__);
+        return RET_FAILURE;
+    }
+    clk.status = 1;
+    result = IMX678_IsiSensorSetClkIss(pIMX678Ctx, &clk);
+    if (result != RET_SUCCESS) {
+        TRACE(IMX678_ERROR, "%s set clk error\n", __func__);
+        return RET_FAILURE;
+    }
+    result = IMX678_IsiResetSensorIss(pIMX678Ctx);
+    if (result != RET_SUCCESS) {
+        TRACE(IMX678_ERROR, "%s retset sensor error\n", __func__);
+        return RET_FAILURE;
+    }
+
+    IsiSensorMode_t SensorMode;
+    SensorMode.index = pConfig->SensorModeIndex;
+    result = IMX678_IsiSetSensorModeIss(pIMX678Ctx, &SensorMode);
+    if (result != RET_SUCCESS) {
+        TRACE(IMX678_ERROR, "%s set sensor mode error\n", __func__);
+        return RET_FAILURE;
+    }
+
+    TRACE(IMX678_INFO, "%s (exit)\n", __func__);
+
+    return result;
+}
+
+static RESULT IMX678_IsiReleaseSensorIss(IsiSensorHandle_t handle)
+{
+    TRACE(IMX678_INFO, "%s (enter) \n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+    if (pIMX678Ctx == NULL)
+        return (RET_WRONG_HANDLE);
+
+    IMX678_IsiSensorSetStreamingIss(pIMX678Ctx, BOOL_FALSE);
+    struct vvcam_clk_s clk;
+    memset(&clk, 0, sizeof(struct vvcam_clk_s));
+    IMX678_IsiSensorGetClkIss(pIMX678Ctx, &clk);
+    clk.status = 0;
+    IMX678_IsiSensorSetClkIss(pIMX678Ctx, &clk);
+    IMX678_IsiSensorSetPowerIss(pIMX678Ctx, BOOL_FALSE);
+    free(pIMX678Ctx);
+    pIMX678Ctx = NULL;
+
+    TRACE(IMX678_INFO, "%s (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiHalQuerySensorIss(HalHandle_t HalHandle,
+                                          IsiSensorModeInfoArray_t *pSensorMode)
+{
+    int ret = 0;
+
+    TRACE(IMX678_INFO, "%s (enter) \n", __func__);
+
+    if (HalHandle == NULL || pSensorMode == NULL)
+        return RET_NULL_POINTER;
+
+    HalContext_t *pHalCtx = (HalContext_t *)HalHandle;
+    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_QUERY, pSensorMode);
+    if (ret != 0) {
+        TRACE(IMX678_ERROR, "%s: query sensor mode info error!\n", __func__);
+        return RET_FAILURE;
+    }
+
+    TRACE(IMX678_INFO, "%s (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiQuerySensorIss(IsiSensorHandle_t handle,
+                                       IsiSensorModeInfoArray_t *pSensorMode)
+{
+    RESULT result = RET_SUCCESS;
+
+    TRACE(IMX678_INFO, "%s (enter) \n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+
+    result = IMX678_IsiHalQuerySensorIss(pIMX678Ctx->IsiCtx.HalHandle,
+                                         pSensorMode);
+    if (result != RET_SUCCESS)
+        TRACE(IMX678_ERROR, "%s: query sensor mode info error!\n", __func__);
+
+    TRACE(IMX678_INFO, "%s (exit)\n", __func__);
+
+    return result;
+}
+
+static RESULT IMX678_IsiGetCapsIss(IsiSensorHandle_t handle,
+                                   IsiSensorCaps_t * pIsiSensorCaps)
+{
+    RESULT result = RET_SUCCESS;
+
+    TRACE(IMX678_INFO, "%s (enter) \n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+
+    if (pIsiSensorCaps == NULL)
+        return RET_NULL_POINTER;
+
+    IsiSensorModeInfoArray_t SensorModeInfo;
+    memset(&SensorModeInfo, 0, sizeof(IsiSensorModeInfoArray_t));
+    result = IMX678_IsiQuerySensorIss(handle, &SensorModeInfo);
+    if (result != RET_SUCCESS) {
+        TRACE(IMX678_ERROR, "%s: query sensor mode info error!\n", __func__);
+        return RET_FAILURE;
+    }
+
+    pIsiSensorCaps->FieldSelection    = ISI_FIELDSEL_BOTH;
+    pIsiSensorCaps->YCSequence        = ISI_YCSEQ_YCBYCR;
+    pIsiSensorCaps->Conv422           = ISI_CONV422_NOCOSITED;
+    pIsiSensorCaps->HPol              = ISI_HPOL_REFPOS;
+    pIsiSensorCaps->VPol              = ISI_VPOL_NEG;
+    pIsiSensorCaps->Edge              = ISI_EDGE_RISING;
+    pIsiSensorCaps->supportModeNum    = SensorModeInfo.count;
+    pIsiSensorCaps->currentMode       = pIMX678Ctx->CurMode.index;
+
+    TRACE(IMX678_INFO, "%s (exit)\n", __func__);
+
+    return result;
+}
+
+static RESULT IMX678_IsiSetupSensorIss(IsiSensorHandle_t handle,
+                                       const IsiSensorCaps_t *pIsiSensorCaps )
+{
+    int ret = 0;
+    RESULT result = RET_SUCCESS;
+
+    TRACE(IMX678_INFO, "%s (enter)\n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+    HalContext_t *pHalCtx = (HalContext_t *) pIMX678Ctx->IsiCtx.HalHandle;
+
+    if (pIsiSensorCaps == NULL)
+        return RET_NULL_POINTER;
+
+    if (pIsiSensorCaps->currentMode != pIMX678Ctx->CurMode.index) {
+        IsiSensorMode_t SensorMode;
+        memset(&SensorMode, 0, sizeof(IsiSensorMode_t));
+        SensorMode.index = pIsiSensorCaps->currentMode;
+        result = IMX678_IsiSetSensorModeIss(handle, &SensorMode);
+        if (result != RET_SUCCESS) {
+            TRACE(IMX678_ERROR, "%s:set sensor mode %d failed!\n",
+                  __func__, SensorMode.index);
+            return result;
+        }
+    }
+
+#ifdef SUBDEV_V4L2
+    struct v4l2_subdev_format format;
+    memset(&format, 0, sizeof(struct v4l2_subdev_format));
+    format.format.width  = pIMX678Ctx->CurMode.size.bounds_width;
+    format.format.height = pIMX678Ctx->CurMode.size.bounds_height;
+    format.which = V4L2_SUBDEV_FORMAT_ACTIVE;
+    format.pad = 0;
+    ret = ioctl(pHalCtx->sensor_fd, VIDIOC_SUBDEV_S_FMT, &format);
+    if (ret != 0){
+        TRACE(IMX678_ERROR, "%s: sensor set format error!\n", __func__);
+        return RET_FAILURE;
+    }
+#else
+    ret = ioctrl(pHalCtx->sensor_fd, VVSENSORIOC_S_INIT, NULL);
+    if (ret != 0){
+        TRACE(IMX678_ERROR, "%s: sensor init error!\n", __func__);
+        return RET_FAILURE;
+    }
+#endif
+
+    TRACE(IMX678_INFO, "%s (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiGetSensorRevisionIss(IsiSensorHandle_t handle, uint32_t *pValue)
+{
+    int ret = 0;
+
+    TRACE(IMX678_INFO, "%s (enter)\n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+    HalContext_t *pHalCtx = (HalContext_t *) pIMX678Ctx->IsiCtx.HalHandle;
+
+    if (pValue == NULL)
+        return RET_NULL_POINTER;
+
+    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_G_CHIP_ID, pValue);
+    if (ret != 0) {
+        TRACE(IMX678_ERROR, "%s: get chip id error!\n", __func__);
+        return RET_FAILURE;
+    }
+
+    TRACE(IMX678_INFO, "%s (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiCheckSensorConnectionIss(IsiSensorHandle_t handle)
+{
+    RESULT result = RET_SUCCESS;
+
+    TRACE(IMX678_INFO, "%s (enter)\n", __func__);
+
+    uint32_t ChipId = 0;
+    result = IMX678_IsiGetSensorRevisionIss(handle, &ChipId);
+    if (result != RET_SUCCESS) {
+        TRACE(IMX678_ERROR, "%s:get sensor chip id error!\n",__func__);
+        return RET_FAILURE;
+    }
+
+    if (ChipId != 678) {
+        TRACE(IMX678_ERROR,
+            "%s:ChipID=678,while read sensor Id=0x%x error!\n",
+             __func__, ChipId);
+        return RET_FAILURE;
+    }
+
+    TRACE(IMX678_INFO, "%s (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiGetAeInfoIss(IsiSensorHandle_t handle,
+                                     IsiSensorAeInfo_t *pAeInfo)
+{
+    TRACE(IMX678_INFO, "%s (enter)\n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+
+    if (pAeInfo == NULL)
+        return RET_NULL_POINTER;
+
+    memcpy(pAeInfo, &pIMX678Ctx->AeInfo, sizeof(IsiSensorAeInfo_t));
+
+    TRACE(IMX678_INFO, "%s (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiSetHdrRatioIss(IsiSensorHandle_t handle,
+                                       uint8_t hdrRatioNum,
+                                       uint32_t HdrRatio[])
+{
+    int ret = 0;
+
+    TRACE(IMX678_INFO, "%s (enter)\n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+    HalContext_t *pHalCtx = (HalContext_t *) pIMX678Ctx->IsiCtx.HalHandle;
+
+    struct sensor_hdr_artio_s hdr_ratio;
+    if (hdrRatioNum == 2) {
+        hdr_ratio.ratio_s_vs = HdrRatio[1];
+        hdr_ratio.ratio_l_s = HdrRatio[0];
+    }else {
+        hdr_ratio.ratio_s_vs = HdrRatio[0];
+        hdr_ratio.ratio_l_s = 0;
+    }
+
+    if (hdr_ratio.ratio_s_vs == pIMX678Ctx->CurMode.ae_info.hdr_ratio.ratio_s_vs &&
+        hdr_ratio.ratio_l_s == pIMX678Ctx->CurMode.ae_info.hdr_ratio.ratio_l_s)
+        return RET_SUCCESS;
+
+    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_HDR_RADIO, &hdr_ratio);
+    if (ret != 0) {
+        TRACE(IMX678_ERROR,"%s: set hdr ratio error!\n", __func__);
+        return RET_FAILURE;
+    }
+    struct vvcam_mode_info_s sensor_mode;
+    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_G_SENSOR_MODE, &sensor_mode);
+    if (ret != 0) {
+        TRACE(IMX678_ERROR,"%s: get mode info error!\n", __func__);
+        return RET_FAILURE;
+    }
+
+    memcpy(&pIMX678Ctx->CurMode, &sensor_mode, sizeof (struct vvcam_mode_info_s));
+    IMX678_UpdateIsiAEInfo(handle);
+
+    TRACE(IMX678_INFO, "%s (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiGetIntegrationTimeIss(IsiSensorHandle_t handle,
+                                   IsiSensorIntTime_t *pIntegrationTime)
+{
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+
+    TRACE(IMX678_INFO, "%s (enter)\n", __func__);
+
+    memcpy(pIntegrationTime, &pIMX678Ctx->IntTime, sizeof(IsiSensorIntTime_t));
+
+    TRACE(IMX678_INFO, "%s (exit)\n", __func__);
+
+    return RET_SUCCESS;
+
+}
+
+static RESULT IMX678_IsiSetIntegrationTimeIss(IsiSensorHandle_t handle,
+                                   IsiSensorIntTime_t *pIntegrationTime)
+{
+    int ret = 0;
+    uint32_t LongIntLine;
+    uint32_t IntLine;
+    uint32_t ShortIntLine;
+    uint32_t oneLineTime;
+
+    TRACE(IMX678_INFO, "%s (enter)\n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+    HalContext_t *pHalCtx = (HalContext_t *) pIMX678Ctx->IsiCtx.HalHandle;
+    printf("\n\nAAAAAAAAAAAAAAA %u\n\n", pIntegrationTime->IntegrationTime.linearInt);
+    if (pIntegrationTime == NULL)
+        return RET_NULL_POINTER;
+
+    oneLineTime =  pIMX678Ctx->AeInfo.oneLineExpTime;
+    pIMX678Ctx->IntTime.expoFrmType = pIntegrationTime->expoFrmType;
+
+    switch (pIntegrationTime->expoFrmType) {
+        case ISI_EXPO_FRAME_TYPE_1FRAME:
+            IntLine = pIntegrationTime->IntegrationTime.linearInt;
+            if (IntLine != pIMX678Ctx->IntLine) {
+                printf("\n\ngoing into S_EXP ioctl %u\n\n", IntLine);
+                ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_EXP, &IntLine);
+                if (ret != 0) {
+                    TRACE(IMX678_ERROR,"%s:set sensor linear exp error!\n", __func__);
+                    return RET_FAILURE;
+                }
+               pIMX678Ctx->IntLine = IntLine;
+            }
+            TRACE(IMX678_INFO, "%s set linear exp %d \n", __func__,IntLine);
+            pIMX678Ctx->IntTime.IntegrationTime.linearInt =  IntLine * oneLineTime;
+            break;
+        case ISI_EXPO_FRAME_TYPE_2FRAMES:
+            IntLine = pIntegrationTime->IntegrationTime.dualInt.dualIntTime;
+            if (IntLine != pIMX678Ctx->IntLine) {
+                ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_EXP, &IntLine);
+                if (ret != 0) {
+                    TRACE(IMX678_ERROR,"%s:set sensor dual exp error!\n", __func__);
+                    return RET_FAILURE;
+                }
+                pIMX678Ctx->IntLine = IntLine;
+            }
+
+            if (pIMX678Ctx->CurMode.stitching_mode != SENSOR_STITCHING_DUAL_DCG_NOWAIT) {
+                ShortIntLine = pIntegrationTime->IntegrationTime.dualInt.dualSIntTime;
+                if (ShortIntLine != pIMX678Ctx->ShortIntLine) {
+                    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_VSEXP, &ShortIntLine);
+                    if (ret != 0) {
+                        TRACE(IMX678_ERROR,"%s:set sensor dual vsexp error!\n", __func__);
+                        return RET_FAILURE;
+                    }
+                    pIMX678Ctx->ShortIntLine = ShortIntLine;
+                }
+            } else {
+                ShortIntLine = IntLine;
+                pIMX678Ctx->ShortIntLine = ShortIntLine;
+            }
+            TRACE(IMX678_INFO, "%s set dual exp %d short_exp %d\n", __func__, IntLine, ShortIntLine);
+            pIMX678Ctx->IntTime.IntegrationTime.dualInt.dualIntTime  = IntLine + oneLineTime;
+            pIMX678Ctx->IntTime.IntegrationTime.dualInt.dualSIntTime = ShortIntLine + oneLineTime;
+            break;
+        case ISI_EXPO_FRAME_TYPE_3FRAMES:
+            if (pIMX678Ctx->CurMode.stitching_mode != SENSOR_STITCHING_DUAL_DCG_NOWAIT) {
+                LongIntLine = pIntegrationTime->IntegrationTime.triInt.triLIntTime;
+                if (LongIntLine != pIMX678Ctx->LongIntLine) {
+                    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_LONG_EXP, &LongIntLine);
+                    if (ret != 0) {
+                        TRACE(IMX678_ERROR,"%s:set sensor tri lexp error!\n", __func__);
+                        return RET_FAILURE;
+                    }
+                    pIMX678Ctx->LongIntLine = LongIntLine;
+                }
+            } else {
+                LongIntLine = pIntegrationTime->IntegrationTime.triInt.triIntTime;
+                pIMX678Ctx->LongIntLine = LongIntLine;
+            }
+
+            IntLine = pIntegrationTime->IntegrationTime.triInt.triIntTime;
+            if (IntLine != pIMX678Ctx->IntLine) {
+                ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_EXP, &IntLine);
+                if (ret != 0) {
+                    TRACE(IMX678_ERROR,"%s:set sensor tri exp error!\n", __func__);
+                    return RET_FAILURE;
+                }
+                pIMX678Ctx->IntLine = IntLine;
+            }
+            
+            ShortIntLine = pIntegrationTime->IntegrationTime.triInt.triSIntTime;
+            if (ShortIntLine != pIMX678Ctx->ShortIntLine) {
+                ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_VSEXP, &ShortIntLine);
+                if (ret != 0) {
+                    TRACE(IMX678_ERROR,"%s:set sensor tri vsexp error!\n", __func__);
+                    return RET_FAILURE;
+                }
+                pIMX678Ctx->ShortIntLine = ShortIntLine;
+            }
+            TRACE(IMX678_INFO, "%s set tri long exp %d exp %d short_exp %d\n", __func__, LongIntLine, IntLine, ShortIntLine);
+            pIMX678Ctx->IntTime.IntegrationTime.triInt.triLIntTime = LongIntLine + oneLineTime;
+            pIMX678Ctx->IntTime.IntegrationTime.triInt.triIntTime = IntLine + oneLineTime;
+            pIMX678Ctx->IntTime.IntegrationTime.triInt.triSIntTime = ShortIntLine + oneLineTime;
+            break;
+        default:
+            return RET_FAILURE;
+            break;
+    }
+    
+    TRACE(IMX678_INFO, "%s (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiGetGainIss(IsiSensorHandle_t handle, IsiSensorGain_t *pGain)
+{
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+
+    TRACE(IMX678_INFO, "%s (enter)\n", __func__);
+
+    if (pGain == NULL)
+        return RET_NULL_POINTER;
+    memcpy(pGain, &pIMX678Ctx->SensorGain, sizeof(IsiSensorGain_t));
+
+    TRACE(IMX678_INFO, "%s (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiSetGainIss(IsiSensorHandle_t handle, IsiSensorGain_t *pGain)
+{
+    int ret = 0;
+    uint32_t LongGain;
+    uint32_t Gain;
+    uint32_t ShortGain;
+
+    TRACE(IMX678_INFO, "%s (enter)\n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+    HalContext_t *pHalCtx = (HalContext_t *) pIMX678Ctx->IsiCtx.HalHandle;
+
+    if (pGain == NULL)
+        return RET_NULL_POINTER;
+
+    pIMX678Ctx->SensorGain.expoFrmType = pGain->expoFrmType;
+    switch (pGain->expoFrmType) {
+        case ISI_EXPO_FRAME_TYPE_1FRAME:
+            Gain = pGain->gain.linearGainParas;
+            if (pIMX678Ctx->SensorGain.gain.linearGainParas != Gain) {
+                ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_GAIN, &Gain);
+                if (ret != 0) {
+                    TRACE(IMX678_ERROR,"%s:set sensor linear gain error!\n", __func__);
+                    return RET_FAILURE;
+                }
+            }
+            pIMX678Ctx->SensorGain.gain.linearGainParas = pGain->gain.linearGainParas;
+            TRACE(IMX678_INFO, "%s set linear gain %d\n", __func__,pGain->gain.linearGainParas);
+            break;
+        case ISI_EXPO_FRAME_TYPE_2FRAMES:
+            Gain = pGain->gain.dualGainParas.dualGain;
+            if (pIMX678Ctx->SensorGain.gain.dualGainParas.dualGain != Gain) {
+                if (pIMX678Ctx->CurMode.stitching_mode != SENSOR_STITCHING_DUAL_DCG_NOWAIT) {
+                    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_GAIN, &Gain);
+                } else {
+                    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_LONG_GAIN, &Gain);
+                }
+                if (ret != 0) {
+                    TRACE(IMX678_ERROR,"%s:set sensor dual gain error!\n", __func__);
+                    return RET_FAILURE;
+                }
+            }
+
+            ShortGain = pGain->gain.dualGainParas.dualSGain;
+            if (pIMX678Ctx->SensorGain.gain.dualGainParas.dualSGain != ShortGain) {
+                if (pIMX678Ctx->CurMode.stitching_mode != SENSOR_STITCHING_DUAL_DCG_NOWAIT) {
+                    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_VSGAIN, &ShortGain);
+                } else {
+                    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_GAIN, &ShortGain);
+                }
+                if (ret != 0) {
+                    TRACE(IMX678_ERROR,"%s:set sensor dual vs gain error!\n", __func__);
+                    return RET_FAILURE;
+                }
+            }
+            TRACE(IMX678_INFO,"%s:set gain%d short gain %d!\n", __func__,Gain,ShortGain);
+            pIMX678Ctx->SensorGain.gain.dualGainParas.dualGain = Gain;
+            pIMX678Ctx->SensorGain.gain.dualGainParas.dualSGain = ShortGain;
+            break;
+        case ISI_EXPO_FRAME_TYPE_3FRAMES:
+            LongGain = pGain->gain.triGainParas.triLGain;
+            if (pIMX678Ctx->SensorGain.gain.triGainParas.triLGain != LongGain) {
+                ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_LONG_GAIN, &LongGain);
+                if (ret != 0) {
+                    TRACE(IMX678_ERROR,"%s:set sensor tri gain error!\n", __func__);
+                    return RET_FAILURE;
+                }
+            }
+            Gain = pGain->gain.triGainParas.triGain;
+            if (pIMX678Ctx->SensorGain.gain.triGainParas.triGain != Gain) {
+                ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_GAIN, &Gain);
+                if (ret != 0) {
+                    TRACE(IMX678_ERROR,"%s:set sensor tri gain error!\n", __func__);
+                    return RET_FAILURE;
+                }
+            }
+
+            ShortGain = pGain->gain.triGainParas.triSGain;
+            if (pIMX678Ctx->SensorGain.gain.triGainParas.triSGain != ShortGain) {
+                ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_VSGAIN, &ShortGain);
+                if (ret != 0) {
+                    TRACE(IMX678_ERROR,"%s:set sensor tri vs gain error!\n", __func__);
+                    return RET_FAILURE;
+                }
+            }
+            TRACE(IMX678_INFO,"%s:set long gain %d gain%d short gain %d!\n", __func__, LongGain, Gain, ShortGain);
+            pIMX678Ctx->SensorGain.gain.triGainParas.triLGain = LongGain;
+            pIMX678Ctx->SensorGain.gain.triGainParas.triGain = Gain;
+            pIMX678Ctx->SensorGain.gain.triGainParas.triSGain = ShortGain;
+            break;
+        default:
+            return RET_FAILURE;
+            break;
+    }
+
+    TRACE(IMX678_INFO, "%s (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+
+
+static RESULT IMX678_IsiGetSensorFpsIss(IsiSensorHandle_t handle, uint32_t * pfps)
+{
+    TRACE(IMX678_INFO, "%s: (enter)\n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+
+    if (pfps == NULL)
+        return RET_NULL_POINTER;
+
+    *pfps = pIMX678Ctx->CurMode.ae_info.cur_fps;
+
+    TRACE(IMX678_INFO, "%s: (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiSetSensorFpsIss(IsiSensorHandle_t handle, uint32_t fps)
+{
+    int ret = 0;
+
+    TRACE(IMX678_INFO, "%s: (enter)\n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+    HalContext_t *pHalCtx = (HalContext_t *) pIMX678Ctx->IsiCtx.HalHandle;
+
+    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_FPS, &fps);
+    if (ret != 0) {
+        TRACE(IMX678_ERROR,"%s:set sensor fps error!\n", __func__);
+        return RET_FAILURE;
+    }
+    struct vvcam_mode_info_s SensorMode;
+    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_G_SENSOR_MODE, &SensorMode);
+    if (ret != 0) {
+        TRACE(IMX678_ERROR,"%s:get sensor mode error!\n", __func__);
+        return RET_FAILURE;
+    }
+    memcpy(&pIMX678Ctx->CurMode, &SensorMode, sizeof(struct vvcam_mode_info_s));
+    IMX678_UpdateIsiAEInfo(handle);
+
+    TRACE(IMX678_INFO, "%s: (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+static RESULT IMX678_IsiSetSensorAfpsLimitsIss(IsiSensorHandle_t handle, uint32_t minAfps)
+{
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+
+    TRACE(IMX678_INFO, "%s: (enter)\n", __func__);
+
+    if ((minAfps > pIMX678Ctx->CurMode.ae_info.max_fps) ||
+        (minAfps < pIMX678Ctx->CurMode.ae_info.min_fps))
+        return RET_FAILURE;
+    pIMX678Ctx->minAfps = minAfps;
+    pIMX678Ctx->CurMode.ae_info.min_afps = minAfps;
+
+    TRACE(IMX678_INFO, "%s: (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiGetSensorIspStatusIss(IsiSensorHandle_t handle,
+                               IsiSensorIspStatus_t *pSensorIspStatus)
+{
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+
+    TRACE(IMX678_INFO, "%s: (enter)\n", __func__);
+
+    if (pIMX678Ctx->CurMode.hdr_mode == SENSOR_MODE_HDR_NATIVE) {
+        pSensorIspStatus->useSensorAWB = true;
+        pSensorIspStatus->useSensorBLC = true;
+    } else {
+        pSensorIspStatus->useSensorAWB = false;
+        pSensorIspStatus->useSensorBLC = false;
+    }
+
+    TRACE(IMX678_INFO, "%s: (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+#ifndef ISI_LITE
+static RESULT IMX678_IsiSensorSetBlcIss(IsiSensorHandle_t handle, IsiSensorBlc_t * pBlc)
+{
+    int32_t ret = 0;
+
+    TRACE(IMX678_INFO, "%s: (enter)\n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+    HalContext_t *pHalCtx = (HalContext_t *) pIMX678Ctx->IsiCtx.HalHandle;
+
+    if (pBlc == NULL)
+        return RET_NULL_POINTER;
+
+    struct sensor_blc_s SensorBlc;
+    SensorBlc.red = pBlc->red;
+    SensorBlc.gb = pBlc->gb;
+    SensorBlc.gr = pBlc->gr;
+    SensorBlc.blue = pBlc->blue;
+
+    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_BLC, &SensorBlc);
+    if (ret != 0) {
+        TRACE(IMX678_ERROR, "%s: set wb error\n", __func__);
+        return RET_FAILURE;
+    }
+
+    TRACE(IMX678_INFO, "%s: (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiSensorSetWBIss(IsiSensorHandle_t handle, IsiSensorWB_t *pWb)
+{
+    int32_t ret = 0;
+
+    TRACE(IMX678_INFO, "%s: (enter)\n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+    HalContext_t *pHalCtx = (HalContext_t *) pIMX678Ctx->IsiCtx.HalHandle;
+
+    if (pWb == NULL)
+        return RET_NULL_POINTER;
+
+    struct sensor_white_balance_s SensorWb;
+    SensorWb.r_gain = pWb->r_gain;
+    SensorWb.gr_gain = pWb->gr_gain;
+    SensorWb.gb_gain = pWb->gb_gain;
+    SensorWb.b_gain = pWb->b_gain;
+    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_WB, &SensorWb);
+    if (ret != 0) {
+        TRACE(IMX678_ERROR, "%s: set wb error\n", __func__);
+        return RET_FAILURE;
+    }
+
+    TRACE(IMX678_INFO, "%s: (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiSensorGetExpandCurveIss(IsiSensorHandle_t handle, IsiSensorExpandCurve_t *pExpandCurve)
+{
+    int32_t ret = 0;
+
+    TRACE(IMX678_INFO, "%s: (enter)\n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+    HalContext_t *pHalCtx = (HalContext_t *) pIMX678Ctx->IsiCtx.HalHandle;
+
+    if (pExpandCurve == NULL)
+        return RET_NULL_POINTER;
+
+    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_G_EXPAND_CURVE, pExpandCurve);
+    if (ret != 0) {
+        TRACE(IMX678_ERROR, "%s: get  expand cure error\n", __func__);
+        return RET_FAILURE;
+    }
+
+    TRACE(IMX678_INFO, "%s: (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiSetTestPatternIss(IsiSensorHandle_t handle,
+                                       IsiSensorTpgMode_e  tpgMode)
+{
+    int32_t ret = 0;
+
+    TRACE( IMX678_INFO, "%s (enter)\n", __func__);
+
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+    HalContext_t *pHalCtx = (HalContext_t *) pIMX678Ctx->IsiCtx.HalHandle;
+
+    struct sensor_test_pattern_s TestPattern;
+    if (tpgMode == ISI_TPG_DISABLE) {
+        TestPattern.enable = 0;
+        TestPattern.pattern = 0;
+    } else {
+        TestPattern.enable = 1;
+        TestPattern.pattern = (uint32_t)tpgMode - 1;
+    }
+
+    ret = ioctl(pHalCtx->sensor_fd, VVSENSORIOC_S_TEST_PATTERN, &TestPattern);
+    if (ret != 0)
+    {
+        TRACE(IMX678_ERROR, "%s: set test pattern %d error\n", __func__, tpgMode);
+        return RET_FAILURE;
+    }
+
+    TRACE(IMX678_INFO, "%s: test pattern enable[%d] mode[%d]\n", __func__, TestPattern.enable, TestPattern.pattern);
+
+    TRACE(IMX678_INFO, "%s: (exit)\n", __func__);
+
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiFocusSetupIss(IsiSensorHandle_t handle)
+{
+    TRACE( IMX678_INFO, "%s (enter)\n", __func__);
+    TRACE(IMX678_INFO, "%s: (exit)\n", __func__);
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiFocusReleaseIss(IsiSensorHandle_t handle)
+{
+    TRACE( IMX678_INFO, "%s (enter)\n", __func__);
+    TRACE(IMX678_INFO, "%s: (exit)\n", __func__);
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiFocusGetIss(IsiSensorHandle_t handle, IsiFocusPos_t *pPos)
+{
+    TRACE( IMX678_INFO, "%s (enter)\n", __func__);
+    TRACE(IMX678_INFO, "%s: (exit)\n", __func__);
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiFocusSetIss(IsiSensorHandle_t handle, IsiFocusPos_t *pPos)
+{
+    TRACE( IMX678_INFO, "%s (enter)\n", __func__);
+    TRACE(IMX678_INFO, "%s: (exit)\n", __func__);
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiGetFocusCalibrateIss(IsiSensorHandle_t handle, IsiFoucsCalibAttr_t *pFocusCalib)
+{
+    TRACE( IMX678_INFO, "%s (enter)\n", __func__);
+    TRACE(IMX678_INFO, "%s: (exit)\n", __func__);
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiGetAeStartExposureIs(IsiSensorHandle_t handle, uint64_t *pExposure)
+{
+    TRACE( IMX678_INFO, "%s (enter)\n", __func__);
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+
+    if (pIMX678Ctx->AEStartExposure == 0) {
+        pIMX678Ctx->AEStartExposure =
+            (uint64_t)pIMX678Ctx->CurMode.ae_info.start_exposure *
+            pIMX678Ctx->CurMode.ae_info.one_line_exp_time_ns / 1000;
+           
+    }
+    *pExposure =  pIMX678Ctx->AEStartExposure;
+    TRACE(IMX678_INFO, "%s:get start exposure %d\n", __func__, pIMX678Ctx->AEStartExposure);
+
+    TRACE(IMX678_INFO, "%s: (exit)\n", __func__);
+    return RET_SUCCESS;
+}
+
+static RESULT IMX678_IsiSetAeStartExposureIs(IsiSensorHandle_t handle, uint64_t exposure)
+{
+    TRACE( IMX678_INFO, "%s (enter)\n", __func__);
+    IMX678_Context_t *pIMX678Ctx = (IMX678_Context_t *) handle;
+
+    pIMX678Ctx->AEStartExposure = exposure;
+    TRACE(IMX678_INFO, "set start exposure %d\n", __func__,pIMX678Ctx->AEStartExposure);
+    TRACE(IMX678_INFO, "%s: (exit)\n", __func__);
+    return RET_SUCCESS;
+}
+#endif
+
+RESULT IMX678_IsiGetSensorIss(IsiSensor_t *pIsiSensor)
+{
+    TRACE( IMX678_INFO, "%s (enter)\n", __func__);
+
+    if (pIsiSensor == NULL)
+        return RET_NULL_POINTER;
+     pIsiSensor->pszName                         = SensorName;
+     pIsiSensor->pIsiSensorSetPowerIss           = IMX678_IsiSensorSetPowerIss;
+     pIsiSensor->pIsiCreateSensorIss             = IMX678_IsiCreateSensorIss;
+     pIsiSensor->pIsiReleaseSensorIss            = IMX678_IsiReleaseSensorIss;
+     pIsiSensor->pIsiRegisterReadIss             = IMX678_IsiRegisterReadIss;
+     pIsiSensor->pIsiRegisterWriteIss            = IMX678_IsiRegisterWriteIss;
+     pIsiSensor->pIsiGetSensorModeIss            = IMX678_IsiGetSensorModeIss;
+     pIsiSensor->pIsiSetSensorModeIss            = IMX678_IsiSetSensorModeIss;
+     pIsiSensor->pIsiQuerySensorIss              = IMX678_IsiQuerySensorIss;
+     pIsiSensor->pIsiGetCapsIss                  = IMX678_IsiGetCapsIss;
+     pIsiSensor->pIsiSetupSensorIss              = IMX678_IsiSetupSensorIss;
+     pIsiSensor->pIsiGetSensorRevisionIss        = IMX678_IsiGetSensorRevisionIss;
+     pIsiSensor->pIsiCheckSensorConnectionIss    = IMX678_IsiCheckSensorConnectionIss;
+     pIsiSensor->pIsiSensorSetStreamingIss       = IMX678_IsiSensorSetStreamingIss;
+     pIsiSensor->pIsiGetAeInfoIss                = IMX678_IsiGetAeInfoIss;
+     pIsiSensor->pIsiSetHdrRatioIss              = IMX678_IsiSetHdrRatioIss;
+     pIsiSensor->pIsiGetIntegrationTimeIss       = IMX678_IsiGetIntegrationTimeIss;
+     pIsiSensor->pIsiSetIntegrationTimeIss       = IMX678_IsiSetIntegrationTimeIss;
+     pIsiSensor->pIsiGetGainIss                  = IMX678_IsiGetGainIss;
+     pIsiSensor->pIsiSetGainIss                  = IMX678_IsiSetGainIss;
+     pIsiSensor->pIsiGetSensorFpsIss             = IMX678_IsiGetSensorFpsIss;
+     pIsiSensor->pIsiSetSensorFpsIss             = IMX678_IsiSetSensorFpsIss;
+     pIsiSensor->pIsiSetSensorAfpsLimitsIss      = IMX678_IsiSetSensorAfpsLimitsIss;
+     pIsiSensor->pIsiGetSensorIspStatusIss       = IMX678_IsiGetSensorIspStatusIss;
+#ifndef ISI_LITE
+    pIsiSensor->pIsiSensorSetBlcIss              = IMX678_IsiSensorSetBlcIss;
+    pIsiSensor->pIsiSensorSetWBIss               = IMX678_IsiSensorSetWBIss;
+    pIsiSensor->pIsiSensorGetExpandCurveIss      = IMX678_IsiSensorGetExpandCurveIss;
+    pIsiSensor->pIsiActivateTestPatternIss       = IMX678_IsiSetTestPatternIss;
+    pIsiSensor->pIsiFocusSetupIss                = IMX678_IsiFocusSetupIss;
+    pIsiSensor->pIsiFocusReleaseIss              = IMX678_IsiFocusReleaseIss;
+    pIsiSensor->pIsiFocusSetIss                  = IMX678_IsiFocusSetIss;
+    pIsiSensor->pIsiFocusGetIss                  = IMX678_IsiFocusGetIss;
+    pIsiSensor->pIsiGetFocusCalibrateIss         = IMX678_IsiGetFocusCalibrateIss;
+    pIsiSensor->pIsiSetAeStartExposureIss        = IMX678_IsiSetAeStartExposureIs;
+    pIsiSensor->pIsiGetAeStartExposureIss        = IMX678_IsiGetAeStartExposureIs;
+#endif
+    TRACE( IMX678_INFO, "%s (exit)\n", __func__);
+    return RET_SUCCESS;
+}
+
+/*****************************************************************************
+* each sensor driver need declare this struct for isi load
+*****************************************************************************/
+IsiCamDrvConfig_t IsiCamDrvConfig = {
+    .CameraDriverID = 0x0678,
+    .pIsiHalQuerySensor = IMX678_IsiHalQuerySensorIss,
+    .pfIsiGetSensorIss = IMX678_IsiGetSensorIss,
+};
-- 
2.25.1

